{
    "version": 3,
    "terraform_version": "0.11.8",
    "serial": 9,
    "lineage": "df524289-052a-04d5-705e-877fc8958041",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "east-1"
            ],
            "outputs": {
                "artifact-output": {
                    "sensitive": false,
                    "type": "string",
                    "value": "resources/em-accord-api/35/em-accord-lambda-python.zip"
                }
            },
            "resources": {
                "artifactory_artifact.artifact_api": {
                    "type": "artifactory_artifact",
                    "depends_on": [],
                    "primary": {
                        "id": "deploy/em-accord-api/35/em-accord-lambda-python.zip",
                        "attributes": {
                            "flatten": "false",
                            "id": "deploy/em-accord-api/35/em-accord-lambda-python.zip",
                            "output": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "output_dir": "resources",
                            "repository_path": "deploy/em-accord-api/35/em-accord-lambda-python.zip"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.artifactory"
                },
                "aws_acm_certificate.cert": {
                    "type": "aws_acm_certificate",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:acm:us-east-1:489867994332:certificate/a0598c29-526f-4933-8f73-b9600450b22f",
                        "attributes": {
                            "arn": "arn:aws:acm:us-east-1:489867994332:certificate/a0598c29-526f-4933-8f73-b9600450b22f",
                            "domain_name": "consul.us-east-1.accord.ellieservices.com",
                            "domain_validation_options.#": "3",
                            "domain_validation_options.0.domain_name": "consul.us-east-1.accord.ellieservices.com",
                            "domain_validation_options.0.resource_record_name": "_ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com.",
                            "domain_validation_options.0.resource_record_type": "CNAME",
                            "domain_validation_options.0.resource_record_value": "_a6cb57af13bb37b33dbd35ae7fe7a089.tljzshvwok.acm-validations.aws.",
                            "domain_validation_options.1.domain_name": "api.us-east-1.accord.ellieservices.com",
                            "domain_validation_options.1.resource_record_name": "_c5bb4b4c9431246f439b926ce3eee464.api.us-east-1.accord.ellieservices.com.",
                            "domain_validation_options.1.resource_record_type": "CNAME",
                            "domain_validation_options.1.resource_record_value": "_e693d2ef8f11e2c67d650add2a3768ff.tljzshvwok.acm-validations.aws.",
                            "domain_validation_options.2.domain_name": "consul.us-west-2.accord.ellieservices.com",
                            "domain_validation_options.2.resource_record_name": "_d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com.",
                            "domain_validation_options.2.resource_record_type": "CNAME",
                            "domain_validation_options.2.resource_record_value": "_8c38a77da34ea1b9c7c9bdd98cd769b4.tljzshvwok.acm-validations.aws.",
                            "id": "arn:aws:acm:us-east-1:489867994332:certificate/a0598c29-526f-4933-8f73-b9600450b22f",
                            "subject_alternative_names.#": "2",
                            "subject_alternative_names.0": "api.us-east-1.accord.ellieservices.com",
                            "subject_alternative_names.1": "consul.us-west-2.accord.ellieservices.com",
                            "tags.%": "0",
                            "validation_emails.#": "0",
                            "validation_method": "DNS"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_acm_certificate_validation.cert": {
                    "type": "aws_acm_certificate_validation",
                    "depends_on": [
                        "aws_acm_certificate.cert",
                        "aws_route53_record.cert_validation",
                        "aws_route53_record.cert_validation_alt1",
                        "aws_route53_record.cert_validation_alt2"
                    ],
                    "primary": {
                        "id": "2018-09-26 23:33:34 +0000 UTC",
                        "attributes": {
                            "certificate_arn": "arn:aws:acm:us-east-1:489867994332:certificate/a0598c29-526f-4933-8f73-b9600450b22f",
                            "id": "2018-09-26 23:33:34 +0000 UTC",
                            "validation_record_fqdns.#": "3",
                            "validation_record_fqdns.1936994174": "_c5bb4b4c9431246f439b926ce3eee464.api.us-east-1.accord.ellieservices.com",
                            "validation_record_fqdns.2360570973": "_ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com",
                            "validation_record_fqdns.3124985036": "_d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 2700000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_api_gateway_base_path_mapping.accord-api-mapping": {
                    "type": "aws_api_gateway_base_path_mapping",
                    "depends_on": [
                        "aws_api_gateway_deployment.accord-deployment",
                        "aws_api_gateway_domain_name.accord-domain",
                        "aws_api_gateway_rest_api.accord-rest-api"
                    ],
                    "primary": {
                        "id": "api.us-east-1.accord.ellieservices.com/",
                        "attributes": {
                            "api_id": "2lunmtyw3h",
                            "base_path": "",
                            "domain_name": "api.us-east-1.accord.ellieservices.com",
                            "id": "api.us-east-1.accord.ellieservices.com/",
                            "stage_name": "prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_api_gateway_deployment.accord-deployment": {
                    "type": "aws_api_gateway_deployment",
                    "depends_on": [],
                    "primary": {
                        "id": "lswpls",
                        "attributes": {
                            "created_date": "2018-11-01T18:29:11Z",
                            "description": "",
                            "execution_arn": "arn:aws:execute-api:us-east-1:489867994332:2lunmtyw3h/prod",
                            "id": "lswpls",
                            "invoke_url": "https://2lunmtyw3h.execute-api.us-east-1.amazonaws.com/prod",
                            "rest_api_id": "2lunmtyw3h",
                            "stage_name": "prod",
                            "variables.%": "1",
                            "variables.deploy_time": "2018-11-01T18:29:11Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_api_gateway_domain_name.accord-domain": {
                    "type": "aws_api_gateway_domain_name",
                    "depends_on": [
                        "aws_acm_certificate_validation.cert"
                    ],
                    "primary": {
                        "id": "api.us-east-1.accord.ellieservices.com",
                        "attributes": {
                            "certificate_arn": "",
                            "certificate_name": "",
                            "certificate_upload_date": "2018-09-26T23:33:45Z",
                            "cloudfront_domain_name": "",
                            "cloudfront_zone_id": "Z2FDTNDATAQYW2",
                            "domain_name": "api.us-east-1.accord.ellieservices.com",
                            "endpoint_configuration.#": "1",
                            "endpoint_configuration.0.types.#": "1",
                            "endpoint_configuration.0.types.0": "REGIONAL",
                            "id": "api.us-east-1.accord.ellieservices.com",
                            "regional_certificate_arn": "arn:aws:acm:us-east-1:489867994332:certificate/a0598c29-526f-4933-8f73-b9600450b22f",
                            "regional_certificate_name": "",
                            "regional_domain_name": "d-jmqww5of3c.execute-api.us-east-1.amazonaws.com",
                            "regional_zone_id": "Z1UJRXOUMOOFQ8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_api_gateway_integration.accord-proxy-integration": {
                    "type": "aws_api_gateway_integration",
                    "depends_on": [
                        "aws_api_gateway_method.api-proxy",
                        "aws_api_gateway_resource.accord-api-resource",
                        "aws_api_gateway_rest_api.accord-rest-api",
                        "aws_lambda_function.accord-lambda-function"
                    ],
                    "primary": {
                        "id": "agi-2lunmtyw3h-zisr0p-ANY",
                        "attributes": {
                            "cache_key_parameters.#": "0",
                            "cache_namespace": "zisr0p",
                            "connection_id": "",
                            "connection_type": "INTERNET",
                            "content_handling": "",
                            "credentials": "",
                            "http_method": "ANY",
                            "id": "agi-2lunmtyw3h-zisr0p-ANY",
                            "integration_http_method": "POST",
                            "passthrough_behavior": "WHEN_NO_MATCH",
                            "request_parameters.%": "0",
                            "request_templates.%": "0",
                            "resource_id": "zisr0p",
                            "rest_api_id": "2lunmtyw3h",
                            "timeout_milliseconds": "29000",
                            "type": "AWS_PROXY",
                            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:489867994332:function:accord-prod-flask/invocations"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_api_gateway_method.api-proxy": {
                    "type": "aws_api_gateway_method",
                    "depends_on": [
                        "aws_api_gateway_resource.accord-api-resource",
                        "aws_api_gateway_rest_api.accord-rest-api"
                    ],
                    "primary": {
                        "id": "agm-2lunmtyw3h-zisr0p-ANY",
                        "attributes": {
                            "api_key_required": "false",
                            "authorization": "NONE",
                            "authorization_scopes.#": "0",
                            "authorizer_id": "",
                            "http_method": "ANY",
                            "id": "agm-2lunmtyw3h-zisr0p-ANY",
                            "request_models.%": "0",
                            "request_parameters.%": "0",
                            "request_validator_id": "",
                            "resource_id": "zisr0p",
                            "rest_api_id": "2lunmtyw3h"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_api_gateway_method_response.200": {
                    "type": "aws_api_gateway_method_response",
                    "depends_on": [
                        "aws_api_gateway_method.api-proxy",
                        "aws_api_gateway_resource.accord-api-resource",
                        "aws_api_gateway_rest_api.accord-rest-api"
                    ],
                    "primary": {
                        "id": "agmr-2lunmtyw3h-zisr0p-ANY-200",
                        "attributes": {
                            "http_method": "ANY",
                            "id": "agmr-2lunmtyw3h-zisr0p-ANY-200",
                            "resource_id": "zisr0p",
                            "response_models.%": "0",
                            "response_parameters.%": "0",
                            "rest_api_id": "2lunmtyw3h",
                            "status_code": "200"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_api_gateway_resource.accord-api-resource": {
                    "type": "aws_api_gateway_resource",
                    "depends_on": [
                        "aws_api_gateway_rest_api.accord-rest-api"
                    ],
                    "primary": {
                        "id": "zisr0p",
                        "attributes": {
                            "id": "zisr0p",
                            "parent_id": "qlsw1xt8q8",
                            "path": "/{proxy+}",
                            "path_part": "{proxy+}",
                            "rest_api_id": "2lunmtyw3h"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_api_gateway_rest_api.accord-rest-api": {
                    "type": "aws_api_gateway_rest_api",
                    "depends_on": [],
                    "primary": {
                        "id": "2lunmtyw3h",
                        "attributes": {
                            "api_key_source": "HEADER",
                            "binary_media_types.#": "0",
                            "created_date": "2018-09-26T23:31:18Z",
                            "description": "",
                            "endpoint_configuration.#": "1",
                            "endpoint_configuration.0.types.#": "1",
                            "endpoint_configuration.0.types.0": "REGIONAL",
                            "execution_arn": "arn:aws:execute-api:us-east-1:489867994332:2lunmtyw3h",
                            "id": "2lunmtyw3h",
                            "minimum_compression_size": "-1",
                            "name": "accord-rest-api-us-east-1-prod",
                            "policy": "",
                            "root_resource_id": "qlsw1xt8q8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_autoscaling_group.consul-cluster": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_elb.consul-cluster",
                        "aws_launch_configuration.consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "consul-cluster-asg-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-east-1:489867994332:autoScalingGroup:1f67c701-4c39-460d-8e21-4717032be368:autoScalingGroupName/consul-cluster-asg-us-east-1-prod",
                            "availability_zones.#": "3",
                            "availability_zones.1305112097": "us-east-1b",
                            "availability_zones.3569565595": "us-east-1a",
                            "availability_zones.986537655": "us-east-1c",
                            "default_cooldown": "300",
                            "desired_capacity": "3",
                            "enabled_metrics.#": "1",
                            "enabled_metrics.3551801763": "GroupInServiceInstances",
                            "force_delete": "false",
                            "health_check_grace_period": "300",
                            "health_check_type": "ELB",
                            "id": "consul-cluster-asg-us-east-1-prod",
                            "launch_configuration": "terraform-20181101182911765000000002",
                            "launch_template.#": "0",
                            "load_balancers.#": "1",
                            "load_balancers.1857699837": "consul-elb-us-east-1-prod",
                            "max_size": "6",
                            "metrics_granularity": "1Minute",
                            "min_elb_capacity": "3",
                            "min_size": "3",
                            "name": "consul-cluster-asg-us-east-1-prod",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "service_linked_role_arn": "arn:aws:iam::489867994332:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
                            "suspended_processes.#": "0",
                            "tag.#": "1",
                            "tag.507097991.key": "Name",
                            "tag.507097991.propagate_at_launch": "true",
                            "tag.507097991.value": "consul-cluster-asg-us-east-1-prod",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "0",
                            "vpc_zone_identifier.#": "3",
                            "vpc_zone_identifier.1802150052": "subnet-4551786a",
                            "vpc_zone_identifier.275736212": "subnet-886b9bc2",
                            "vpc_zone_identifier.3046782357": "subnet-8f7857d2",
                            "wait_for_capacity_timeout": "15m"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_cloudwatch_event_rule.snapshot_interval": {
                    "type": "aws_cloudwatch_event_rule",
                    "depends_on": [],
                    "primary": {
                        "id": "accord-snapshot-interval-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:events:us-east-1:489867994332:rule/accord-snapshot-interval-us-east-1-prod",
                            "description": "Sets the interval for snapshots",
                            "id": "accord-snapshot-interval-us-east-1-prod",
                            "is_enabled": "true",
                            "name": "accord-snapshot-interval-us-east-1-prod",
                            "role_arn": "",
                            "schedule_expression": "rate(1 day)"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_cloudwatch_event_target.accord_snapshot_target": {
                    "type": "aws_cloudwatch_event_target",
                    "depends_on": [
                        "aws_cloudwatch_event_rule.snapshot_interval",
                        "aws_lambda_function.accord_snapshot_lambda"
                    ],
                    "primary": {
                        "id": "accord-snapshot-interval-us-east-1-prod-accord-snapshot-event-target-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-snapshot-lambda-us-east-1-prod",
                            "id": "accord-snapshot-interval-us-east-1-prod-accord-snapshot-event-target-us-east-1-prod",
                            "input": "",
                            "input_path": "",
                            "role_arn": "",
                            "rule": "accord-snapshot-interval-us-east-1-prod",
                            "target_id": "accord-snapshot-event-target-us-east-1-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_cloudwatch_log_group.lambda-api-log-group": {
                    "type": "aws_cloudwatch_log_group",
                    "depends_on": [],
                    "primary": {
                        "id": "/aws/lambda/accord-prod-flask",
                        "attributes": {
                            "arn": "arn:aws:logs:us-east-1:489867994332:log-group:/aws/lambda/accord-prod-flask:*",
                            "id": "/aws/lambda/accord-prod-flask",
                            "kms_key_id": "",
                            "name": "/aws/lambda/accord-prod-flask",
                            "retention_in_days": "5",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_cloudwatch_log_subscription_filter.accord-lambda-api-logfilter": {
                    "type": "aws_cloudwatch_log_subscription_filter",
                    "depends_on": [
                        "aws_cloudwatch_log_group.lambda-api-log-group",
                        "aws_lambda_permission.accord-log-permission",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "cwlsf-3183521739",
                        "attributes": {
                            "destination_arn": "arn:aws:lambda:us-east-1:489867994332:function:logging-prod-cloudwatchLogsNGLogger",
                            "id": "cwlsf-3183521739",
                            "log_group_name": "/aws/lambda/accord-prod-flask",
                            "name": "api-logfilter-us-east-1-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_cloudwatch_metric_alarm.accord-cpu-utilization": {
                    "type": "aws_cloudwatch_metric_alarm",
                    "depends_on": [
                        "aws_sns_topic.accord-cpu-alarm"
                    ],
                    "primary": {
                        "id": "accord-cpu-utilization-us-east-1-prod",
                        "attributes": {
                            "actions_enabled": "true",
                            "alarm_actions.#": "0",
                            "alarm_description": "",
                            "alarm_name": "accord-cpu-utilization-us-east-1-prod",
                            "arn": "arn:aws:cloudwatch:us-east-1:489867994332:alarm:accord-cpu-utilization-us-east-1-prod",
                            "comparison_operator": "GreaterThanThreshold",
                            "datapoints_to_alarm": "0",
                            "dimensions.%": "0",
                            "evaluate_low_sample_count_percentiles": "",
                            "evaluation_periods": "1",
                            "extended_statistic": "",
                            "id": "accord-cpu-utilization-us-east-1-prod",
                            "insufficient_data_actions.#": "0",
                            "metric_name": "CPUUtilization",
                            "namespace": "AWS/EC2",
                            "ok_actions.#": "0",
                            "period": "300",
                            "statistic": "Average",
                            "threshold": "90",
                            "treat_missing_data": "missing",
                            "unit": "Percent"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_elb.consul-cluster": {
                    "type": "aws_elb",
                    "depends_on": [
                        "aws_acm_certificate_validation.cert",
                        "aws_security_group.sg-elb",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "consul-elb-us-east-1-prod",
                        "attributes": {
                            "access_logs.#": "0",
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:489867994332:loadbalancer/consul-elb-us-east-1-prod",
                            "availability_zones.#": "3",
                            "availability_zones.1305112097": "us-east-1b",
                            "availability_zones.3569565595": "us-east-1a",
                            "availability_zones.986537655": "us-east-1c",
                            "connection_draining": "false",
                            "connection_draining_timeout": "300",
                            "cross_zone_load_balancing": "true",
                            "dns_name": "internal-consul-elb-us-east-1-prod-1807597572.us-east-1.elb.amazonaws.com",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "2",
                            "health_check.0.interval": "30",
                            "health_check.0.target": "HTTP:8500/v1/status/leader",
                            "health_check.0.timeout": "5",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "consul-elb-us-east-1-prod",
                            "idle_timeout": "60",
                            "instances.#": "3",
                            "instances.2181396938": "i-086ef4dd97c74362d",
                            "instances.379976947": "i-09855568adb437655",
                            "instances.475656350": "i-006748f3ea204c374",
                            "internal": "true",
                            "listener.#": "1",
                            "listener.941255897.instance_port": "8500",
                            "listener.941255897.instance_protocol": "http",
                            "listener.941255897.lb_port": "443",
                            "listener.941255897.lb_protocol": "https",
                            "listener.941255897.ssl_certificate_id": "arn:aws:acm:us-east-1:489867994332:certificate/a0598c29-526f-4933-8f73-b9600450b22f",
                            "name": "consul-elb-us-east-1-prod",
                            "security_groups.#": "1",
                            "security_groups.3612440424": "sg-0165e33c32b0dec05",
                            "source_security_group": "489867994332/consul-cluster-public-web-us-east-1-prod",
                            "source_security_group_id": "sg-0165e33c32b0dec05",
                            "subnets.#": "3",
                            "subnets.1802150052": "subnet-4551786a",
                            "subnets.275736212": "subnet-886b9bc2",
                            "subnets.3046782357": "subnet-8f7857d2",
                            "tags.%": "0",
                            "zone_id": "Z35SXDOTRQ7X7K"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_iam_instance_profile.web_instance_profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.web_iam_role"
                    ],
                    "primary": {
                        "id": "web_instance_profile-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:instance-profile/web_instance_profile-us-east-1-prod",
                            "create_date": "2018-09-26T23:31:24Z",
                            "id": "web_instance_profile-us-east-1-prod",
                            "name": "web_instance_profile-us-east-1-prod",
                            "path": "/",
                            "role": "webIAMRole-us-east-1-prod",
                            "roles.#": "1",
                            "roles.366683566": "webIAMRole-us-east-1-prod",
                            "unique_id": "AIPAJY24PITDMXOBSZHDY"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_iam_policy.ReadOnlyPolicy": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::489867994332:policy/ReadOnlyPolicy-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:policy/ReadOnlyPolicy-us-east-1-prod",
                            "description": "Read Only Policy.",
                            "id": "arn:aws:iam::489867994332:policy/ReadOnlyPolicy-us-east-1-prod",
                            "name": "ReadOnlyPolicy-us-east-1-prod",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"acm:Describe*\",\n        \"acm:Get*\",\n        \"acm:List*\",\n        \"apigateway:GET\",\n        \"application-autoscaling:Describe*\",\n        \"autoscaling:*\",\n        \"batch:List*\",\n        \"batch:Describe*\",\n        \"cloudwatch:PUT\",\n        \"codebuild:BatchGet*\",\n        \"codebuild:List*\",\n        \"codecommit:BatchGet*\",\n        \"codecommit:Get*\",\n        \"codecommit:GitPull\",\n        \"codecommit:List*\",\n        \"codedeploy:BatchGet*\",\n        \"codedeploy:Get*\",\n        \"codedeploy:List*\",\n        \"codepipeline:List*\",\n        \"codepipeline:Get*\",\n        \"codestar:List*\",\n        \"codestar:Describe*\",\n        \"codestar:Get*\",\n        \"codestar:Verify*\",\n        \"config:Deliver*\",\n        \"config:Describe*\",\n        \"config:Get*\",\n        \"config:List*\",\n        \"connect:List*\",\n        \"connect:Describe*\",\n        \"connect:Get*\",\n        \"directconnect:Describe*\",\n        \"directconnect:Confirm*\",\n        \"discovery:Describe*\",\n        \"discovery:List*\",\n        \"discovery:Get*\",\n        \"dms:Describe*\",\n        \"dms:List*\",\n        \"dms:Test*\",\n        \"ds:Check*\",\n        \"ds:Describe*\",\n        \"ds:Get*\",\n        \"ds:List*\",\n        \"ds:Verify*\",\n        \"dynamodb:BatchGet*\",\n        \"dynamodb:Update*\",\n        \"dynamodb:Describe*\",\n        \"dynamodb:Get*\",\n        \"dynamodb:List*\",\n        \"dynamodb:Query\",\n        \"dynamodb:Scan\",\n        \"dynamodb:PutItem\",\n        \"ec2:Describe*\",\n        \"ec2:Get*\",\n        \"ec2:Create*\",\n        \"ec2:Delete*\",\n        \"ec2messages:*\",\n        \"ecr:BatchCheck*\",\n        \"ecr:BatchGet*\",\n        \"ecr:Describe*\",\n        \"ecr:Get*\",\n        \"ecr:List*\",\n        \"ecs:Describe*\",\n        \"ecs:List*\",\n        \"ecs:RegisterContainerInstance\",\n        \"es:Describe*\",\n        \"es:List*\",\n        \"es:ESHttpGet\",\n        \"es:ESHttpHead\",\n        \"events:Describe*\",\n        \"events:List*\",\n        \"events:Test*\",\n        \"health:Describe*\",\n        \"health:Get*\",\n        \"health:List*\",\n        \"iam:Generate*\",\n        \"iam:Get*\",\n        \"iam:List*\",\n        \"iam:Simulate*\",\n        \"kms:Describe*\",\n        \"kms:Get*\",\n        \"kms:List*\",\n        \"kms:Encrypt\",\n        \"kms:Decrypt\",\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:DescribeKey\",\n        \"lambda:List*\",\n        \"lambda:Get*\",\n        \"logs:*\",\n        \"rds:Describe*\",\n        \"rds:List*\",\n        \"rds:Download*\",\n        \"redshift:Describe*\",\n        \"redshift:View*\",\n        \"redshift:Get*\",\n        \"route53:Get*\",\n        \"route53:List*\",\n        \"route53:Test*\",\n        \"route53domains:Check*\",\n        \"route53domains:Get*\",\n        \"route53domains:List*\",\n        \"route53domains:View*\",\n        \"s3:*\",\n        \"sdb:Get*\",\n        \"sdb:List*\",\n        \"sdb:Select*\",\n        \"servicecatalog:List*\",\n        \"servicecatalog:Scan*\",\n        \"servicecatalog:Scan*\",\n        \"servicecatalog:Search*\",\n        \"servicecatalog:Describe*\",\n        \"ses:Get*\",\n        \"ses:List*\",\n        \"ses:Describe*\",\n        \"ses:Verify*\",\n        \"shield:Describe*\",\n        \"shield:List*\",\n        \"sns:Get*\",\n        \"sns:List*\",\n        \"sns:Check*\",\n        \"sqs:Get*\",\n        \"sqs:List*\",\n        \"sqs:Receive*\",\n        \"ssm:*\",\n        \"states:List*\",\n        \"states:Describe*\",\n        \"states:GetExecutionHistory\",\n        \"states:StartExecution\",\n        \"storagegateway:Describe*\",\n        \"storagegateway:List*\",\n        \"sts:Get*\",\n        \"swf:Count*\",\n        \"swf:Describe*\",\n        \"swf:Get*\",\n        \"swf:List*\",\n        \"tag:Get*\",\n        \"trustedadvisor:Describe*\",\n        \"waf:Get*\",\n        \"waf:List*\",\n        \"waf-regional:List*\",\n        \"waf-regional:Get*\",\n        \"workdocs:Describe*\",\n        \"workdocs:Get*\",\n        \"workdocs:CheckAlias\",\n        \"workmail:Describe*\",\n        \"workmail:Get*\",\n        \"workmail:List*\",\n        \"workmail:Search*\",\n        \"workspaces:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n  }\n  ]\n}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_iam_policy.sfn_lambda_invoke_policy": {
                    "type": "aws_iam_policy",
                    "depends_on": [
                        "data.aws_iam_policy_document.sfn_lambda_execution_policy_document"
                    ],
                    "primary": {
                        "id": "arn:aws:iam::489867994332:policy/em-accord-sfn-lambda-invoke-policy-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:policy/em-accord-sfn-lambda-invoke-policy-us-east-1-prod",
                            "description": "",
                            "id": "arn:aws:iam::489867994332:policy/em-accord-sfn-lambda-invoke-policy-us-east-1-prod",
                            "name": "em-accord-sfn-lambda-invoke-policy-us-east-1-prod",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Resource\": \"*\"\n    }\n  ]\n}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_iam_policy_attachment.ReadOnlyAttach": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.ReadOnlyPolicy",
                        "aws_iam_role.web_iam_role"
                    ],
                    "primary": {
                        "id": "ReadOnly-attachment-us-east-1-prod",
                        "attributes": {
                            "groups.#": "0",
                            "id": "ReadOnly-attachment-us-east-1-prod",
                            "name": "ReadOnly-attachment-us-east-1-prod",
                            "policy_arn": "arn:aws:iam::489867994332:policy/ReadOnlyPolicy-us-east-1-prod",
                            "roles.#": "1",
                            "roles.366683566": "webIAMRole-us-east-1-prod",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_iam_policy_attachment.sfn_lambda_invoke_attachment": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.sfn_lambda_invoke_policy",
                        "aws_iam_role.sfn_role"
                    ],
                    "primary": {
                        "id": "em-accord-sfn-lambda-invoke-attachment-us-east-1-prod",
                        "attributes": {
                            "groups.#": "0",
                            "id": "em-accord-sfn-lambda-invoke-attachment-us-east-1-prod",
                            "name": "em-accord-sfn-lambda-invoke-attachment-us-east-1-prod",
                            "policy_arn": "arn:aws:iam::489867994332:policy/em-accord-sfn-lambda-invoke-policy-us-east-1-prod",
                            "roles.#": "1",
                            "roles.584356381": "em-accord-sfn-us-east-1-prod",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_iam_role.sfn_role": {
                    "type": "aws_iam_role",
                    "depends_on": [
                        "data.aws_iam_policy_document.sfn_assume_role_policy_document"
                    ],
                    "primary": {
                        "id": "em-accord-sfn-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:role/em-accord-sfn-us-east-1-prod",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"states.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-09-26T23:31:18Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "em-accord-sfn-us-east-1-prod",
                            "max_session_duration": "3600",
                            "name": "em-accord-sfn-us-east-1-prod",
                            "path": "/",
                            "unique_id": "AROAJYGQFU5PC5LVYPL7C"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_iam_role.web_iam_role": {
                    "type": "aws_iam_role",
                    "depends_on": [
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "webIAMRole-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:role/webIAMRole-us-east-1-prod",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"apigateway.amazonaws.com\",\"ssm.amazonaws.com\",\"ec2.amazonaws.com\",\"lambda.amazonaws.com\",\"application-autoscaling.amazonaws.com\",\"states.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::489867994332:user/em-deploy-tfe-UslG5jTM\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-09-26T23:31:18Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "webIAMRole-us-east-1-prod",
                            "max_session_duration": "3600",
                            "name": "webIAMRole-us-east-1-prod",
                            "path": "/",
                            "unique_id": "AROAJGXHX34PBTU2BBTWG"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_iam_role_policy.web_iam_role_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.web_iam_role"
                    ],
                    "primary": {
                        "id": "webIAMRole-us-east-1-prod:web_iam_role_policy-us-east-1-prod",
                        "attributes": {
                            "id": "webIAMRole-us-east-1-prod:web_iam_role_policy-us-east-1-prod",
                            "name": "web_iam_role_policy-us-east-1-prod",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"acm:Describe*\",\n        \"acm:Get*\",\n        \"acm:List*\",\n        \"apigateway:GET\",\n        \"application-autoscaling:Describe*\",\n        \"autoscaling:*\",\n        \"batch:List*\",\n        \"batch:Describe*\",\n        \"cloudwatch:PUT\",\n        \"codebuild:BatchGet*\",\n        \"codebuild:List*\",\n        \"codecommit:BatchGet*\",\n        \"codecommit:Get*\",\n        \"codecommit:GitPull\",\n        \"codecommit:List*\",\n        \"codedeploy:BatchGet*\",\n        \"codedeploy:Get*\",\n        \"codedeploy:List*\",\n        \"codepipeline:List*\",\n        \"codepipeline:Get*\",\n        \"codestar:List*\",\n        \"codestar:Describe*\",\n        \"codestar:Get*\",\n        \"codestar:Verify*\",\n        \"config:Deliver*\",\n        \"config:Describe*\",\n        \"config:Get*\",\n        \"config:List*\",\n        \"connect:List*\",\n        \"connect:Describe*\",\n        \"connect:Get*\",\n        \"directconnect:Describe*\",\n        \"directconnect:Confirm*\",\n        \"discovery:Describe*\",\n        \"discovery:List*\",\n        \"discovery:Get*\",\n        \"dms:Describe*\",\n        \"dms:List*\",\n        \"dms:Test*\",\n        \"ds:Check*\",\n        \"ds:Describe*\",\n        \"ds:Get*\",\n        \"ds:List*\",\n        \"ds:Verify*\",\n        \"dynamodb:BatchGet*\",\n        \"dynamodb:Update*\",\n        \"dynamodb:Describe*\",\n        \"dynamodb:Get*\",\n        \"dynamodb:List*\",\n        \"dynamodb:Query\",\n        \"dynamodb:Scan\",\n        \"dynamodb:PutItem\",\n        \"ec2:Describe*\",\n        \"ec2:Get*\",\n        \"ec2:Create*\",\n        \"ec2:Delete*\",\n        \"ec2messages:*\",\n        \"ecr:BatchCheck*\",\n        \"ecr:BatchGet*\",\n        \"ecr:Describe*\",\n        \"ecr:Get*\",\n        \"ecr:List*\",\n        \"ecs:Describe*\",\n        \"ecs:List*\",\n        \"ecs:RegisterContainerInstance\",\n        \"es:Describe*\",\n        \"es:List*\",\n        \"es:ESHttpGet\",\n        \"es:ESHttpHead\",\n        \"events:Describe*\",\n        \"events:List*\",\n        \"events:Test*\",\n        \"health:Describe*\",\n        \"health:Get*\",\n        \"health:List*\",\n        \"iam:Generate*\",\n        \"iam:Get*\",\n        \"iam:List*\",\n        \"iam:Simulate*\",\n        \"kms:Describe*\",\n        \"kms:Get*\",\n        \"kms:List*\",\n        \"kms:Encrypt\",\n        \"kms:Decrypt\",\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:DescribeKey\",\n        \"lambda:List*\",\n        \"lambda:Get*\",\n        \"logs:*\",\n        \"rds:Describe*\",\n        \"rds:List*\",\n        \"rds:Download*\",\n        \"redshift:Describe*\",\n        \"redshift:View*\",\n        \"redshift:Get*\",\n        \"route53:Get*\",\n        \"route53:List*\",\n        \"route53:Test*\",\n        \"route53domains:Check*\",\n        \"route53domains:Get*\",\n        \"route53domains:List*\",\n        \"route53domains:View*\",\n        \"s3:*\",\n        \"sdb:Get*\",\n        \"sdb:List*\",\n        \"sdb:Select*\",\n        \"servicecatalog:List*\",\n        \"servicecatalog:Scan*\",\n        \"servicecatalog:Scan*\",\n        \"servicecatalog:Search*\",\n        \"servicecatalog:Describe*\",\n        \"ses:Get*\",\n        \"ses:List*\",\n        \"ses:Describe*\",\n        \"ses:Verify*\",\n        \"shield:Describe*\",\n        \"shield:List*\",\n        \"sns:Get*\",\n        \"sns:List*\",\n        \"sns:Check*\",\n        \"sqs:Get*\",\n        \"sqs:List*\",\n        \"sqs:Receive*\",\n        \"ssm:*\",\n        \"states:List*\",\n        \"states:Describe*\",\n        \"states:GetExecutionHistory\",\n        \"states:StartExecution\",\n        \"storagegateway:Describe*\",\n        \"storagegateway:List*\",\n        \"sts:Get*\",\n        \"swf:Count*\",\n        \"swf:Describe*\",\n        \"swf:Get*\",\n        \"swf:List*\",\n        \"tag:Get*\",\n        \"trustedadvisor:Describe*\",\n        \"waf:Get*\",\n        \"waf:List*\",\n        \"waf-regional:List*\",\n        \"waf-regional:Get*\",\n        \"workdocs:Describe*\",\n        \"workdocs:Get*\",\n        \"workdocs:CheckAlias\",\n        \"workmail:Describe*\",\n        \"workmail:Get*\",\n        \"workmail:List*\",\n        \"workmail:Search*\",\n        \"workspaces:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n  }\n  ]\n}",
                            "role": "webIAMRole-us-east-1-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_kms_alias.accord": {
                    "type": "aws_kms_alias",
                    "depends_on": [
                        "aws_kms_key.accord-kms-key"
                    ],
                    "primary": {
                        "id": "alias/accord-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:kms:us-east-1:489867994332:alias/accord-us-east-1-prod",
                            "id": "alias/accord-us-east-1-prod",
                            "name": "alias/accord-us-east-1-prod",
                            "target_key_arn": "arn:aws:kms:us-east-1:489867994332:key/49754cf5-a1cb-4ace-9406-4a81d509935c",
                            "target_key_id": "49754cf5-a1cb-4ace-9406-4a81d509935c"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_kms_key.accord-kms-key": {
                    "type": "aws_kms_key",
                    "depends_on": [],
                    "primary": {
                        "id": "49754cf5-a1cb-4ace-9406-4a81d509935c",
                        "attributes": {
                            "arn": "arn:aws:kms:us-east-1:489867994332:key/49754cf5-a1cb-4ace-9406-4a81d509935c",
                            "description": "KMS key for accord ACL encrytion",
                            "enable_key_rotation": "false",
                            "id": "49754cf5-a1cb-4ace-9406-4a81d509935c",
                            "is_enabled": "true",
                            "key_id": "49754cf5-a1cb-4ace-9406-4a81d509935c",
                            "key_usage": "ENCRYPT_DECRYPT",
                            "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::489867994332:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_lambda_function.accord-lambda-function": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "artifactory_artifact.artifact_api",
                        "aws_iam_role.web_iam_role",
                        "aws_s3_bucket.accord-secrets",
                        "aws_s3_bucket_object.api_zip",
                        "aws_security_group.sg-consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-prod-flask",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-prod-flask",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "9",
                            "environment.0.variables.ACCORD_CONFIG_BUCKET": "em-accord-us-east-1-prod",
                            "environment.0.variables.ACL_BUCKET_PATH": "master-acl",
                            "environment.0.variables.BUCKET": "em-accord-us-east-1-prod",
                            "environment.0.variables.CONSUL_HOSTNAME": "consul.us-east-1.accord.ellieservices.com",
                            "environment.0.variables.DD_MUTEX_TABLE_NAME": "accord-lock-table-prod",
                            "environment.0.variables.ENVIRONMENT": "prod",
                            "environment.0.variables.SNAPSHOT_PATH": "snapshots/",
                            "environment.0.variables.URL": "consul.us-east-1.accord.ellieservices.com",
                            "environment.0.variables.VAULT_ENDPOINT": "vault.us-west-2.accord.ellieservices.com",
                            "function_name": "accord-prod-flask",
                            "handler": "accord.app",
                            "id": "accord-prod-flask",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:489867994332:function:accord-prod-flask/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:31:50.139+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-prod-flask:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-east-1-prod",
                            "runtime": "python2.7",
                            "s3_bucket": "em-accord-us-east-1-prod",
                            "s3_key": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "source_code_hash": "ChE6wIGNPS4CIH7ObO3ndBLTlDvr2jvMdx2fjpT+M4U=",
                            "source_code_size": "18609144",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.2733548552": "sg-018e5832adc7883a7",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.1802150052": "subnet-4551786a",
                            "vpc_config.0.subnet_ids.275736212": "subnet-886b9bc2",
                            "vpc_config.0.subnet_ids.3046782357": "subnet-8f7857d2",
                            "vpc_config.0.vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_lambda_function.accord_snapshot_lambda": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.web_iam_role",
                        "aws_s3_bucket.accord-secrets",
                        "aws_security_group.sg-consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-snapshot-lambda-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-snapshot-lambda-us-east-1-prod",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "5",
                            "environment.0.variables.ACL_BUCKET_PATH": "master-acl",
                            "environment.0.variables.BUCKET": "em-accord-us-east-1-prod",
                            "environment.0.variables.REGION": "us-east-1",
                            "environment.0.variables.SNAPSHOT_PATH": "snapshots/",
                            "environment.0.variables.URL": "consul.us-east-1.accord.ellieservices.com",
                            "filename": "lambda_functions.zip",
                            "function_name": "accord-snapshot-lambda-us-east-1-prod",
                            "handler": "lambdaSnapshot.aws_lambda_handler",
                            "id": "accord-snapshot-lambda-us-east-1-prod",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:489867994332:function:accord-snapshot-lambda-us-east-1-prod/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:31:55.366+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-snapshot-lambda-us-east-1-prod:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-east-1-prod",
                            "runtime": "python2.7",
                            "source_code_hash": "OPJtaBodz9bdoYrLlOtYajtQ76irlWXddnGpSnaLxZE=",
                            "source_code_size": "939613",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.2733548552": "sg-018e5832adc7883a7",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.1802150052": "subnet-4551786a",
                            "vpc_config.0.subnet_ids.275736212": "subnet-886b9bc2",
                            "vpc_config.0.subnet_ids.3046782357": "subnet-8f7857d2",
                            "vpc_config.0.vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_lambda_function.rolling-deploy-health-check": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.web_iam_role",
                        "aws_security_group.sg-consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-rolling-deploy-health-check-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-health-check-us-east-1-prod",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "1",
                            "environment.0.variables.REGION": "us-east-1",
                            "filename": "lambda_functions.zip",
                            "function_name": "accord-rolling-deploy-health-check-us-east-1-prod",
                            "handler": "healthCheck.aws_lambda_handler",
                            "id": "accord-rolling-deploy-health-check-us-east-1-prod",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-health-check-us-east-1-prod/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:31:46.546+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-health-check-us-east-1-prod:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-east-1-prod",
                            "runtime": "python2.7",
                            "source_code_hash": "OPJtaBodz9bdoYrLlOtYajtQ76irlWXddnGpSnaLxZE=",
                            "source_code_size": "939613",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.2733548552": "sg-018e5832adc7883a7",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.1802150052": "subnet-4551786a",
                            "vpc_config.0.subnet_ids.275736212": "subnet-886b9bc2",
                            "vpc_config.0.subnet_ids.3046782357": "subnet-8f7857d2",
                            "vpc_config.0.vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_lambda_function.rolling-deploy-remove-old": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.web_iam_role",
                        "aws_security_group.sg-consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-rolling-deploy-remove-old-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-remove-old-us-east-1-prod",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "1",
                            "environment.0.variables.REGION": "us-east-1",
                            "filename": "lambda_functions.zip",
                            "function_name": "accord-rolling-deploy-remove-old-us-east-1-prod",
                            "handler": "removeOldNodes.aws_lambda_handler",
                            "id": "accord-rolling-deploy-remove-old-us-east-1-prod",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-remove-old-us-east-1-prod/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:31:49.887+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-remove-old-us-east-1-prod:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-east-1-prod",
                            "runtime": "python2.7",
                            "source_code_hash": "OPJtaBodz9bdoYrLlOtYajtQ76irlWXddnGpSnaLxZE=",
                            "source_code_size": "939613",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.2733548552": "sg-018e5832adc7883a7",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.1802150052": "subnet-4551786a",
                            "vpc_config.0.subnet_ids.275736212": "subnet-886b9bc2",
                            "vpc_config.0.subnet_ids.3046782357": "subnet-8f7857d2",
                            "vpc_config.0.vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_lambda_function.rolling-deploy-trigger": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_autoscaling_group.consul-cluster",
                        "aws_iam_role.web_iam_role",
                        "aws_route53_record.api-cname",
                        "aws_s3_bucket.accord-secrets",
                        "aws_s3_bucket_object.resource_object",
                        "aws_security_group.sg-consul-cluster",
                        "aws_sfn_state_machine.rolling-deploy-sfn",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-rolling-deploy-trigger-us-east-1-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-trigger-us-east-1-prod",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "4",
                            "environment.0.variables.ASG": "consul-cluster-asg-us-east-1-prod",
                            "environment.0.variables.INPUT": "{\n\"url\": \"consul.us-east-1.accord.ellieservices.com\",\n\"bucket\": \"em-accord-us-east-1-prod\",\n\"source\": \"master-acl\",\n\"apiname\": \"api.us-east-1.accord.ellieservices.com\"\n}\n",
                            "environment.0.variables.NAME": "accord-rolling-deploy-us-east-1-prod",
                            "environment.0.variables.SFNARN": "arn:aws:states:us-east-1:489867994332:stateMachine:accord-rolling-deploy-us-east-1-prod",
                            "filename": "lambda_functions.zip",
                            "function_name": "accord-rolling-deploy-trigger-us-east-1-prod",
                            "handler": "trigger.aws_lambda_handler",
                            "id": "accord-rolling-deploy-trigger-us-east-1-prod",
                            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-trigger-us-east-1-prod/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:47:32.475+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-trigger-us-east-1-prod:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-east-1-prod",
                            "runtime": "python2.7",
                            "source_code_hash": "OPJtaBodz9bdoYrLlOtYajtQ76irlWXddnGpSnaLxZE=",
                            "source_code_size": "939613",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.2733548552": "sg-018e5832adc7883a7",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.1802150052": "subnet-4551786a",
                            "vpc_config.0.subnet_ids.275736212": "subnet-886b9bc2",
                            "vpc_config.0.subnet_ids.3046782357": "subnet-8f7857d2",
                            "vpc_config.0.vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_lambda_permission.accord-lambda-permission": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_api_gateway_resource.accord-api-resource",
                        "aws_api_gateway_rest_api.accord-rest-api",
                        "aws_lambda_function.accord-lambda-function",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromApiGateway",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "accord-prod-flask",
                            "id": "AllowExecutionFromApiGateway",
                            "principal": "apigateway.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:execute-api:us-east-1:489867994332:2lunmtyw3h/*/*/{proxy+}",
                            "statement_id": "AllowExecutionFromApiGateway"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_lambda_permission.accord-log-permission": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_cloudwatch_log_group.lambda-api-log-group"
                    ],
                    "primary": {
                        "id": "accord-log-permission-prod",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "logging-prod-cloudwatchLogsNGLogger",
                            "id": "accord-log-permission-prod",
                            "principal": "logs.us-east-1.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:logs:us-east-1:489867994332:log-group:/aws/lambda/accord-prod-flask:*",
                            "statement_id": "accord-log-permission-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_lambda_permission.accord-rolling-deploy-trigger-permissions": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_lambda_function.rolling-deploy-trigger",
                        "aws_s3_bucket.accord-secrets"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromS3Bucket",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "accord-rolling-deploy-trigger-us-east-1-prod",
                            "id": "AllowExecutionFromS3Bucket",
                            "principal": "s3.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:s3:::em-accord-us-east-1-prod",
                            "statement_id": "AllowExecutionFromS3Bucket"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_lambda_permission.accord_snapshot_cloudwatch_permissions": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_cloudwatch_event_rule.snapshot_interval",
                        "aws_lambda_function.accord_snapshot_lambda"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromCloudWatch",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "accord-snapshot-lambda-us-east-1-prod",
                            "id": "AllowExecutionFromCloudWatch",
                            "principal": "events.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:events:us-east-1:489867994332:rule/accord-snapshot-interval-us-east-1-prod",
                            "statement_id": "AllowExecutionFromCloudWatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_launch_configuration.consul-cluster": {
                    "type": "aws_launch_configuration",
                    "depends_on": [],
                    "primary": {
                        "id": "terraform-20181101182911765000000002",
                        "attributes": {
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "web_instance_profile-us-east-1-prod",
                            "id": "terraform-20181101182911765000000002",
                            "image_id": "ami-aff65ad2",
                            "instance_type": "t2.medium",
                            "key_name": "",
                            "name": "terraform-20181101182911765000000002",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.2733548552": "sg-018e5832adc7883a7",
                            "spot_price": "",
                            "user_data": "008cceb396937395bbffca373694905f5ec11e24",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_route53_record.api-cname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_api_gateway_domain_name.accord-domain",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL_api.us-east-1.accord.ellieservices.com_CNAME",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "api.us-east-1.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL_api.us-east-1.accord.ellieservices.com_CNAME",
                            "name": "api.us-east-1.accord.ellieservices.com",
                            "records.#": "1",
                            "records.383175053": "d-jmqww5of3c.execute-api.us-east-1.amazonaws.com",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_route53_record.cert_validation": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_acm_certificate.cert",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL__ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com._CNAME",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "_ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL__ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com._CNAME",
                            "name": "_ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com",
                            "records.#": "1",
                            "records.4249739183": "_a6cb57af13bb37b33dbd35ae7fe7a089.tljzshvwok.acm-validations.aws.",
                            "set_identifier": "",
                            "ttl": "60",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_route53_record.cert_validation_alt1": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_acm_certificate.cert",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL__c5bb4b4c9431246f439b926ce3eee464.api.us-east-1.accord.ellieservices.com._CNAME",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "_c5bb4b4c9431246f439b926ce3eee464.api.us-east-1.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL__c5bb4b4c9431246f439b926ce3eee464.api.us-east-1.accord.ellieservices.com._CNAME",
                            "name": "_c5bb4b4c9431246f439b926ce3eee464.api.us-east-1.accord.ellieservices.com",
                            "records.#": "1",
                            "records.3819188278": "_e693d2ef8f11e2c67d650add2a3768ff.tljzshvwok.acm-validations.aws.",
                            "set_identifier": "",
                            "ttl": "60",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_route53_record.cert_validation_alt2": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_acm_certificate.cert",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL__d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com._CNAME",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "_d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL__d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com._CNAME",
                            "name": "_d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com",
                            "records.#": "1",
                            "records.1415539117": "_8c38a77da34ea1b9c7c9bdd98cd769b4.tljzshvwok.acm-validations.aws.",
                            "set_identifier": "",
                            "ttl": "60",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_route53_record.ui-cname-east-1": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_elb.consul-cluster",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL_consul.us-east-1.accord.ellieservices.com_CNAME",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "consul.us-east-1.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL_consul.us-east-1.accord.ellieservices.com_CNAME",
                            "name": "consul.us-east-1.accord.ellieservices.com",
                            "records.#": "1",
                            "records.138174293": "internal-consul-elb-us-east-1-prod-1807597572.us-east-1.elb.amazonaws.com",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_s3_bucket.accord-secrets": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "em-accord-us-east-1-prod",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::em-accord-us-east-1-prod",
                            "bucket": "em-accord-us-east-1-prod",
                            "bucket_domain_name": "em-accord-us-east-1-prod.s3.amazonaws.com",
                            "bucket_regional_domain_name": "em-accord-us-east-1-prod.s3.amazonaws.com",
                            "cors_rule.#": "0",
                            "force_destroy": "true",
                            "hosted_zone_id": "Z3AQBSTGFYJSTF",
                            "id": "em-accord-us-east-1-prod",
                            "lifecycle_rule.#": "0",
                            "logging.#": "0",
                            "region": "us-east-1",
                            "replication_configuration.#": "0",
                            "request_payer": "BucketOwner",
                            "server_side_encryption_configuration.#": "0",
                            "tags.%": "0",
                            "versioning.#": "1",
                            "versioning.0.enabled": "false",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_s3_bucket_notification.rolling_deploy_notification": {
                    "type": "aws_s3_bucket_notification",
                    "depends_on": [
                        "aws_lambda_function.rolling-deploy-trigger",
                        "aws_s3_bucket.accord-secrets"
                    ],
                    "primary": {
                        "id": "em-accord-us-east-1-prod",
                        "attributes": {
                            "bucket": "em-accord-us-east-1-prod",
                            "id": "em-accord-us-east-1-prod",
                            "lambda_function.#": "1",
                            "lambda_function.0.events.#": "1",
                            "lambda_function.0.events.3356830603": "s3:ObjectCreated:*",
                            "lambda_function.0.filter_prefix": "rolling-deploy-initialization/",
                            "lambda_function.0.filter_suffix": "",
                            "lambda_function.0.id": "tf-s3-lambda-20180926234732183200000005",
                            "lambda_function.0.lambda_function_arn": "arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-trigger-us-east-1-prod",
                            "queue.#": "0",
                            "topic.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_s3_bucket_object.api_zip": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "artifactory_artifact.artifact_api",
                        "aws_s3_bucket.accord-secrets"
                    ],
                    "primary": {
                        "id": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                        "attributes": {
                            "acl": "private",
                            "bucket": "em-accord-us-east-1-prod",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "df33b43086b8c8e5a6d0d597822beb5b",
                            "id": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "key": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "server_side_encryption": "",
                            "source": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_s3_bucket_object.resource_object": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.accord-secrets",
                        "data.template_file.trigger-file"
                    ],
                    "primary": {
                        "id": "rolling-deploy-initialization/config_data",
                        "attributes": {
                            "acl": "private",
                            "bucket": "em-accord-us-east-1-prod",
                            "cache_control": "",
                            "content": "{\n\"name\": \"consul-cluster-asg-us-east-1-prod\",\n\"min_size\": \"3\",\n\"max_size\": \"6\",\n\"desired_capacity\": \"3\",\n\"min_elb_capacity\": \"3\",\n\"image_id\": \"ami-aff65ad2\",\n\"user_data\": \"74284e70c545e193f2b56b867cf73ba56946997a22b357b2ac8c811538e1add1\",\n\"instance_type\": \"t2.medium\",\n\"key_name\": \"em-accord-deployment\"\n}\n",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "8e89fd2851cfab4fe15ff7bf844fe7b4",
                            "id": "rolling-deploy-initialization/config_data",
                            "key": "rolling-deploy-initialization/config_data",
                            "server_side_encryption": "",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_s3_bucket_object.security_object": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.accord-secrets",
                        "data.archive_file.resource_zip"
                    ],
                    "primary": {
                        "id": "resources.zip",
                        "attributes": {
                            "acl": "private",
                            "bucket": "em-accord-us-east-1-prod",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "d7d4f3a8e64cb50bbcf5f4cd17abfbe3",
                            "id": "resources.zip",
                            "key": "resources.zip",
                            "server_side_encryption": "",
                            "source": "/terraform/resources.zip",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group.sg-consul-cluster": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "sg-018e5832adc7883a7",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:489867994332:security-group/sg-018e5832adc7883a7",
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-018e5832adc7883a7",
                            "ingress.#": "3",
                            "ingress.2510676008.cidr_blocks.#": "1",
                            "ingress.2510676008.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2510676008.description": "",
                            "ingress.2510676008.from_port": "0",
                            "ingress.2510676008.ipv6_cidr_blocks.#": "0",
                            "ingress.2510676008.prefix_list_ids.#": "0",
                            "ingress.2510676008.protocol": "-1",
                            "ingress.2510676008.security_groups.#": "0",
                            "ingress.2510676008.self": "true",
                            "ingress.2510676008.to_port": "0",
                            "ingress.2555765296.cidr_blocks.#": "2",
                            "ingress.2555765296.cidr_blocks.0": "199.189.124.0/22",
                            "ingress.2555765296.cidr_blocks.1": "209.220.148.0/24",
                            "ingress.2555765296.description": "",
                            "ingress.2555765296.from_port": "22",
                            "ingress.2555765296.ipv6_cidr_blocks.#": "0",
                            "ingress.2555765296.prefix_list_ids.#": "0",
                            "ingress.2555765296.protocol": "tcp",
                            "ingress.2555765296.security_groups.#": "0",
                            "ingress.2555765296.self": "false",
                            "ingress.2555765296.to_port": "22",
                            "ingress.264038179.cidr_blocks.#": "0",
                            "ingress.264038179.description": "",
                            "ingress.264038179.from_port": "8500",
                            "ingress.264038179.ipv6_cidr_blocks.#": "0",
                            "ingress.264038179.prefix_list_ids.#": "0",
                            "ingress.264038179.protocol": "tcp",
                            "ingress.264038179.security_groups.#": "1",
                            "ingress.264038179.security_groups.3612440424": "sg-0165e33c32b0dec05",
                            "ingress.264038179.self": "false",
                            "ingress.264038179.to_port": "8500",
                            "name": "consul-cluster-private-us-east-1-prod",
                            "owner_id": "489867994332",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-d4902daf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group.sg-elb": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "sg-0165e33c32b0dec05",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:489867994332:security-group/sg-0165e33c32b0dec05",
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0165e33c32b0dec05",
                            "ingress.#": "2",
                            "ingress.1115371944.cidr_blocks.#": "0",
                            "ingress.1115371944.description": "",
                            "ingress.1115371944.from_port": "8500",
                            "ingress.1115371944.ipv6_cidr_blocks.#": "0",
                            "ingress.1115371944.prefix_list_ids.#": "0",
                            "ingress.1115371944.protocol": "tcp",
                            "ingress.1115371944.security_groups.#": "1",
                            "ingress.1115371944.security_groups.2733548552": "sg-018e5832adc7883a7",
                            "ingress.1115371944.self": "false",
                            "ingress.1115371944.to_port": "8500",
                            "ingress.3864629342.cidr_blocks.#": "3",
                            "ingress.3864629342.cidr_blocks.0": "199.189.124.0/22",
                            "ingress.3864629342.cidr_blocks.1": "209.220.148.0/24",
                            "ingress.3864629342.cidr_blocks.2": "10.0.0.0/8",
                            "ingress.3864629342.description": "",
                            "ingress.3864629342.from_port": "0",
                            "ingress.3864629342.ipv6_cidr_blocks.#": "0",
                            "ingress.3864629342.prefix_list_ids.#": "0",
                            "ingress.3864629342.protocol": "-1",
                            "ingress.3864629342.security_groups.#": "0",
                            "ingress.3864629342.self": "false",
                            "ingress.3864629342.to_port": "0",
                            "name": "consul-cluster-public-web-us-east-1-prod",
                            "owner_id": "489867994332",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-d4902daf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group_rule.cluster-outbound": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster"
                    ],
                    "primary": {
                        "id": "sgrule-4032830443",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "",
                            "from_port": "0",
                            "id": "sgrule-4032830443",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-018e5832adc7883a7",
                            "self": "false",
                            "to_port": "0",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group_rule.cluster-wan-in": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster"
                    ],
                    "primary": {
                        "id": "sgrule-94184008",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "",
                            "from_port": "8302",
                            "id": "sgrule-94184008",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-018e5832adc7883a7",
                            "self": "false",
                            "to_port": "8302",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group_rule.consul-cluster": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster"
                    ],
                    "primary": {
                        "id": "sgrule-3048922312",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "description": "",
                            "from_port": "0",
                            "id": "sgrule-3048922312",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-018e5832adc7883a7",
                            "self": "true",
                            "source_security_group_id": "sg-018e5832adc7883a7",
                            "to_port": "0",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group_rule.elb-outbound": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-elb"
                    ],
                    "primary": {
                        "id": "sgrule-1140163384",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "",
                            "from_port": "0",
                            "id": "sgrule-1140163384",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-0165e33c32b0dec05",
                            "self": "false",
                            "to_port": "0",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group_rule.health-check-cluster": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster",
                        "aws_security_group.sg-elb"
                    ],
                    "primary": {
                        "id": "sgrule-984696252",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "description": "",
                            "from_port": "8500",
                            "id": "sgrule-984696252",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-018e5832adc7883a7",
                            "self": "false",
                            "source_security_group_id": "sg-0165e33c32b0dec05",
                            "to_port": "8500",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group_rule.health-check-elb": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster",
                        "aws_security_group.sg-elb"
                    ],
                    "primary": {
                        "id": "sgrule-1053499952",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "description": "",
                            "from_port": "8500",
                            "id": "sgrule-1053499952",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-0165e33c32b0dec05",
                            "self": "false",
                            "source_security_group_id": "sg-018e5832adc7883a7",
                            "to_port": "8500",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group_rule.ssh-cluster": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster"
                    ],
                    "primary": {
                        "id": "sgrule-409371538",
                        "attributes": {
                            "cidr_blocks.#": "2",
                            "cidr_blocks.0": "199.189.124.0/22",
                            "cidr_blocks.1": "209.220.148.0/24",
                            "description": "",
                            "from_port": "22",
                            "id": "sgrule-409371538",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-018e5832adc7883a7",
                            "self": "false",
                            "to_port": "22",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_security_group_rule.user-elb": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-elb"
                    ],
                    "primary": {
                        "id": "sgrule-2231120815",
                        "attributes": {
                            "cidr_blocks.#": "3",
                            "cidr_blocks.0": "199.189.124.0/22",
                            "cidr_blocks.1": "209.220.148.0/24",
                            "cidr_blocks.2": "10.0.0.0/8",
                            "description": "",
                            "from_port": "443",
                            "id": "sgrule-2231120815",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-0165e33c32b0dec05",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_sfn_state_machine.rolling-deploy-sfn": {
                    "type": "aws_sfn_state_machine",
                    "depends_on": [
                        "aws_iam_role.sfn_role",
                        "aws_s3_bucket_object.resource_object",
                        "data.template_file.rolling-deploy"
                    ],
                    "primary": {
                        "id": "arn:aws:states:us-east-1:489867994332:stateMachine:accord-rolling-deploy-us-east-1-prod",
                        "attributes": {
                            "creation_date": "2018-09-26T23:31:52Z",
                            "definition": "{\n  \"Comment\": \"State machine for initiating rolling deploy for consul cluster.\",\n  \"StartAt\": \"RemoveNode\",\n  \"States\": {\n    \"RemoveNode\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-remove-old-us-east-1-prod\",\n      \"Next\": \"WaitForCluster\"\n    },\n    \"WaitForCluster\": {\n      \"Type\": \"Wait\",\n      \"Seconds\": 300,\n      \"Next\": \"HealthCheck\"\n    },\n    \"HealthCheck\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-health-check-us-east-1-prod\",\n      \"Next\": \"ChoiceCheck\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"],\n          \"MaxAttempts\": 10\n        }\n      ]\n    },\n    \"ChoiceCheck\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n          {\n            \"Variable\": \"$.num_old\",\n            \"NumericGreaterThan\": 0,\n            \"Next\": \"RemoveNode\"\n          }\n      ],\n      \"Default\": \"JobComplete\"\n    },\n    \"JobComplete\": {\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}",
                            "id": "arn:aws:states:us-east-1:489867994332:stateMachine:accord-rolling-deploy-us-east-1-prod",
                            "name": "accord-rolling-deploy-us-east-1-prod",
                            "role_arn": "arn:aws:iam::489867994332:role/em-accord-sfn-us-east-1-prod",
                            "status": "ACTIVE"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "aws_sns_topic.accord-cpu-alarm": {
                    "type": "aws_sns_topic",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:sns:us-east-1:489867994332:accord-cpu-alarm-us-east-1-prod",
                        "attributes": {
                            "application_failure_feedback_role_arn": "",
                            "application_success_feedback_role_arn": "",
                            "application_success_feedback_sample_rate": "0",
                            "arn": "arn:aws:sns:us-east-1:489867994332:accord-cpu-alarm-us-east-1-prod",
                            "delivery_policy": "",
                            "display_name": "",
                            "http_failure_feedback_role_arn": "",
                            "http_success_feedback_role_arn": "",
                            "http_success_feedback_sample_rate": "0",
                            "id": "arn:aws:sns:us-east-1:489867994332:accord-cpu-alarm-us-east-1-prod",
                            "lambda_failure_feedback_role_arn": "",
                            "lambda_success_feedback_role_arn": "",
                            "lambda_success_feedback_sample_rate": "0",
                            "name": "accord-cpu-alarm-us-east-1-prod",
                            "policy": "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\",\"SNS:Receive\"],\"Resource\":\"arn:aws:sns:us-east-1:489867994332:accord-cpu-alarm-us-east-1-prod\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"489867994332\"}}}]}",
                            "sqs_failure_feedback_role_arn": "",
                            "sqs_success_feedback_role_arn": "",
                            "sqs_success_feedback_sample_rate": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.archive_file.resource_zip": {
                    "type": "archive_file",
                    "depends_on": [],
                    "primary": {
                        "id": "ad79b31b58d0258b53d33b802bc73a61135b4d10",
                        "attributes": {
                            "id": "ad79b31b58d0258b53d33b802bc73a61135b4d10",
                            "output_base64sha256": "nCBxjEaYRu4W8LlGPdRaY5T5R4MiJfseAvVECTKtwvQ=",
                            "output_md5": "d7d4f3a8e64cb50bbcf5f4cd17abfbe3",
                            "output_path": "/terraform/resources.zip",
                            "output_sha": "ad79b31b58d0258b53d33b802bc73a61135b4d10",
                            "output_size": "28760984",
                            "source.#": "0",
                            "source_dir": "/terraform/resources",
                            "type": "zip"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.archive"
                },
                "data.aws_caller_identity.current": {
                    "type": "aws_caller_identity",
                    "depends_on": [],
                    "primary": {
                        "id": "2018-11-01 18:27:56.908114095 +0000 UTC",
                        "attributes": {
                            "account_id": "489867994332",
                            "arn": "arn:aws:iam::489867994332:user/em-deploy-tfe-UslG5jTM",
                            "id": "2018-11-01 18:27:56.908114095 +0000 UTC",
                            "user_id": "AIDAI4TTADQVOWJTF4VRA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_iam_policy_document.sfn_assume_role_policy_document": {
                    "type": "aws_iam_policy_document",
                    "depends_on": [],
                    "primary": {
                        "id": "2478221018",
                        "attributes": {
                            "id": "2478221018",
                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"states.amazonaws.com\"\n      }\n    }\n  ]\n}",
                            "statement.#": "1",
                            "statement.0.actions.#": "1",
                            "statement.0.actions.2528466339": "sts:AssumeRole",
                            "statement.0.condition.#": "0",
                            "statement.0.effect": "Allow",
                            "statement.0.not_actions.#": "0",
                            "statement.0.not_principals.#": "0",
                            "statement.0.not_resources.#": "0",
                            "statement.0.principals.#": "1",
                            "statement.0.principals.2091813330.identifiers.#": "1",
                            "statement.0.principals.2091813330.identifiers.2008431988": "states.amazonaws.com",
                            "statement.0.principals.2091813330.type": "Service",
                            "statement.0.resources.#": "0",
                            "statement.0.sid": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_iam_policy_document.sfn_lambda_execution_policy_document": {
                    "type": "aws_iam_policy_document",
                    "depends_on": [],
                    "primary": {
                        "id": "1116219230",
                        "attributes": {
                            "id": "1116219230",
                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                            "statement.#": "1",
                            "statement.0.actions.#": "1",
                            "statement.0.actions.3363766922": "lambda:InvokeFunction",
                            "statement.0.condition.#": "0",
                            "statement.0.effect": "Allow",
                            "statement.0.not_actions.#": "0",
                            "statement.0.not_principals.#": "0",
                            "statement.0.not_resources.#": "0",
                            "statement.0.principals.#": "0",
                            "statement.0.resources.#": "1",
                            "statement.0.resources.2679715827": "*",
                            "statement.0.sid": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_route53_zone.base_zone": {
                    "type": "aws_route53_zone",
                    "depends_on": [],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL",
                        "attributes": {
                            "caller_reference": "2018-04-17 09:23:47.740777",
                            "comment": "PC-4019 by akomala",
                            "id": "Z1OR5LT1WEJ4OL",
                            "name": "accord.ellieservices.com.",
                            "name_servers.#": "4",
                            "name_servers.0": "ns-1956.awsdns-52.co.uk",
                            "name_servers.1": "ns-920.awsdns-51.net",
                            "name_servers.2": "ns-229.awsdns-28.com",
                            "name_servers.3": "ns-1360.awsdns-42.org",
                            "private_zone": "false",
                            "resource_record_set_count": "13",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_subnet.private_subnet_0": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-4551786a",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:489867994332:subnet/subnet-4551786a",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "cidr_block": "10.208.86.96/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.787444477.name": "tag:Name",
                            "filter.787444477.values.#": "1",
                            "filter.787444477.values.4259186353": "Private0*",
                            "id": "subnet-4551786a",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Private0(us-east-1a)",
                            "vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_subnet.private_subnet_1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-886b9bc2",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:489867994332:subnet/subnet-886b9bc2",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1b",
                            "cidr_block": "10.208.86.128/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.328162125.name": "tag:Name",
                            "filter.328162125.values.#": "1",
                            "filter.328162125.values.4229721222": "Private1*",
                            "id": "subnet-886b9bc2",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Private1(us-east-1b)",
                            "vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_subnet.private_subnet_2": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-8f7857d2",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:489867994332:subnet/subnet-8f7857d2",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1c",
                            "cidr_block": "10.208.86.160/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.1412374941.name": "tag:Name",
                            "filter.1412374941.values.#": "1",
                            "filter.1412374941.values.4267365087": "Private2*",
                            "id": "subnet-8f7857d2",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Private2(us-east-1c)",
                            "vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_subnet.public_subnet_0": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-70537a5f",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:489867994332:subnet/subnet-70537a5f",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "cidr_block": "10.208.86.0/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.536144450.name": "tag:Name",
                            "filter.536144450.values.#": "1",
                            "filter.536144450.values.1414452620": "Public0*",
                            "id": "subnet-70537a5f",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Public0(us-east-1a)",
                            "vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_subnet.public_subnet_1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-7f639335",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:489867994332:subnet/subnet-7f639335",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1b",
                            "cidr_block": "10.208.86.32/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.580174834.name": "tag:Name",
                            "filter.580174834.values.#": "1",
                            "filter.580174834.values.1435287483": "Public1*",
                            "id": "subnet-7f639335",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Public1(us-east-1b)",
                            "vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_subnet.public_subnet_2": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-a77e51fa",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:489867994332:subnet/subnet-a77e51fa",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1c",
                            "cidr_block": "10.208.86.64/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.1697954082.name": "tag:Name",
                            "filter.1697954082.values.#": "1",
                            "filter.1697954082.values.1472856546": "Public2*",
                            "id": "subnet-a77e51fa",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Public2(us-east-1c)",
                            "vpc_id": "vpc-d4902daf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.aws_vpc.elmae": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-d4902daf",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:489867994332:vpc/vpc-d4902daf",
                            "cidr_block": "10.208.86.0/24",
                            "cidr_block_associations.#": "1",
                            "cidr_block_associations.0.association_id": "vpc-cidr-assoc-1b398176",
                            "cidr_block_associations.0.cidr_block": "10.208.86.0/24",
                            "cidr_block_associations.0.state": "associated",
                            "default": "false",
                            "dhcp_options_id": "dopt-6c471014",
                            "enable_dns_hostnames": "false",
                            "enable_dns_support": "true",
                            "id": "vpc-d4902daf",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-d0fe53ac",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "elmae-default"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.east-1.provider.aws"
                },
                "data.template_file.consul-cluster-template": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_kms_alias.accord",
                        "aws_s3_bucket.accord-secrets"
                    ],
                    "primary": {
                        "id": "74284e70c545e193f2b56b867cf73ba56946997a22b357b2ac8c811538e1add1",
                        "attributes": {
                            "id": "74284e70c545e193f2b56b867cf73ba56946997a22b357b2ac8c811538e1add1",
                            "rendered": "#!/bin/bash -ex\n\nyum update -y\n\n# Install collectd\nyum install collectd -y\n\n# Install AWS Log Agent\nyum install -y awslogs\n\n# Configure the AWS Log Agent\nmkdir -p /var/awslogs/state\ncat \u003e /etc/awslogs/awslogs.conf \u003c\u003cEOF\n[general]\nstate_file = /var/awslogs/state/agent-state\n[/var/log/messages]\nfile = /var/log/messages\nlog_group_name = accord-prod-consul_logs\nlog_stream_name = {instance_id}\ndatetime_format = %b %d %H:%M:%S\nEOF\n\ncat \u003e /etc/awslogs/awscli.conf \u003c\u003cEOF\n[plugins]\ncwlogs = cwlogs\n[default]\nregion = us-east-1\nEOF\n\nservice awslogs start\n\n# Seperate Consul logs out\n# cat \u003e\u003e \"local0.* /var/log/consul.log\" \u003e\u003e /etc/rsyslogd.conf\n# /etc/init.d/rsyslogd restart\n\n\necho 'installing additional software'\nfor i in {1..5}\ndo\n    yum install -y aws-cli \u0026\u0026 break || sleep 120\ndone\n\n# Install collectd-python plugin\nyum install -y collectd-python\n\nADDR=($(hostname -I))\ninstance_name=$(hostname)\n\ncat \u003e /etc/hosts \u003c\u003cEOF\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost6 localhost6.localdomain6\n$ADDR $instance_name\nEOF\n\n#easy_install pip\n\nyum install python27-pip -y\n\n# Download the setup script for cloudwatch collectd\nARTIFACTORY_USER=\"svc-accord-deploy\"\nARTIFACTORY_PASSWORD=\"xUd2s4F^V/nXVPq\"\ncurl -u $ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD https://artifactory-stg.elliemae.io/artifactory/deploy/cloudwatch-collectd/setup.py -o /tmp/setup.py\nchmod a+x /tmp/setup.py\npython /tmp/setup.py -I -m add\n\ncat \u003e\u003e /opt/collectd-plugins/cloudwatch/config/whitelist.conf \u003c\u003cEOF\nstatsd--.*\nEOF\n\n#Configure collectd and statsd plugin\ncat \u003e\u003e /etc/collectd.conf \u003c\u003cEOF\nLoadPlugin statsd\n\u003cPlugin statsd\u003e\n    Host \"::\"\n    Port \"8125\"\n    DeleteSets     true\n    TimerPercentile 90.0\n\u003c/Plugin\u003e\nLoadPlugin logfile\n\u003cPlugin logfile\u003e\n       LogLevel info\n       File \"/var/log/collectd.log\"\n       Timestamp true\n       PrintSeverity false\n\u003c/Plugin\u003e\nEOF\n\n# Restart the collectd service\n/etc/init.d/collectd restart\n\nASG_NAME=\"consul-cluster-asg-us-east-1-prod\"\nREGION=\"us-east-1\"\nENV=\"prod\"\nKMSALIAS=\"alias/accord-us-east-1-prod\"\nEXPECTED_SIZE=\"3\"\nBUCKET=\"em-accord-us-east-1-prod\"\nUUID=$(uuidgen)\nSNAPSHOT=$BUCKET\"/snapshots/\"\n\n#install security agents\nyum install -y unzip\naws s3 cp s3://em-accord-$REGION-$ENV/resources.zip resources.zip\nunzip resources.zip\nbash security_agents.sh\n\n\n# Return the id of each instance in the cluster.\nfunction cluster-instance-ids {\n    # Grab every line which contains 'InstanceId', cut on double quotes and grab the ID:\n    #    \"InstanceId\": \"i-example123\"\n    #....^..........^..^.....#4.....^...\n    aws --region=\"$REGION\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG_NAME \\\n        | grep InstanceId \\\n        | cut -d '\"' -f4\n}\n\n# Return the private IP of each instance in the cluster.\nfunction cluster-ips {\n    for id in $(cluster-instance-ids)\n    do\n        aws --region=\"$REGION\" ec2 describe-instances \\\n            --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n            --output=\"text\" \\\n            --instance-ids=\"$id\"\n    done\n}\n\n\nfunction diff-cluster-instance-ids {\n    # Grab every line which contains 'InstanceId', cut on double quotes and grab the ID:\n    #    \"InstanceId\": \"i-example123\"\n    #....^..........^..^.....#4.....^...\n    if [ \"$REGION\" == \"us-east-1\" ]; then\n        ASG=\"consul-cluster-asg-us-west-2-$ENV\"\n        aws --region=\"us-west-2\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG \\\n            | grep InstanceId \\\n            | cut -d '\"' -f4\n    else\n        ASG=\"consul-cluster-asg-us-east-1-$ENV\"\n        aws --region=\"us-east-1\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG \\\n            | grep InstanceId \\\n            | cut -d '\"' -f4\n    fi\n}\n\n# Return the private IP of each instance in the cluster.\nfunction diff-cluster-ips {\n    if [ \"$REGION\" == \"us-east-1\" ]; then\n        for id in $(diff-cluster-instance-ids)\n        do\n            aws --region=\"us-west-2\" ec2 describe-instances \\\n                --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n                --output=\"text\" \\\n                --instance-ids=\"$id\"\n        done\n    else\n        for id in $(diff-cluster-instance-ids)\n        do\n            aws --region=\"us-east-1\" ec2 describe-instances \\\n                --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n                --output=\"text\" \\\n                --instance-ids=\"$id\"\n        done\n    fi\n}\n\n\n# Wait until we have as many cluster instances as we are expecting.\nwhile COUNT=$(cluster-instance-ids | wc -l) \u0026\u0026 [ \"$COUNT\" -lt \"$EXPECTED_SIZE\" ]\ndo\n    echo \"$COUNT instances in the cluster, waiting for $EXPECTED_SIZE instances to warm up...\"\n    sleep 1\ndone\n\nwhile DIFFCOUNT=$(diff-cluster-instance-ids | wc -l) \u0026\u0026 [ \"$DIFFCOUNT\" -lt \"$EXPECTED_SIZE\" ]\ndo\n    echo \"$DIFFCOUNT instances in the OTHER cluster, waiting for $EXPECTED_SIZE instances to warm up...\"\n    sleep 1\ndone\n\n# Get my IP address, all IPs in the cluster, then just the 'other' IPs...\nIP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\nmapfile -t ALL_IPS \u003c \u003c(cluster-ips)\nOTHER_IPS=( ${ALL_IPS[@]/${IP}/} )\necho \"Instance IP is: $IP, Cluster IPs are: ${ALL_IPS[@]}, Other IPs are: ${OTHER_IPS[@]}\"\n\nmapfile -t WAN_IPS \u003c \u003c(diff-cluster-ips)\n\n# create join string\nfor i in $(echo ${OTHER_IPS[@]} | sed \"s/,/ /g\")\ndo\n    JOIN_STRING+=\"-retry-join $i \"\ndone\n\n# Prepare join string for WAN join\nfor i in $(echo ${WAN_IPS[@]} | sed \"s/,/ /g\")\ndo\n    WAN_JOIN+=\"-retry-join-wan $i \"\ndone\n\necho \"WAN ips are: $WAN_JOIN\"\n\n# pull docker image from artifactory (new for supporting rolling deploy)\ndocker login -u $ARTIFACTORY_USER -p $ARTIFACTORY_PASSWORD docker-local.artifactory-stg.elliemae.io\ndocker pull docker-local.artifactory-stg.elliemae.io/consul:latest\n\nif [ \"$REGION\" == \"us-west-2\" ]; then\n    docker run -v /dev/log:/dev/log -d -p \"8125:8125\" --net=host \\\n    --name=consul \\\n    -e CONSUL_LOCAL_CONFIG=\"{\n    \\\"acl_datacenter\\\": \\\"$REGION\\\",\n    \\\"acl_default_policy\\\": \\\"deny\\\",\n    \\\"enable_acl_replication\\\": true,\n    \\\"enable_syslog\\\": true,\n    \\\"telemetry\\\": {\n        \\\"statsd_address\\\": \\\"127.0.0.1:8125\\\"\n    },\n    \\\"autopilot\\\": {\n        \\\"cleanup_dead_servers\\\": true,\n        \\\"last_contact_threshold\\\": \\\"200ms\\\",\n        \\\"max_trailing_logs\\\": 250,\n        \\\"server_stabilization_time\\\": \\\"10s\\\",\n        \\\"redundancy_zone_tag\\\": \\\"az\\\",\n        \\\"disable_upgrade_migration\\\": false,\n        \\\"upgrade_version_tag\\\": \\\"\\\"\n    }\n}\" \\\n    docker-local.artifactory-stg.elliemae.io/consul:latest agent -server -ui \\\n    -datacenter=\"$REGION\" \\\n    -bind=\"$IP\" \\\n    -client=\"0.0.0.0\" \\\n    $JOIN_STRING\\\n    $WAN_JOIN \\\n    -bootstrap-expect=\"$EXPECTED_SIZE\"\nelse\n    MAIN_BUCKET=\"em-accord-us-west-2-$ENV\"\n    while [ true ];\n    do\n        echo aws s3 cp s3://$MAIN_BUCKET/master-acl master-acl\n        aws s3 cp s3://$MAIN_BUCKET/master-acl master-acl\n        result=$?\n        echo Tried Fetch - $result\n        if [ \"$result\" == \"0\" ]; then\n            echo Fetched Successfully\n            break\n        fi\n        echo Main datacenter in us-west-2 is still bootstrapping. Wait!\n        sleep 1\n    done\n    aws --region $REGION s3 cp ./master-acl s3://$BUCKET/\n    RAW=$(aws kms decrypt --region us-west-2 --ciphertext-blob fileb://master-acl --output text --query Plaintext | base64 --decode)\n    MASTER=$(echo $RAW | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n    rm master-acl\n    docker run -v /dev/log:/dev/log -d -p \"8125:8125\" --net=host \\\n    --name=consul \\\n    -e CONSUL_LOCAL_CONFIG=\"{\n    \\\"acl_datacenter\\\": \\\"us-west-2\\\",\n    \\\"acl_default_policy\\\": \\\"deny\\\",\n    \\\"acl_master_token\\\": \\\"$MASTER\\\",\n    \\\"acl_replication_token\\\": \\\"$MASTER\\\",\n    \\\"enable_syslog\\\": true,\n    \\\"telemetry\\\": {\n        \\\"statsd_address\\\": \\\"127.0.0.1:8125\\\"\n    },\n    \\\"autopilot\\\": {\n        \\\"cleanup_dead_servers\\\": true,\n        \\\"last_contact_threshold\\\": \\\"200ms\\\",\n        \\\"max_trailing_logs\\\": 250,\n        \\\"server_stabilization_time\\\": \\\"10s\\\",\n        \\\"redundancy_zone_tag\\\": \\\"az\\\",\n        \\\"disable_upgrade_migration\\\": false,\n        \\\"upgrade_version_tag\\\": \\\"\\\"\n    }\n}\" \\\n    docker-local.artifactory-stg.elliemae.io/consul:latest agent -server -ui \\\n    -datacenter=\"$REGION\" \\\n    -bind=\"$IP\" \\\n    -client=\"0.0.0.0\" \\\n    $JOIN_STRING\\\n    $WAN_JOIN \\\n    -bootstrap-expect=\"$EXPECTED_SIZE\"\nfi\n\n# waiting for leader to be elected before creating master acl\nCURLURL=\"$IP:8500/v1/status/leader\"\nwhile ! curl $CURLURL 2\u003e\u00261 | grep -E '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}:[0-9]{1,4}'; do\n    echo \"Waiting for leader election...\";\n    sleep 1;\ndone\n\nURL=\"http://\"$ADDR\":8500/agent/token/acl_replication_token\"\n\nif [ \"$REGION\" == \"us-west-2\" ]; then\n    # only commit real master token if first node. All other nodes fail.\n    MASTER_TOKEN=$(curl --request PUT $IP:8500/v1/acl/bootstrap)\n    if echo $MASTER_TOKEN 2\u003e\u00261|grep -q 'ID'; then\n        echo $MASTER_TOKEN \u003e plaintext-password;\n        aws --region $REGION kms encrypt  \\\n            --key-id $KMSALIAS \\\n            --plaintext fileb://plaintext-password \\\n            --output text --query CiphertextBlob | \\\n            base64 --decode \u003e ./master-acl;\n        rm -rf plaintext-password;\n        aws --region $REGION s3 cp ./master-acl s3://$BUCKET/\n        echo \"successfully created and committed master acl\" \u003e status$UUID\n        TOKEN_ONLY=$(echo $MASTER_TOKEN | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n        REPLICATION_TOKEN=\"{\\\"Token\\\":\"\\\"$TOKEN_ONLY\\\"\"}\"\n        curl --request PUT --data $REPLICATION_TOKEN $URL\n        MASTER_TOKEN=deleted\n    else\n        echo \"master acl already created\" \u003e status$UUID\n        aws s3 cp s3://$BUCKET/master-acl ./master-acl\n        RAW=$(aws kms decrypt --region us-west-2 --ciphertext-blob fileb://master-acl --output text --query Plaintext | base64 --decode)\n        MASTER=$(echo $RAW | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n        REPLICATION_TOKEN=\"{\\\"Token\\\":\"\\\"$MASTER\\\"\"}\"\n        curl --request PUT --data $REPLICATION_TOKEN $URL\n    fi\nfi\n\nif [ \"$REGION\" == \"us-east-1\" ]; then\n    docker exec -d consul consul-replicate -prefix \"environments@us-west-2\" -consul-token=$MASTER\nfi",
                            "template": "#!/bin/bash -ex\n\nyum update -y\n\n# Install collectd\nyum install collectd -y\n\n# Install AWS Log Agent\nyum install -y awslogs\n\n# Configure the AWS Log Agent\nmkdir -p /var/awslogs/state\ncat \u003e /etc/awslogs/awslogs.conf \u003c\u003cEOF\n[general]\nstate_file = /var/awslogs/state/agent-state\n[/var/log/messages]\nfile = /var/log/messages\nlog_group_name = accord-${env}-consul_logs\nlog_stream_name = {instance_id}\ndatetime_format = %b %d %H:%M:%S\nEOF\n\ncat \u003e /etc/awslogs/awscli.conf \u003c\u003cEOF\n[plugins]\ncwlogs = cwlogs\n[default]\nregion = ${region}\nEOF\n\nservice awslogs start\n\n# Seperate Consul logs out\n# cat \u003e\u003e \"local0.* /var/log/consul.log\" \u003e\u003e /etc/rsyslogd.conf\n# /etc/init.d/rsyslogd restart\n\n\necho 'installing additional software'\nfor i in {1..5}\ndo\n    yum install -y aws-cli \u0026\u0026 break || sleep 120\ndone\n\n# Install collectd-python plugin\nyum install -y collectd-python\n\nADDR=($(hostname -I))\ninstance_name=$(hostname)\n\ncat \u003e /etc/hosts \u003c\u003cEOF\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost6 localhost6.localdomain6\n$ADDR $instance_name\nEOF\n\n#easy_install pip\n\nyum install python27-pip -y\n\n# Download the setup script for cloudwatch collectd\nARTIFACTORY_USER=\"${artifactory_user}\"\nARTIFACTORY_PASSWORD=\"${artifactory_password}\"\ncurl -u $ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD https://artifactory-stg.elliemae.io/artifactory/deploy/cloudwatch-collectd/setup.py -o /tmp/setup.py\nchmod a+x /tmp/setup.py\npython /tmp/setup.py -I -m add\n\ncat \u003e\u003e /opt/collectd-plugins/cloudwatch/config/whitelist.conf \u003c\u003cEOF\nstatsd--.*\nEOF\n\n#Configure collectd and statsd plugin\ncat \u003e\u003e /etc/collectd.conf \u003c\u003cEOF\nLoadPlugin statsd\n\u003cPlugin statsd\u003e\n    Host \"::\"\n    Port \"8125\"\n    DeleteSets     true\n    TimerPercentile 90.0\n\u003c/Plugin\u003e\nLoadPlugin logfile\n\u003cPlugin logfile\u003e\n       LogLevel info\n       File \"/var/log/collectd.log\"\n       Timestamp true\n       PrintSeverity false\n\u003c/Plugin\u003e\nEOF\n\n# Restart the collectd service\n/etc/init.d/collectd restart\n\nASG_NAME=\"${asgname}\"\nREGION=\"${region}\"\nENV=\"${env}\"\nKMSALIAS=\"${kmsalias}\"\nEXPECTED_SIZE=\"${cluster_size}\"\nBUCKET=\"${bucket}\"\nUUID=$(uuidgen)\nSNAPSHOT=$BUCKET\"/snapshots/\"\n\n#install security agents\nyum install -y unzip\naws s3 cp s3://em-accord-$REGION-$ENV/resources.zip resources.zip\nunzip resources.zip\nbash security_agents.sh\n\n\n# Return the id of each instance in the cluster.\nfunction cluster-instance-ids {\n    # Grab every line which contains 'InstanceId', cut on double quotes and grab the ID:\n    #    \"InstanceId\": \"i-example123\"\n    #....^..........^..^.....#4.....^...\n    aws --region=\"$REGION\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG_NAME \\\n        | grep InstanceId \\\n        | cut -d '\"' -f4\n}\n\n# Return the private IP of each instance in the cluster.\nfunction cluster-ips {\n    for id in $(cluster-instance-ids)\n    do\n        aws --region=\"$REGION\" ec2 describe-instances \\\n            --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n            --output=\"text\" \\\n            --instance-ids=\"$id\"\n    done\n}\n\n\nfunction diff-cluster-instance-ids {\n    # Grab every line which contains 'InstanceId', cut on double quotes and grab the ID:\n    #    \"InstanceId\": \"i-example123\"\n    #....^..........^..^.....#4.....^...\n    if [ \"$REGION\" == \"us-east-1\" ]; then\n        ASG=\"consul-cluster-asg-us-west-2-$ENV\"\n        aws --region=\"us-west-2\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG \\\n            | grep InstanceId \\\n            | cut -d '\"' -f4\n    else\n        ASG=\"consul-cluster-asg-us-east-1-$ENV\"\n        aws --region=\"us-east-1\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG \\\n            | grep InstanceId \\\n            | cut -d '\"' -f4\n    fi\n}\n\n# Return the private IP of each instance in the cluster.\nfunction diff-cluster-ips {\n    if [ \"$REGION\" == \"us-east-1\" ]; then\n        for id in $(diff-cluster-instance-ids)\n        do\n            aws --region=\"us-west-2\" ec2 describe-instances \\\n                --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n                --output=\"text\" \\\n                --instance-ids=\"$id\"\n        done\n    else\n        for id in $(diff-cluster-instance-ids)\n        do\n            aws --region=\"us-east-1\" ec2 describe-instances \\\n                --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n                --output=\"text\" \\\n                --instance-ids=\"$id\"\n        done\n    fi\n}\n\n\n# Wait until we have as many cluster instances as we are expecting.\nwhile COUNT=$(cluster-instance-ids | wc -l) \u0026\u0026 [ \"$COUNT\" -lt \"$EXPECTED_SIZE\" ]\ndo\n    echo \"$COUNT instances in the cluster, waiting for $EXPECTED_SIZE instances to warm up...\"\n    sleep 1\ndone\n\nwhile DIFFCOUNT=$(diff-cluster-instance-ids | wc -l) \u0026\u0026 [ \"$DIFFCOUNT\" -lt \"$EXPECTED_SIZE\" ]\ndo\n    echo \"$DIFFCOUNT instances in the OTHER cluster, waiting for $EXPECTED_SIZE instances to warm up...\"\n    sleep 1\ndone\n\n# Get my IP address, all IPs in the cluster, then just the 'other' IPs...\nIP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\nmapfile -t ALL_IPS \u003c \u003c(cluster-ips)\nOTHER_IPS=( $${ALL_IPS[@]/$${IP}/} )\necho \"Instance IP is: $IP, Cluster IPs are: $${ALL_IPS[@]}, Other IPs are: $${OTHER_IPS[@]}\"\n\nmapfile -t WAN_IPS \u003c \u003c(diff-cluster-ips)\n\n# create join string\nfor i in $(echo $${OTHER_IPS[@]} | sed \"s/,/ /g\")\ndo\n    JOIN_STRING+=\"-retry-join $i \"\ndone\n\n# Prepare join string for WAN join\nfor i in $(echo $${WAN_IPS[@]} | sed \"s/,/ /g\")\ndo\n    WAN_JOIN+=\"-retry-join-wan $i \"\ndone\n\necho \"WAN ips are: $WAN_JOIN\"\n\n# pull docker image from artifactory (new for supporting rolling deploy)\ndocker login -u $ARTIFACTORY_USER -p $ARTIFACTORY_PASSWORD docker-local.artifactory-stg.elliemae.io\ndocker pull docker-local.artifactory-stg.elliemae.io/consul:latest\n\nif [ \"$REGION\" == \"us-west-2\" ]; then\n    docker run -v /dev/log:/dev/log -d -p \"8125:8125\" --net=host \\\n    --name=consul \\\n    -e CONSUL_LOCAL_CONFIG=\"{\n    \\\"acl_datacenter\\\": \\\"$REGION\\\",\n    \\\"acl_default_policy\\\": \\\"deny\\\",\n    \\\"enable_acl_replication\\\": true,\n    \\\"enable_syslog\\\": true,\n    \\\"telemetry\\\": {\n        \\\"statsd_address\\\": \\\"127.0.0.1:8125\\\"\n    },\n    \\\"autopilot\\\": {\n        \\\"cleanup_dead_servers\\\": true,\n        \\\"last_contact_threshold\\\": \\\"200ms\\\",\n        \\\"max_trailing_logs\\\": 250,\n        \\\"server_stabilization_time\\\": \\\"10s\\\",\n        \\\"redundancy_zone_tag\\\": \\\"az\\\",\n        \\\"disable_upgrade_migration\\\": false,\n        \\\"upgrade_version_tag\\\": \\\"\\\"\n    }\n}\" \\\n    docker-local.artifactory-stg.elliemae.io/consul:latest agent -server -ui \\\n    -datacenter=\"$REGION\" \\\n    -bind=\"$$IP\" \\\n    -client=\"0.0.0.0\" \\\n    $JOIN_STRING\\\n    $WAN_JOIN \\\n    -bootstrap-expect=\"$EXPECTED_SIZE\"\nelse\n    MAIN_BUCKET=\"em-accord-us-west-2-$ENV\"\n    while [ true ];\n    do\n        echo aws s3 cp s3://$MAIN_BUCKET/master-acl master-acl\n        aws s3 cp s3://$MAIN_BUCKET/master-acl master-acl\n        result=$?\n        echo Tried Fetch - $result\n        if [ \"$result\" == \"0\" ]; then\n            echo Fetched Successfully\n            break\n        fi\n        echo Main datacenter in us-west-2 is still bootstrapping. Wait!\n        sleep 1\n    done\n    aws --region $REGION s3 cp ./master-acl s3://$BUCKET/\n    RAW=$(aws kms decrypt --region us-west-2 --ciphertext-blob fileb://master-acl --output text --query Plaintext | base64 --decode)\n    MASTER=$(echo $RAW | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n    rm master-acl\n    docker run -v /dev/log:/dev/log -d -p \"8125:8125\" --net=host \\\n    --name=consul \\\n    -e CONSUL_LOCAL_CONFIG=\"{\n    \\\"acl_datacenter\\\": \\\"us-west-2\\\",\n    \\\"acl_default_policy\\\": \\\"deny\\\",\n    \\\"acl_master_token\\\": \\\"$MASTER\\\",\n    \\\"acl_replication_token\\\": \\\"$MASTER\\\",\n    \\\"enable_syslog\\\": true,\n    \\\"telemetry\\\": {\n        \\\"statsd_address\\\": \\\"127.0.0.1:8125\\\"\n    },\n    \\\"autopilot\\\": {\n        \\\"cleanup_dead_servers\\\": true,\n        \\\"last_contact_threshold\\\": \\\"200ms\\\",\n        \\\"max_trailing_logs\\\": 250,\n        \\\"server_stabilization_time\\\": \\\"10s\\\",\n        \\\"redundancy_zone_tag\\\": \\\"az\\\",\n        \\\"disable_upgrade_migration\\\": false,\n        \\\"upgrade_version_tag\\\": \\\"\\\"\n    }\n}\" \\\n    docker-local.artifactory-stg.elliemae.io/consul:latest agent -server -ui \\\n    -datacenter=\"$REGION\" \\\n    -bind=\"$$IP\" \\\n    -client=\"0.0.0.0\" \\\n    $JOIN_STRING\\\n    $WAN_JOIN \\\n    -bootstrap-expect=\"$EXPECTED_SIZE\"\nfi\n\n# waiting for leader to be elected before creating master acl\nCURLURL=\"$IP:8500/v1/status/leader\"\nwhile ! curl $CURLURL 2\u003e\u00261 | grep -E '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}:[0-9]{1,4}'; do\n    echo \"Waiting for leader election...\";\n    sleep 1;\ndone\n\nURL=\"http://\"$ADDR\":8500/agent/token/acl_replication_token\"\n\nif [ \"$REGION\" == \"us-west-2\" ]; then\n    # only commit real master token if first node. All other nodes fail.\n    MASTER_TOKEN=$(curl --request PUT $IP:8500/v1/acl/bootstrap)\n    if echo $MASTER_TOKEN 2\u003e\u00261|grep -q 'ID'; then\n        echo $MASTER_TOKEN \u003e plaintext-password;\n        aws --region $REGION kms encrypt  \\\n            --key-id $KMSALIAS \\\n            --plaintext fileb://plaintext-password \\\n            --output text --query CiphertextBlob | \\\n            base64 --decode \u003e ./master-acl;\n        rm -rf plaintext-password;\n        aws --region $REGION s3 cp ./master-acl s3://$BUCKET/\n        echo \"successfully created and committed master acl\" \u003e status$UUID\n        TOKEN_ONLY=$(echo $$MASTER_TOKEN | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n        REPLICATION_TOKEN=\"{\\\"Token\\\":\"\\\"$TOKEN_ONLY\\\"\"}\"\n        curl --request PUT --data $REPLICATION_TOKEN $URL\n        MASTER_TOKEN=deleted\n    else\n        echo \"master acl already created\" \u003e status$UUID\n        aws s3 cp s3://$BUCKET/master-acl ./master-acl\n        RAW=$(aws kms decrypt --region us-west-2 --ciphertext-blob fileb://master-acl --output text --query Plaintext | base64 --decode)\n        MASTER=$(echo $RAW | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n        REPLICATION_TOKEN=\"{\\\"Token\\\":\"\\\"$MASTER\\\"\"}\"\n        curl --request PUT --data $REPLICATION_TOKEN $URL\n    fi\nfi\n\nif [ \"$REGION\" == \"us-east-1\" ]; then\n    docker exec -d consul consul-replicate -prefix \"environments@us-west-2\" -consul-token=$MASTER\nfi",
                            "vars.%": "9",
                            "vars.artifactory_password": "xUd2s4F^V/nXVPq",
                            "vars.artifactory_user": "svc-accord-deploy",
                            "vars.asgname": "consul-cluster-asg-us-east-1-prod",
                            "vars.bucket": "em-accord-us-east-1-prod",
                            "vars.cluster_size": "3",
                            "vars.env": "prod",
                            "vars.kmsalias": "alias/accord-us-east-1-prod",
                            "vars.min_size": "3",
                            "vars.region": "us-east-1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.rolling-deploy": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_lambda_function.rolling-deploy-health-check",
                        "aws_lambda_function.rolling-deploy-remove-old"
                    ],
                    "primary": {
                        "id": "bae97d9ffb179fd4ab5a058ff7d42611317346e6b2878f151080680cb2fedb3a",
                        "attributes": {
                            "id": "bae97d9ffb179fd4ab5a058ff7d42611317346e6b2878f151080680cb2fedb3a",
                            "rendered": "{\n  \"Comment\": \"State machine for initiating rolling deploy for consul cluster.\",\n  \"StartAt\": \"RemoveNode\",\n  \"States\": {\n    \"RemoveNode\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-remove-old-us-east-1-prod\",\n      \"Next\": \"WaitForCluster\"\n    },\n    \"WaitForCluster\": {\n      \"Type\": \"Wait\",\n      \"Seconds\": 300,\n      \"Next\": \"HealthCheck\"\n    },\n    \"HealthCheck\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-health-check-us-east-1-prod\",\n      \"Next\": \"ChoiceCheck\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"],\n          \"MaxAttempts\": 10\n        }\n      ]\n    },\n    \"ChoiceCheck\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n          {\n            \"Variable\": \"$.num_old\",\n            \"NumericGreaterThan\": 0,\n            \"Next\": \"RemoveNode\"\n          }\n      ],\n      \"Default\": \"JobComplete\"\n    },\n    \"JobComplete\": {\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}",
                            "template": "{\n  \"Comment\": \"State machine for initiating rolling deploy for consul cluster.\",\n  \"StartAt\": \"RemoveNode\",\n  \"States\": {\n    \"RemoveNode\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${REMOVEOLDNODES}\",\n      \"Next\": \"WaitForCluster\"\n    },\n    \"WaitForCluster\": {\n      \"Type\": \"Wait\",\n      \"Seconds\": 300,\n      \"Next\": \"HealthCheck\"\n    },\n    \"HealthCheck\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${HEALTHCHECK}\",\n      \"Next\": \"ChoiceCheck\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"],\n          \"MaxAttempts\": 10\n        }\n      ]\n    },\n    \"ChoiceCheck\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n          {\n            \"Variable\": \"$.num_old\",\n            \"NumericGreaterThan\": 0,\n            \"Next\": \"RemoveNode\"\n          }\n      ],\n      \"Default\": \"JobComplete\"\n    },\n    \"JobComplete\": {\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}",
                            "vars.%": "2",
                            "vars.HEALTHCHECK": "arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-health-check-us-east-1-prod",
                            "vars.REMOVEOLDNODES": "arn:aws:lambda:us-east-1:489867994332:function:accord-rolling-deploy-remove-old-us-east-1-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.trigger-file": {
                    "type": "template_file",
                    "depends_on": [
                        "data.template_file.consul-cluster-template"
                    ],
                    "primary": {
                        "id": "297b6f9f9074362cfbab0dd8b79b44d8ccbd3a7ed88b7f8bff8f9cf69b776a0d",
                        "attributes": {
                            "id": "297b6f9f9074362cfbab0dd8b79b44d8ccbd3a7ed88b7f8bff8f9cf69b776a0d",
                            "rendered": "{\n\"name\": \"consul-cluster-asg-us-east-1-prod\",\n\"min_size\": \"3\",\n\"max_size\": \"6\",\n\"desired_capacity\": \"3\",\n\"min_elb_capacity\": \"3\",\n\"image_id\": \"ami-aff65ad2\",\n\"user_data\": \"74284e70c545e193f2b56b867cf73ba56946997a22b357b2ac8c811538e1add1\",\n\"instance_type\": \"t2.medium\",\n\"key_name\": \"em-accord-deployment\"\n}\n",
                            "template": "{\n\"name\": \"${name}\",\n\"min_size\": \"${min_size}\",\n\"max_size\": \"${max_size}\",\n\"desired_capacity\": \"${desired_capacity}\",\n\"min_elb_capacity\": \"${min_elb_capacity}\",\n\"image_id\": \"${image_id}\",\n\"user_data\": \"${user_data}\",\n\"instance_type\": \"${instance_type}\",\n\"key_name\": \"${key_name}\"\n}\n",
                            "vars.%": "10",
                            "vars.cluster_size": "3",
                            "vars.desired_capacity": "3",
                            "vars.image_id": "ami-aff65ad2",
                            "vars.instance_type": "t2.medium",
                            "vars.key_name": "em-accord-deployment",
                            "vars.max_size": "6",
                            "vars.min_elb_capacity": "3",
                            "vars.min_size": "3",
                            "vars.name": "consul-cluster-asg-us-east-1-prod",
                            "vars.user_data": "74284e70c545e193f2b56b867cf73ba56946997a22b357b2ac8c811538e1add1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "west-2"
            ],
            "outputs": {
                "artifact-output": {
                    "sensitive": false,
                    "type": "string",
                    "value": "resources/em-accord-api/35/em-accord-lambda-python.zip"
                }
            },
            "resources": {
                "artifactory_artifact.artifact_api": {
                    "type": "artifactory_artifact",
                    "depends_on": [],
                    "primary": {
                        "id": "deploy/em-accord-api/35/em-accord-lambda-python.zip",
                        "attributes": {
                            "flatten": "false",
                            "id": "deploy/em-accord-api/35/em-accord-lambda-python.zip",
                            "output": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "output_dir": "resources",
                            "repository_path": "deploy/em-accord-api/35/em-accord-lambda-python.zip"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.artifactory"
                },
                "aws_acm_certificate.cert": {
                    "type": "aws_acm_certificate",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:acm:us-west-2:489867994332:certificate/ea42ba15-6ac1-4e5b-b478-22b7752210bc",
                        "attributes": {
                            "arn": "arn:aws:acm:us-west-2:489867994332:certificate/ea42ba15-6ac1-4e5b-b478-22b7752210bc",
                            "domain_name": "consul.us-west-2.accord.ellieservices.com",
                            "domain_validation_options.#": "3",
                            "domain_validation_options.0.domain_name": "consul.us-west-2.accord.ellieservices.com",
                            "domain_validation_options.0.resource_record_name": "_d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com.",
                            "domain_validation_options.0.resource_record_type": "CNAME",
                            "domain_validation_options.0.resource_record_value": "_8c38a77da34ea1b9c7c9bdd98cd769b4.tljzshvwok.acm-validations.aws.",
                            "domain_validation_options.1.domain_name": "api.us-west-2.accord.ellieservices.com",
                            "domain_validation_options.1.resource_record_name": "_a19969a54ceb4728a1eed261b4fa9c84.api.us-west-2.accord.ellieservices.com.",
                            "domain_validation_options.1.resource_record_type": "CNAME",
                            "domain_validation_options.1.resource_record_value": "_c97363580d8983870621a0712949d3af.tljzshvwok.acm-validations.aws.",
                            "domain_validation_options.2.domain_name": "consul.us-east-1.accord.ellieservices.com",
                            "domain_validation_options.2.resource_record_name": "_ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com.",
                            "domain_validation_options.2.resource_record_type": "CNAME",
                            "domain_validation_options.2.resource_record_value": "_a6cb57af13bb37b33dbd35ae7fe7a089.tljzshvwok.acm-validations.aws.",
                            "id": "arn:aws:acm:us-west-2:489867994332:certificate/ea42ba15-6ac1-4e5b-b478-22b7752210bc",
                            "subject_alternative_names.#": "2",
                            "subject_alternative_names.0": "api.us-west-2.accord.ellieservices.com",
                            "subject_alternative_names.1": "consul.us-east-1.accord.ellieservices.com",
                            "tags.%": "0",
                            "validation_emails.#": "0",
                            "validation_method": "DNS"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_acm_certificate_validation.cert": {
                    "type": "aws_acm_certificate_validation",
                    "depends_on": [
                        "aws_acm_certificate.cert",
                        "aws_route53_record.cert_validation",
                        "aws_route53_record.cert_validation_alt1",
                        "aws_route53_record.cert_validation_alt2"
                    ],
                    "primary": {
                        "id": "2018-09-26 23:33:34 +0000 UTC",
                        "attributes": {
                            "certificate_arn": "arn:aws:acm:us-west-2:489867994332:certificate/ea42ba15-6ac1-4e5b-b478-22b7752210bc",
                            "id": "2018-09-26 23:33:34 +0000 UTC",
                            "validation_record_fqdns.#": "3",
                            "validation_record_fqdns.2360570973": "_ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com",
                            "validation_record_fqdns.3124985036": "_d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com",
                            "validation_record_fqdns.4041138695": "_a19969a54ceb4728a1eed261b4fa9c84.api.us-west-2.accord.ellieservices.com"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 2700000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_api_gateway_base_path_mapping.accord-api-mapping": {
                    "type": "aws_api_gateway_base_path_mapping",
                    "depends_on": [
                        "aws_api_gateway_deployment.accord-deployment",
                        "aws_api_gateway_domain_name.accord-domain",
                        "aws_api_gateway_rest_api.accord-rest-api"
                    ],
                    "primary": {
                        "id": "api.us-west-2.accord.ellieservices.com/",
                        "attributes": {
                            "api_id": "8fhmqva5g4",
                            "base_path": "",
                            "domain_name": "api.us-west-2.accord.ellieservices.com",
                            "id": "api.us-west-2.accord.ellieservices.com/",
                            "stage_name": "prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_api_gateway_deployment.accord-deployment": {
                    "type": "aws_api_gateway_deployment",
                    "depends_on": [],
                    "primary": {
                        "id": "4nnzhe",
                        "attributes": {
                            "created_date": "2018-11-01T18:29:11Z",
                            "description": "",
                            "execution_arn": "arn:aws:execute-api:us-west-2:489867994332:8fhmqva5g4/prod",
                            "id": "4nnzhe",
                            "invoke_url": "https://8fhmqva5g4.execute-api.us-west-2.amazonaws.com/prod",
                            "rest_api_id": "8fhmqva5g4",
                            "stage_name": "prod",
                            "variables.%": "1",
                            "variables.deploy_time": "2018-11-01T18:29:10Z"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_api_gateway_domain_name.accord-domain": {
                    "type": "aws_api_gateway_domain_name",
                    "depends_on": [
                        "aws_acm_certificate_validation.cert"
                    ],
                    "primary": {
                        "id": "api.us-west-2.accord.ellieservices.com",
                        "attributes": {
                            "certificate_arn": "",
                            "certificate_name": "",
                            "certificate_upload_date": "2018-09-26T23:33:44Z",
                            "cloudfront_domain_name": "",
                            "cloudfront_zone_id": "Z2FDTNDATAQYW2",
                            "domain_name": "api.us-west-2.accord.ellieservices.com",
                            "endpoint_configuration.#": "1",
                            "endpoint_configuration.0.types.#": "1",
                            "endpoint_configuration.0.types.0": "REGIONAL",
                            "id": "api.us-west-2.accord.ellieservices.com",
                            "regional_certificate_arn": "arn:aws:acm:us-west-2:489867994332:certificate/ea42ba15-6ac1-4e5b-b478-22b7752210bc",
                            "regional_certificate_name": "",
                            "regional_domain_name": "d-o8gx5bwny4.execute-api.us-west-2.amazonaws.com",
                            "regional_zone_id": "Z2OJLYMUO9EFXC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_api_gateway_integration.accord-proxy-integration": {
                    "type": "aws_api_gateway_integration",
                    "depends_on": [
                        "aws_api_gateway_method.api-proxy",
                        "aws_api_gateway_resource.accord-api-resource",
                        "aws_api_gateway_rest_api.accord-rest-api",
                        "aws_lambda_function.accord-lambda-function"
                    ],
                    "primary": {
                        "id": "agi-8fhmqva5g4-z4xnas-ANY",
                        "attributes": {
                            "cache_key_parameters.#": "0",
                            "cache_namespace": "z4xnas",
                            "connection_id": "",
                            "connection_type": "INTERNET",
                            "content_handling": "",
                            "credentials": "",
                            "http_method": "ANY",
                            "id": "agi-8fhmqva5g4-z4xnas-ANY",
                            "integration_http_method": "POST",
                            "passthrough_behavior": "WHEN_NO_MATCH",
                            "request_parameters.%": "0",
                            "request_templates.%": "0",
                            "resource_id": "z4xnas",
                            "rest_api_id": "8fhmqva5g4",
                            "timeout_milliseconds": "29000",
                            "type": "AWS_PROXY",
                            "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:489867994332:function:accord-prod-flask/invocations"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_api_gateway_method.api-proxy": {
                    "type": "aws_api_gateway_method",
                    "depends_on": [
                        "aws_api_gateway_resource.accord-api-resource",
                        "aws_api_gateway_rest_api.accord-rest-api"
                    ],
                    "primary": {
                        "id": "agm-8fhmqva5g4-z4xnas-ANY",
                        "attributes": {
                            "api_key_required": "false",
                            "authorization": "NONE",
                            "authorization_scopes.#": "0",
                            "authorizer_id": "",
                            "http_method": "ANY",
                            "id": "agm-8fhmqva5g4-z4xnas-ANY",
                            "request_models.%": "0",
                            "request_parameters.%": "0",
                            "request_validator_id": "",
                            "resource_id": "z4xnas",
                            "rest_api_id": "8fhmqva5g4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_api_gateway_method_response.200": {
                    "type": "aws_api_gateway_method_response",
                    "depends_on": [
                        "aws_api_gateway_method.api-proxy",
                        "aws_api_gateway_resource.accord-api-resource",
                        "aws_api_gateway_rest_api.accord-rest-api"
                    ],
                    "primary": {
                        "id": "agmr-8fhmqva5g4-z4xnas-ANY-200",
                        "attributes": {
                            "http_method": "ANY",
                            "id": "agmr-8fhmqva5g4-z4xnas-ANY-200",
                            "resource_id": "z4xnas",
                            "response_models.%": "0",
                            "response_parameters.%": "0",
                            "rest_api_id": "8fhmqva5g4",
                            "status_code": "200"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_api_gateway_resource.accord-api-resource": {
                    "type": "aws_api_gateway_resource",
                    "depends_on": [
                        "aws_api_gateway_rest_api.accord-rest-api"
                    ],
                    "primary": {
                        "id": "z4xnas",
                        "attributes": {
                            "id": "z4xnas",
                            "parent_id": "4xz6n84w3d",
                            "path": "/{proxy+}",
                            "path_part": "{proxy+}",
                            "rest_api_id": "8fhmqva5g4"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_api_gateway_rest_api.accord-rest-api": {
                    "type": "aws_api_gateway_rest_api",
                    "depends_on": [],
                    "primary": {
                        "id": "8fhmqva5g4",
                        "attributes": {
                            "api_key_source": "HEADER",
                            "binary_media_types.#": "0",
                            "created_date": "2018-09-26T23:31:17Z",
                            "description": "",
                            "endpoint_configuration.#": "1",
                            "endpoint_configuration.0.types.#": "1",
                            "endpoint_configuration.0.types.0": "REGIONAL",
                            "execution_arn": "arn:aws:execute-api:us-west-2:489867994332:8fhmqva5g4",
                            "id": "8fhmqva5g4",
                            "minimum_compression_size": "-1",
                            "name": "accord-rest-api-us-west-2-prod",
                            "policy": "",
                            "root_resource_id": "4xz6n84w3d"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_appautoscaling_policy.dynamodb-table-read-policy": {
                    "type": "aws_appautoscaling_policy",
                    "depends_on": [
                        "aws_appautoscaling_target.dynamodb-table-read-target"
                    ],
                    "primary": {
                        "id": "DynamoDBReadCapacityUtilization:table/accord-lock-table-prod",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-west-2:489867994332:scalingPolicy:efcfb5c7-3c19-4d25-9c5b-9e9bb6040e25:resource/dynamodb/table/accord-lock-table-prod:policyName/DynamoDBReadCapacityUtilization:table/accord-lock-table-prod",
                            "id": "DynamoDBReadCapacityUtilization:table/accord-lock-table-prod",
                            "name": "DynamoDBReadCapacityUtilization:table/accord-lock-table-prod",
                            "policy_type": "TargetTrackingScaling",
                            "resource_id": "table/accord-lock-table-prod",
                            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
                            "service_namespace": "dynamodb",
                            "step_scaling_policy_configuration.#": "0",
                            "target_tracking_scaling_policy_configuration.#": "1",
                            "target_tracking_scaling_policy_configuration.0.customized_metric_specification.#": "0",
                            "target_tracking_scaling_policy_configuration.0.disable_scale_in": "false",
                            "target_tracking_scaling_policy_configuration.0.predefined_metric_specification.#": "1",
                            "target_tracking_scaling_policy_configuration.0.predefined_metric_specification.0.predefined_metric_type": "DynamoDBReadCapacityUtilization",
                            "target_tracking_scaling_policy_configuration.0.predefined_metric_specification.0.resource_label": "",
                            "target_tracking_scaling_policy_configuration.0.scale_in_cooldown": "0",
                            "target_tracking_scaling_policy_configuration.0.scale_out_cooldown": "0",
                            "target_tracking_scaling_policy_configuration.0.target_value": "70"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_appautoscaling_policy.dynamodb-table-write-policy": {
                    "type": "aws_appautoscaling_policy",
                    "depends_on": [
                        "aws_appautoscaling_target.dynamodb-table-write-target"
                    ],
                    "primary": {
                        "id": "DynamoDBWriteCapacityUtilization:table/accord-lock-table-prod",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-west-2:489867994332:scalingPolicy:df5e35a9-4303-491a-be67-d62b926cc0ae:resource/dynamodb/table/accord-lock-table-prod:policyName/DynamoDBWriteCapacityUtilization:table/accord-lock-table-prod",
                            "id": "DynamoDBWriteCapacityUtilization:table/accord-lock-table-prod",
                            "name": "DynamoDBWriteCapacityUtilization:table/accord-lock-table-prod",
                            "policy_type": "TargetTrackingScaling",
                            "resource_id": "table/accord-lock-table-prod",
                            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
                            "service_namespace": "dynamodb",
                            "step_scaling_policy_configuration.#": "0",
                            "target_tracking_scaling_policy_configuration.#": "1",
                            "target_tracking_scaling_policy_configuration.0.customized_metric_specification.#": "0",
                            "target_tracking_scaling_policy_configuration.0.disable_scale_in": "false",
                            "target_tracking_scaling_policy_configuration.0.predefined_metric_specification.#": "1",
                            "target_tracking_scaling_policy_configuration.0.predefined_metric_specification.0.predefined_metric_type": "DynamoDBWriteCapacityUtilization",
                            "target_tracking_scaling_policy_configuration.0.predefined_metric_specification.0.resource_label": "",
                            "target_tracking_scaling_policy_configuration.0.scale_in_cooldown": "0",
                            "target_tracking_scaling_policy_configuration.0.scale_out_cooldown": "0",
                            "target_tracking_scaling_policy_configuration.0.target_value": "70"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_appautoscaling_target.dynamodb-table-read-target": {
                    "type": "aws_appautoscaling_target",
                    "depends_on": [
                        "aws_dynamodb_table.accord-lock-table",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "table/accord-lock-table-prod",
                        "attributes": {
                            "id": "table/accord-lock-table-prod",
                            "max_capacity": "5",
                            "min_capacity": "1",
                            "resource_id": "table/accord-lock-table-prod",
                            "role_arn": "arn:aws:iam::489867994332:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
                            "scalable_dimension": "dynamodb:table:ReadCapacityUnits",
                            "service_namespace": "dynamodb"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_appautoscaling_target.dynamodb-table-write-target": {
                    "type": "aws_appautoscaling_target",
                    "depends_on": [
                        "aws_dynamodb_table.accord-lock-table",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "table/accord-lock-table-prod",
                        "attributes": {
                            "id": "table/accord-lock-table-prod",
                            "max_capacity": "100",
                            "min_capacity": "5",
                            "resource_id": "table/accord-lock-table-prod",
                            "role_arn": "arn:aws:iam::489867994332:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
                            "scalable_dimension": "dynamodb:table:WriteCapacityUnits",
                            "service_namespace": "dynamodb"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_autoscaling_group.consul-cluster": {
                    "type": "aws_autoscaling_group",
                    "depends_on": [
                        "aws_elb.consul-cluster",
                        "aws_launch_configuration.consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "consul-cluster-asg-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:autoscaling:us-west-2:489867994332:autoScalingGroup:1f6c851a-84f7-4524-8e3d-105a53b3a48e:autoScalingGroupName/consul-cluster-asg-us-west-2-prod",
                            "availability_zones.#": "3",
                            "availability_zones.2050015877": "us-west-2c",
                            "availability_zones.221770259": "us-west-2b",
                            "availability_zones.2487133097": "us-west-2a",
                            "default_cooldown": "300",
                            "desired_capacity": "3",
                            "enabled_metrics.#": "1",
                            "enabled_metrics.3551801763": "GroupInServiceInstances",
                            "force_delete": "false",
                            "health_check_grace_period": "300",
                            "health_check_type": "ELB",
                            "id": "consul-cluster-asg-us-west-2-prod",
                            "launch_configuration": "terraform-20181101182910981400000001",
                            "launch_template.#": "0",
                            "load_balancers.#": "1",
                            "load_balancers.392138787": "consul-elb-us-west-2-prod",
                            "max_size": "6",
                            "metrics_granularity": "1Minute",
                            "min_elb_capacity": "3",
                            "min_size": "3",
                            "name": "consul-cluster-asg-us-west-2-prod",
                            "placement_group": "",
                            "protect_from_scale_in": "false",
                            "service_linked_role_arn": "arn:aws:iam::489867994332:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
                            "suspended_processes.#": "0",
                            "tag.#": "1",
                            "tag.2130388042.key": "Name",
                            "tag.2130388042.propagate_at_launch": "true",
                            "tag.2130388042.value": "consul-cluster-asg-us-west-2-prod",
                            "target_group_arns.#": "0",
                            "termination_policies.#": "0",
                            "vpc_zone_identifier.#": "3",
                            "vpc_zone_identifier.2431473127": "subnet-ec877fa7",
                            "vpc_zone_identifier.4067492572": "subnet-baad28e0",
                            "vpc_zone_identifier.784104188": "subnet-e9449a90",
                            "wait_for_capacity_timeout": "15m"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_cloudwatch_event_rule.snapshot_interval": {
                    "type": "aws_cloudwatch_event_rule",
                    "depends_on": [],
                    "primary": {
                        "id": "accord-snapshot-interval-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:events:us-west-2:489867994332:rule/accord-snapshot-interval-us-west-2-prod",
                            "description": "Sets the interval for snapshots",
                            "id": "accord-snapshot-interval-us-west-2-prod",
                            "is_enabled": "true",
                            "name": "accord-snapshot-interval-us-west-2-prod",
                            "role_arn": "",
                            "schedule_expression": "rate(1 day)"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_cloudwatch_event_target.accord_snapshot_target": {
                    "type": "aws_cloudwatch_event_target",
                    "depends_on": [
                        "aws_cloudwatch_event_rule.snapshot_interval",
                        "aws_lambda_function.accord_snapshot_lambda"
                    ],
                    "primary": {
                        "id": "accord-snapshot-interval-us-west-2-prod-accord-snapshot-event-target-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-snapshot-lambda-us-west-2-prod",
                            "id": "accord-snapshot-interval-us-west-2-prod-accord-snapshot-event-target-us-west-2-prod",
                            "input": "",
                            "input_path": "",
                            "role_arn": "",
                            "rule": "accord-snapshot-interval-us-west-2-prod",
                            "target_id": "accord-snapshot-event-target-us-west-2-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_cloudwatch_log_group.lambda-api-log-group": {
                    "type": "aws_cloudwatch_log_group",
                    "depends_on": [],
                    "primary": {
                        "id": "/aws/lambda/accord-prod-flask",
                        "attributes": {
                            "arn": "arn:aws:logs:us-west-2:489867994332:log-group:/aws/lambda/accord-prod-flask:*",
                            "id": "/aws/lambda/accord-prod-flask",
                            "kms_key_id": "",
                            "name": "/aws/lambda/accord-prod-flask",
                            "retention_in_days": "5",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_cloudwatch_log_subscription_filter.accord-lambda-api-logfilter": {
                    "type": "aws_cloudwatch_log_subscription_filter",
                    "depends_on": [
                        "aws_cloudwatch_log_group.lambda-api-log-group",
                        "aws_lambda_permission.accord-log-permission",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "cwlsf-3183521739",
                        "attributes": {
                            "destination_arn": "arn:aws:lambda:us-west-2:489867994332:function:logging-prod-cloudwatchLogsNGLogger",
                            "id": "cwlsf-3183521739",
                            "log_group_name": "/aws/lambda/accord-prod-flask",
                            "name": "api-logfilter-us-west-2-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_cloudwatch_metric_alarm.accord-cpu-utilization": {
                    "type": "aws_cloudwatch_metric_alarm",
                    "depends_on": [
                        "aws_sns_topic.accord-cpu-alarm"
                    ],
                    "primary": {
                        "id": "accord-cpu-utilization-us-west-2-prod",
                        "attributes": {
                            "actions_enabled": "true",
                            "alarm_actions.#": "0",
                            "alarm_description": "",
                            "alarm_name": "accord-cpu-utilization-us-west-2-prod",
                            "arn": "arn:aws:cloudwatch:us-west-2:489867994332:alarm:accord-cpu-utilization-us-west-2-prod",
                            "comparison_operator": "GreaterThanThreshold",
                            "datapoints_to_alarm": "0",
                            "dimensions.%": "0",
                            "evaluate_low_sample_count_percentiles": "",
                            "evaluation_periods": "1",
                            "extended_statistic": "",
                            "id": "accord-cpu-utilization-us-west-2-prod",
                            "insufficient_data_actions.#": "0",
                            "metric_name": "CPUUtilization",
                            "namespace": "AWS/EC2",
                            "ok_actions.#": "0",
                            "period": "300",
                            "statistic": "Average",
                            "threshold": "90",
                            "treat_missing_data": "missing",
                            "unit": "Percent"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_cloudwatch_metric_alarm.consul-asg-size-alarm": {
                    "type": "aws_cloudwatch_metric_alarm",
                    "depends_on": [
                        "aws_autoscaling_group.consul-cluster"
                    ],
                    "primary": {
                        "id": "consul-us-west-2-prod-asg-size-alarm",
                        "attributes": {
                            "actions_enabled": "true",
                            "alarm_actions.#": "0",
                            "alarm_description": "",
                            "alarm_name": "consul-us-west-2-prod-asg-size-alarm",
                            "arn": "arn:aws:cloudwatch:us-west-2:489867994332:alarm:consul-us-west-2-prod-asg-size-alarm",
                            "comparison_operator": "LessThanThreshold",
                            "datapoints_to_alarm": "0",
                            "dimensions.%": "1",
                            "dimensions.AutoScalingGroupName": "consul-cluster-asg-us-west-2-prod",
                            "evaluate_low_sample_count_percentiles": "",
                            "evaluation_periods": "1",
                            "extended_statistic": "",
                            "id": "consul-us-west-2-prod-asg-size-alarm",
                            "insufficient_data_actions.#": "0",
                            "metric_name": "GroupInServiceInstances",
                            "namespace": "AWS/AutoScaling",
                            "ok_actions.#": "0",
                            "period": "60",
                            "statistic": "Maximum",
                            "threshold": "1",
                            "treat_missing_data": "missing",
                            "unit": ""
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_dynamodb_table.accord-consul-token": {
                    "type": "aws_dynamodb_table",
                    "depends_on": [],
                    "primary": {
                        "id": "accord-consul-token-prod",
                        "attributes": {
                            "arn": "arn:aws:dynamodb:us-west-2:489867994332:table/accord-consul-token-prod",
                            "attribute.#": "1",
                            "attribute.1686317069.name": "UUID",
                            "attribute.1686317069.type": "S",
                            "global_secondary_index.#": "0",
                            "hash_key": "UUID",
                            "id": "accord-consul-token-prod",
                            "local_secondary_index.#": "0",
                            "name": "accord-consul-token-prod",
                            "point_in_time_recovery.#": "1",
                            "point_in_time_recovery.0.enabled": "false",
                            "read_capacity": "20",
                            "server_side_encryption.#": "0",
                            "stream_arn": "",
                            "stream_enabled": "false",
                            "stream_label": "",
                            "stream_view_type": "",
                            "tags.%": "0",
                            "ttl.#": "1",
                            "ttl.3306025319.attribute_name": "Expiration",
                            "ttl.3306025319.enabled": "true",
                            "write_capacity": "20"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_dynamodb_table.accord-lock-table": {
                    "type": "aws_dynamodb_table",
                    "depends_on": [],
                    "primary": {
                        "id": "accord-lock-table-prod",
                        "attributes": {
                            "arn": "arn:aws:dynamodb:us-west-2:489867994332:table/accord-lock-table-prod",
                            "attribute.#": "1",
                            "attribute.893042502.name": "lockname",
                            "attribute.893042502.type": "S",
                            "global_secondary_index.#": "0",
                            "hash_key": "lockname",
                            "id": "accord-lock-table-prod",
                            "local_secondary_index.#": "0",
                            "name": "accord-lock-table-prod",
                            "point_in_time_recovery.#": "1",
                            "point_in_time_recovery.0.enabled": "false",
                            "read_capacity": "5",
                            "server_side_encryption.#": "0",
                            "stream_arn": "",
                            "stream_enabled": "false",
                            "stream_label": "",
                            "stream_view_type": "",
                            "tags.%": "0",
                            "ttl.#": "0",
                            "write_capacity": "5"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_elb.consul-cluster": {
                    "type": "aws_elb",
                    "depends_on": [
                        "aws_acm_certificate_validation.cert",
                        "aws_security_group.sg-elb",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "consul-elb-us-west-2-prod",
                        "attributes": {
                            "access_logs.#": "0",
                            "arn": "arn:aws:elasticloadbalancing:us-west-2:489867994332:loadbalancer/consul-elb-us-west-2-prod",
                            "availability_zones.#": "3",
                            "availability_zones.2050015877": "us-west-2c",
                            "availability_zones.221770259": "us-west-2b",
                            "availability_zones.2487133097": "us-west-2a",
                            "connection_draining": "false",
                            "connection_draining_timeout": "300",
                            "cross_zone_load_balancing": "true",
                            "dns_name": "internal-consul-elb-us-west-2-prod-2643493.us-west-2.elb.amazonaws.com",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "2",
                            "health_check.0.interval": "30",
                            "health_check.0.target": "HTTP:8500/v1/status/leader",
                            "health_check.0.timeout": "5",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "consul-elb-us-west-2-prod",
                            "idle_timeout": "60",
                            "instances.#": "3",
                            "instances.1287155043": "i-0ed80c9383ac3d51f",
                            "instances.2201680877": "i-0bedbc006e9b27f02",
                            "instances.4109773257": "i-010d7a25a9ba43b3a",
                            "internal": "true",
                            "listener.#": "1",
                            "listener.2648550294.instance_port": "8500",
                            "listener.2648550294.instance_protocol": "http",
                            "listener.2648550294.lb_port": "443",
                            "listener.2648550294.lb_protocol": "https",
                            "listener.2648550294.ssl_certificate_id": "arn:aws:acm:us-west-2:489867994332:certificate/ea42ba15-6ac1-4e5b-b478-22b7752210bc",
                            "name": "consul-elb-us-west-2-prod",
                            "security_groups.#": "1",
                            "security_groups.2938748416": "sg-013055d8fc0faa872",
                            "source_security_group": "489867994332/consul-cluster-public-web-us-west-2-prod",
                            "source_security_group_id": "sg-013055d8fc0faa872",
                            "subnets.#": "3",
                            "subnets.2431473127": "subnet-ec877fa7",
                            "subnets.4067492572": "subnet-baad28e0",
                            "subnets.784104188": "subnet-e9449a90",
                            "tags.%": "0",
                            "zone_id": "Z1H1FL5HABSF5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_iam_instance_profile.web_instance_profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.web_iam_role"
                    ],
                    "primary": {
                        "id": "web_instance_profile-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:instance-profile/web_instance_profile-us-west-2-prod",
                            "create_date": "2018-09-26T23:31:23Z",
                            "id": "web_instance_profile-us-west-2-prod",
                            "name": "web_instance_profile-us-west-2-prod",
                            "path": "/",
                            "role": "webIAMRole-us-west-2-prod",
                            "roles.#": "1",
                            "roles.1816038000": "webIAMRole-us-west-2-prod",
                            "unique_id": "AIPAJXCQJHQKTIUSPIA5E"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_iam_policy.ReadOnlyPolicy": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::489867994332:policy/ReadOnlyPolicy-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:policy/ReadOnlyPolicy-us-west-2-prod",
                            "description": "Read Only Policy.",
                            "id": "arn:aws:iam::489867994332:policy/ReadOnlyPolicy-us-west-2-prod",
                            "name": "ReadOnlyPolicy-us-west-2-prod",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"acm:Describe*\",\n        \"acm:Get*\",\n        \"acm:List*\",\n        \"apigateway:GET\",\n        \"application-autoscaling:Describe*\",\n        \"autoscaling:*\",\n        \"batch:List*\",\n        \"batch:Describe*\",\n        \"cloudwatch:PUT\",\n        \"codebuild:BatchGet*\",\n        \"codebuild:List*\",\n        \"codecommit:BatchGet*\",\n        \"codecommit:Get*\",\n        \"codecommit:GitPull\",\n        \"codecommit:List*\",\n        \"codedeploy:BatchGet*\",\n        \"codedeploy:Get*\",\n        \"codedeploy:List*\",\n        \"codepipeline:List*\",\n        \"codepipeline:Get*\",\n        \"codestar:List*\",\n        \"codestar:Describe*\",\n        \"codestar:Get*\",\n        \"codestar:Verify*\",\n        \"config:Deliver*\",\n        \"config:Describe*\",\n        \"config:Get*\",\n        \"config:List*\",\n        \"connect:List*\",\n        \"connect:Describe*\",\n        \"connect:Get*\",\n        \"directconnect:Describe*\",\n        \"directconnect:Confirm*\",\n        \"discovery:Describe*\",\n        \"discovery:List*\",\n        \"discovery:Get*\",\n        \"dms:Describe*\",\n        \"dms:List*\",\n        \"dms:Test*\",\n        \"ds:Check*\",\n        \"ds:Describe*\",\n        \"ds:Get*\",\n        \"ds:List*\",\n        \"ds:Verify*\",\n        \"dynamodb:BatchGet*\",\n        \"dynamodb:Update*\",\n        \"dynamodb:Describe*\",\n        \"dynamodb:Get*\",\n        \"dynamodb:List*\",\n        \"dynamodb:Query\",\n        \"dynamodb:Scan\",\n        \"dynamodb:PutItem\",\n        \"ec2:Describe*\",\n        \"ec2:Get*\",\n        \"ec2:Create*\",\n        \"ec2:Delete*\",\n        \"ec2messages:*\",\n        \"ecr:BatchCheck*\",\n        \"ecr:BatchGet*\",\n        \"ecr:Describe*\",\n        \"ecr:Get*\",\n        \"ecr:List*\",\n        \"ecs:Describe*\",\n        \"ecs:List*\",\n        \"ecs:RegisterContainerInstance\",\n        \"es:Describe*\",\n        \"es:List*\",\n        \"es:ESHttpGet\",\n        \"es:ESHttpHead\",\n        \"events:Describe*\",\n        \"events:List*\",\n        \"events:Test*\",\n        \"health:Describe*\",\n        \"health:Get*\",\n        \"health:List*\",\n        \"iam:Generate*\",\n        \"iam:Get*\",\n        \"iam:List*\",\n        \"iam:Simulate*\",\n        \"kms:Describe*\",\n        \"kms:Get*\",\n        \"kms:List*\",\n        \"kms:Encrypt\",\n        \"kms:Decrypt\",\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:DescribeKey\",\n        \"lambda:List*\",\n        \"lambda:Get*\",\n        \"logs:*\",\n        \"rds:Describe*\",\n        \"rds:List*\",\n        \"rds:Download*\",\n        \"redshift:Describe*\",\n        \"redshift:View*\",\n        \"redshift:Get*\",\n        \"route53:Get*\",\n        \"route53:List*\",\n        \"route53:Test*\",\n        \"route53domains:Check*\",\n        \"route53domains:Get*\",\n        \"route53domains:List*\",\n        \"route53domains:View*\",\n        \"s3:*\",\n        \"sdb:Get*\",\n        \"sdb:List*\",\n        \"sdb:Select*\",\n        \"servicecatalog:List*\",\n        \"servicecatalog:Scan*\",\n        \"servicecatalog:Scan*\",\n        \"servicecatalog:Search*\",\n        \"servicecatalog:Describe*\",\n        \"ses:Get*\",\n        \"ses:List*\",\n        \"ses:Describe*\",\n        \"ses:Verify*\",\n        \"shield:Describe*\",\n        \"shield:List*\",\n        \"sns:Get*\",\n        \"sns:List*\",\n        \"sns:Check*\",\n        \"sqs:Get*\",\n        \"sqs:List*\",\n        \"sqs:Receive*\",\n        \"ssm:*\",\n        \"states:List*\",\n        \"states:Describe*\",\n        \"states:GetExecutionHistory\",\n        \"states:StartExecution\",\n        \"storagegateway:Describe*\",\n        \"storagegateway:List*\",\n        \"sts:Get*\",\n        \"swf:Count*\",\n        \"swf:Describe*\",\n        \"swf:Get*\",\n        \"swf:List*\",\n        \"tag:Get*\",\n        \"trustedadvisor:Describe*\",\n        \"waf:Get*\",\n        \"waf:List*\",\n        \"waf-regional:List*\",\n        \"waf-regional:Get*\",\n        \"workdocs:Describe*\",\n        \"workdocs:Get*\",\n        \"workdocs:CheckAlias\",\n        \"workmail:Describe*\",\n        \"workmail:Get*\",\n        \"workmail:List*\",\n        \"workmail:Search*\",\n        \"workspaces:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n  }\n  ]\n}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_iam_policy.sfn_lambda_invoke_policy": {
                    "type": "aws_iam_policy",
                    "depends_on": [
                        "data.aws_iam_policy_document.sfn_lambda_execution_policy_document"
                    ],
                    "primary": {
                        "id": "arn:aws:iam::489867994332:policy/em-accord-sfn-lambda-invoke-policy-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:policy/em-accord-sfn-lambda-invoke-policy-us-west-2-prod",
                            "description": "",
                            "id": "arn:aws:iam::489867994332:policy/em-accord-sfn-lambda-invoke-policy-us-west-2-prod",
                            "name": "em-accord-sfn-lambda-invoke-policy-us-west-2-prod",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Resource\": \"*\"\n    }\n  ]\n}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_iam_policy_attachment.ReadOnlyAttach": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.ReadOnlyPolicy",
                        "aws_iam_role.web_iam_role"
                    ],
                    "primary": {
                        "id": "ReadOnly-attachment-us-west-2-prod",
                        "attributes": {
                            "groups.#": "0",
                            "id": "ReadOnly-attachment-us-west-2-prod",
                            "name": "ReadOnly-attachment-us-west-2-prod",
                            "policy_arn": "arn:aws:iam::489867994332:policy/ReadOnlyPolicy-us-west-2-prod",
                            "roles.#": "1",
                            "roles.1816038000": "webIAMRole-us-west-2-prod",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_iam_policy_attachment.sfn_lambda_invoke_attachment": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.sfn_lambda_invoke_policy",
                        "aws_iam_role.sfn_role"
                    ],
                    "primary": {
                        "id": "em-accord-sfn-lambda-invoke-attachment-us-west-2-prod",
                        "attributes": {
                            "groups.#": "0",
                            "id": "em-accord-sfn-lambda-invoke-attachment-us-west-2-prod",
                            "name": "em-accord-sfn-lambda-invoke-attachment-us-west-2-prod",
                            "policy_arn": "arn:aws:iam::489867994332:policy/em-accord-sfn-lambda-invoke-policy-us-west-2-prod",
                            "roles.#": "1",
                            "roles.1529953731": "em-accord-sfn-us-west-2-prod",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_iam_role.sfn_role": {
                    "type": "aws_iam_role",
                    "depends_on": [
                        "data.aws_iam_policy_document.sfn_assume_role_policy_document"
                    ],
                    "primary": {
                        "id": "em-accord-sfn-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:role/em-accord-sfn-us-west-2-prod",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"states.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-09-26T23:31:17Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "em-accord-sfn-us-west-2-prod",
                            "max_session_duration": "3600",
                            "name": "em-accord-sfn-us-west-2-prod",
                            "path": "/",
                            "unique_id": "AROAJH6FVUUT7K2FRD2UW"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_iam_role.web_iam_role": {
                    "type": "aws_iam_role",
                    "depends_on": [
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "webIAMRole-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:iam::489867994332:role/webIAMRole-us-west-2-prod",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"apigateway.amazonaws.com\",\"ssm.amazonaws.com\",\"states.amazonaws.com\",\"ec2.amazonaws.com\",\"application-autoscaling.amazonaws.com\",\"lambda.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"},{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::489867994332:user/em-deploy-tfe-UslG5jTM\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2018-09-26T23:31:17Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "webIAMRole-us-west-2-prod",
                            "max_session_duration": "3600",
                            "name": "webIAMRole-us-west-2-prod",
                            "path": "/",
                            "unique_id": "AROAJKMRXDCMQJ5QWTWFU"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_iam_role_policy.web_iam_role_policy": {
                    "type": "aws_iam_role_policy",
                    "depends_on": [
                        "aws_iam_role.web_iam_role"
                    ],
                    "primary": {
                        "id": "webIAMRole-us-west-2-prod:web_iam_role_policy-us-west-2-prod",
                        "attributes": {
                            "id": "webIAMRole-us-west-2-prod:web_iam_role_policy-us-west-2-prod",
                            "name": "web_iam_role_policy-us-west-2-prod",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"acm:Describe*\",\n        \"acm:Get*\",\n        \"acm:List*\",\n        \"apigateway:GET\",\n        \"application-autoscaling:Describe*\",\n        \"autoscaling:*\",\n        \"batch:List*\",\n        \"batch:Describe*\",\n        \"cloudwatch:PUT\",\n        \"codebuild:BatchGet*\",\n        \"codebuild:List*\",\n        \"codecommit:BatchGet*\",\n        \"codecommit:Get*\",\n        \"codecommit:GitPull\",\n        \"codecommit:List*\",\n        \"codedeploy:BatchGet*\",\n        \"codedeploy:Get*\",\n        \"codedeploy:List*\",\n        \"codepipeline:List*\",\n        \"codepipeline:Get*\",\n        \"codestar:List*\",\n        \"codestar:Describe*\",\n        \"codestar:Get*\",\n        \"codestar:Verify*\",\n        \"config:Deliver*\",\n        \"config:Describe*\",\n        \"config:Get*\",\n        \"config:List*\",\n        \"connect:List*\",\n        \"connect:Describe*\",\n        \"connect:Get*\",\n        \"directconnect:Describe*\",\n        \"directconnect:Confirm*\",\n        \"discovery:Describe*\",\n        \"discovery:List*\",\n        \"discovery:Get*\",\n        \"dms:Describe*\",\n        \"dms:List*\",\n        \"dms:Test*\",\n        \"ds:Check*\",\n        \"ds:Describe*\",\n        \"ds:Get*\",\n        \"ds:List*\",\n        \"ds:Verify*\",\n        \"dynamodb:BatchGet*\",\n        \"dynamodb:Update*\",\n        \"dynamodb:Describe*\",\n        \"dynamodb:Get*\",\n        \"dynamodb:List*\",\n        \"dynamodb:Query\",\n        \"dynamodb:Scan\",\n        \"dynamodb:PutItem\",\n        \"ec2:Describe*\",\n        \"ec2:Get*\",\n        \"ec2:Create*\",\n        \"ec2:Delete*\",\n        \"ec2messages:*\",\n        \"ecr:BatchCheck*\",\n        \"ecr:BatchGet*\",\n        \"ecr:Describe*\",\n        \"ecr:Get*\",\n        \"ecr:List*\",\n        \"ecs:Describe*\",\n        \"ecs:List*\",\n        \"ecs:RegisterContainerInstance\",\n        \"es:Describe*\",\n        \"es:List*\",\n        \"es:ESHttpGet\",\n        \"es:ESHttpHead\",\n        \"events:Describe*\",\n        \"events:List*\",\n        \"events:Test*\",\n        \"health:Describe*\",\n        \"health:Get*\",\n        \"health:List*\",\n        \"iam:Generate*\",\n        \"iam:Get*\",\n        \"iam:List*\",\n        \"iam:Simulate*\",\n        \"kms:Describe*\",\n        \"kms:Get*\",\n        \"kms:List*\",\n        \"kms:Encrypt\",\n        \"kms:Decrypt\",\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:DescribeKey\",\n        \"lambda:List*\",\n        \"lambda:Get*\",\n        \"logs:*\",\n        \"rds:Describe*\",\n        \"rds:List*\",\n        \"rds:Download*\",\n        \"redshift:Describe*\",\n        \"redshift:View*\",\n        \"redshift:Get*\",\n        \"route53:Get*\",\n        \"route53:List*\",\n        \"route53:Test*\",\n        \"route53domains:Check*\",\n        \"route53domains:Get*\",\n        \"route53domains:List*\",\n        \"route53domains:View*\",\n        \"s3:*\",\n        \"sdb:Get*\",\n        \"sdb:List*\",\n        \"sdb:Select*\",\n        \"servicecatalog:List*\",\n        \"servicecatalog:Scan*\",\n        \"servicecatalog:Scan*\",\n        \"servicecatalog:Search*\",\n        \"servicecatalog:Describe*\",\n        \"ses:Get*\",\n        \"ses:List*\",\n        \"ses:Describe*\",\n        \"ses:Verify*\",\n        \"shield:Describe*\",\n        \"shield:List*\",\n        \"sns:Get*\",\n        \"sns:List*\",\n        \"sns:Check*\",\n        \"sqs:Get*\",\n        \"sqs:List*\",\n        \"sqs:Receive*\",\n        \"ssm:*\",\n        \"states:List*\",\n        \"states:Describe*\",\n        \"states:GetExecutionHistory\",\n        \"states:StartExecution\",\n        \"storagegateway:Describe*\",\n        \"storagegateway:List*\",\n        \"sts:Get*\",\n        \"swf:Count*\",\n        \"swf:Describe*\",\n        \"swf:Get*\",\n        \"swf:List*\",\n        \"tag:Get*\",\n        \"trustedadvisor:Describe*\",\n        \"waf:Get*\",\n        \"waf:List*\",\n        \"waf-regional:List*\",\n        \"waf-regional:Get*\",\n        \"workdocs:Describe*\",\n        \"workdocs:Get*\",\n        \"workdocs:CheckAlias\",\n        \"workmail:Describe*\",\n        \"workmail:Get*\",\n        \"workmail:List*\",\n        \"workmail:Search*\",\n        \"workspaces:Describe*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n  }\n  ]\n}",
                            "role": "webIAMRole-us-west-2-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_kms_alias.accord": {
                    "type": "aws_kms_alias",
                    "depends_on": [
                        "aws_kms_key.accord-kms-key"
                    ],
                    "primary": {
                        "id": "alias/accord-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:kms:us-west-2:489867994332:alias/accord-us-west-2-prod",
                            "id": "alias/accord-us-west-2-prod",
                            "name": "alias/accord-us-west-2-prod",
                            "target_key_arn": "arn:aws:kms:us-west-2:489867994332:key/736ffb73-72f0-4c8d-8660-a625c344031b",
                            "target_key_id": "736ffb73-72f0-4c8d-8660-a625c344031b"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_kms_key.accord-kms-key": {
                    "type": "aws_kms_key",
                    "depends_on": [],
                    "primary": {
                        "id": "736ffb73-72f0-4c8d-8660-a625c344031b",
                        "attributes": {
                            "arn": "arn:aws:kms:us-west-2:489867994332:key/736ffb73-72f0-4c8d-8660-a625c344031b",
                            "description": "KMS key for accord ACL encrytion",
                            "enable_key_rotation": "false",
                            "id": "736ffb73-72f0-4c8d-8660-a625c344031b",
                            "is_enabled": "true",
                            "key_id": "736ffb73-72f0-4c8d-8660-a625c344031b",
                            "key_usage": "ENCRYPT_DECRYPT",
                            "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::489867994332:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
                            "tags.%": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_lambda_function.accord-lambda-function": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "artifactory_artifact.artifact_api",
                        "aws_iam_role.web_iam_role",
                        "aws_s3_bucket.accord-secrets",
                        "aws_s3_bucket_object.api_zip",
                        "aws_security_group.sg-consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-prod-flask",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-prod-flask",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "9",
                            "environment.0.variables.ACCORD_CONFIG_BUCKET": "em-accord-us-west-2-prod",
                            "environment.0.variables.ACL_BUCKET_PATH": "master-acl",
                            "environment.0.variables.BUCKET": "em-accord-us-west-2-prod",
                            "environment.0.variables.CONSUL_HOSTNAME": "consul.us-west-2.accord.ellieservices.com",
                            "environment.0.variables.DD_MUTEX_TABLE_NAME": "accord-lock-table-prod",
                            "environment.0.variables.ENVIRONMENT": "prod",
                            "environment.0.variables.SNAPSHOT_PATH": "snapshots/",
                            "environment.0.variables.URL": "consul.us-west-2.accord.ellieservices.com",
                            "environment.0.variables.VAULT_ENDPOINT": "vault.us-west-2.accord.ellieservices.com",
                            "function_name": "accord-prod-flask",
                            "handler": "accord.app",
                            "id": "accord-prod-flask",
                            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:489867994332:function:accord-prod-flask/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:31:48.324+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-prod-flask:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-west-2-prod",
                            "runtime": "python2.7",
                            "s3_bucket": "em-accord-us-west-2-prod",
                            "s3_key": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "source_code_hash": "ChE6wIGNPS4CIH7ObO3ndBLTlDvr2jvMdx2fjpT+M4U=",
                            "source_code_size": "18609144",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.1121206196": "sg-0154495937c1200b3",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.2431473127": "subnet-ec877fa7",
                            "vpc_config.0.subnet_ids.4067492572": "subnet-baad28e0",
                            "vpc_config.0.subnet_ids.784104188": "subnet-e9449a90",
                            "vpc_config.0.vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_lambda_function.accord_snapshot_lambda": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.web_iam_role",
                        "aws_s3_bucket.accord-secrets",
                        "aws_security_group.sg-consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-snapshot-lambda-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-snapshot-lambda-us-west-2-prod",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "5",
                            "environment.0.variables.ACL_BUCKET_PATH": "master-acl",
                            "environment.0.variables.BUCKET": "em-accord-us-west-2-prod",
                            "environment.0.variables.REGION": "us-west-2",
                            "environment.0.variables.SNAPSHOT_PATH": "snapshots/",
                            "environment.0.variables.URL": "consul.us-west-2.accord.ellieservices.com",
                            "filename": "lambda_functions.zip",
                            "function_name": "accord-snapshot-lambda-us-west-2-prod",
                            "handler": "lambdaSnapshot.aws_lambda_handler",
                            "id": "accord-snapshot-lambda-us-west-2-prod",
                            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:489867994332:function:accord-snapshot-lambda-us-west-2-prod/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:31:48.604+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-snapshot-lambda-us-west-2-prod:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-west-2-prod",
                            "runtime": "python2.7",
                            "source_code_hash": "OPJtaBodz9bdoYrLlOtYajtQ76irlWXddnGpSnaLxZE=",
                            "source_code_size": "939613",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.1121206196": "sg-0154495937c1200b3",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.2431473127": "subnet-ec877fa7",
                            "vpc_config.0.subnet_ids.4067492572": "subnet-baad28e0",
                            "vpc_config.0.subnet_ids.784104188": "subnet-e9449a90",
                            "vpc_config.0.vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_lambda_function.rolling-deploy-health-check": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.web_iam_role",
                        "aws_security_group.sg-consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-rolling-deploy-health-check-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-health-check-us-west-2-prod",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "1",
                            "environment.0.variables.REGION": "us-west-2",
                            "filename": "lambda_functions.zip",
                            "function_name": "accord-rolling-deploy-health-check-us-west-2-prod",
                            "handler": "healthCheck.aws_lambda_handler",
                            "id": "accord-rolling-deploy-health-check-us-west-2-prod",
                            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-health-check-us-west-2-prod/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:31:42.285+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-health-check-us-west-2-prod:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-west-2-prod",
                            "runtime": "python2.7",
                            "source_code_hash": "OPJtaBodz9bdoYrLlOtYajtQ76irlWXddnGpSnaLxZE=",
                            "source_code_size": "939613",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.1121206196": "sg-0154495937c1200b3",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.2431473127": "subnet-ec877fa7",
                            "vpc_config.0.subnet_ids.4067492572": "subnet-baad28e0",
                            "vpc_config.0.subnet_ids.784104188": "subnet-e9449a90",
                            "vpc_config.0.vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_lambda_function.rolling-deploy-remove-old": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_iam_role.web_iam_role",
                        "aws_security_group.sg-consul-cluster",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-rolling-deploy-remove-old-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-remove-old-us-west-2-prod",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "1",
                            "environment.0.variables.REGION": "us-west-2",
                            "filename": "lambda_functions.zip",
                            "function_name": "accord-rolling-deploy-remove-old-us-west-2-prod",
                            "handler": "removeOldNodes.aws_lambda_handler",
                            "id": "accord-rolling-deploy-remove-old-us-west-2-prod",
                            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-remove-old-us-west-2-prod/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:31:40.206+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-remove-old-us-west-2-prod:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-west-2-prod",
                            "runtime": "python2.7",
                            "source_code_hash": "OPJtaBodz9bdoYrLlOtYajtQ76irlWXddnGpSnaLxZE=",
                            "source_code_size": "939613",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.1121206196": "sg-0154495937c1200b3",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.2431473127": "subnet-ec877fa7",
                            "vpc_config.0.subnet_ids.4067492572": "subnet-baad28e0",
                            "vpc_config.0.subnet_ids.784104188": "subnet-e9449a90",
                            "vpc_config.0.vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_lambda_function.rolling-deploy-trigger": {
                    "type": "aws_lambda_function",
                    "depends_on": [
                        "aws_autoscaling_group.consul-cluster",
                        "aws_iam_role.web_iam_role",
                        "aws_route53_record.api-cname",
                        "aws_s3_bucket.accord-secrets",
                        "aws_s3_bucket_object.resource_object",
                        "aws_security_group.sg-consul-cluster",
                        "aws_sfn_state_machine.rolling-deploy-sfn",
                        "data.aws_subnet.private_subnet_0",
                        "data.aws_subnet.private_subnet_1",
                        "data.aws_subnet.private_subnet_2"
                    ],
                    "primary": {
                        "id": "accord-rolling-deploy-trigger-us-west-2-prod",
                        "attributes": {
                            "arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-trigger-us-west-2-prod",
                            "dead_letter_config.#": "0",
                            "description": "",
                            "environment.#": "1",
                            "environment.0.variables.%": "4",
                            "environment.0.variables.ASG": "consul-cluster-asg-us-west-2-prod",
                            "environment.0.variables.INPUT": "{\n\"url\": \"consul.us-west-2.accord.ellieservices.com\",\n\"bucket\": \"em-accord-us-west-2-prod\",\n\"source\": \"master-acl\",\n\"apiname\": \"api.us-west-2.accord.ellieservices.com\"\n}\n",
                            "environment.0.variables.NAME": "accord-rolling-deploy-us-west-2-prod",
                            "environment.0.variables.SFNARN": "arn:aws:states:us-west-2:489867994332:stateMachine:accord-rolling-deploy-us-west-2-prod",
                            "filename": "lambda_functions.zip",
                            "function_name": "accord-rolling-deploy-trigger-us-west-2-prod",
                            "handler": "trigger.aws_lambda_handler",
                            "id": "accord-rolling-deploy-trigger-us-west-2-prod",
                            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-trigger-us-west-2-prod/invocations",
                            "kms_key_arn": "",
                            "last_modified": "2018-09-26T23:36:59.083+0000",
                            "memory_size": "128",
                            "publish": "false",
                            "qualified_arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-trigger-us-west-2-prod:$LATEST",
                            "reserved_concurrent_executions": "0",
                            "role": "arn:aws:iam::489867994332:role/webIAMRole-us-west-2-prod",
                            "runtime": "python2.7",
                            "source_code_hash": "OPJtaBodz9bdoYrLlOtYajtQ76irlWXddnGpSnaLxZE=",
                            "source_code_size": "939613",
                            "tags.%": "0",
                            "timeout": "30",
                            "tracing_config.#": "1",
                            "tracing_config.0.mode": "PassThrough",
                            "version": "$LATEST",
                            "vpc_config.#": "1",
                            "vpc_config.0.security_group_ids.#": "1",
                            "vpc_config.0.security_group_ids.1121206196": "sg-0154495937c1200b3",
                            "vpc_config.0.subnet_ids.#": "3",
                            "vpc_config.0.subnet_ids.2431473127": "subnet-ec877fa7",
                            "vpc_config.0.subnet_ids.4067492572": "subnet-baad28e0",
                            "vpc_config.0.subnet_ids.784104188": "subnet-e9449a90",
                            "vpc_config.0.vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_lambda_permission.accord-lambda-permission": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_api_gateway_resource.accord-api-resource",
                        "aws_api_gateway_rest_api.accord-rest-api",
                        "aws_lambda_function.accord-lambda-function",
                        "data.aws_caller_identity.current"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromApiGateway",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "accord-prod-flask",
                            "id": "AllowExecutionFromApiGateway",
                            "principal": "apigateway.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:execute-api:us-west-2:489867994332:8fhmqva5g4/*/*/{proxy+}",
                            "statement_id": "AllowExecutionFromApiGateway"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_lambda_permission.accord-log-permission": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_cloudwatch_log_group.lambda-api-log-group"
                    ],
                    "primary": {
                        "id": "accord-log-permission-prod",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "logging-prod-cloudwatchLogsNGLogger",
                            "id": "accord-log-permission-prod",
                            "principal": "logs.us-west-2.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:logs:us-west-2:489867994332:log-group:/aws/lambda/accord-prod-flask:*",
                            "statement_id": "accord-log-permission-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_lambda_permission.accord-rolling-deploy-trigger-permissions": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_lambda_function.rolling-deploy-trigger",
                        "aws_s3_bucket.accord-secrets"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromS3Bucket",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "accord-rolling-deploy-trigger-us-west-2-prod",
                            "id": "AllowExecutionFromS3Bucket",
                            "principal": "s3.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:s3:::em-accord-us-west-2-prod",
                            "statement_id": "AllowExecutionFromS3Bucket"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_lambda_permission.accord_snapshot_cloudwatch_permissions": {
                    "type": "aws_lambda_permission",
                    "depends_on": [
                        "aws_cloudwatch_event_rule.snapshot_interval",
                        "aws_lambda_function.accord_snapshot_lambda"
                    ],
                    "primary": {
                        "id": "AllowExecutionFromCloudWatch",
                        "attributes": {
                            "action": "lambda:InvokeFunction",
                            "function_name": "accord-snapshot-lambda-us-west-2-prod",
                            "id": "AllowExecutionFromCloudWatch",
                            "principal": "events.amazonaws.com",
                            "qualifier": "",
                            "source_arn": "arn:aws:events:us-west-2:489867994332:rule/accord-snapshot-interval-us-west-2-prod",
                            "statement_id": "AllowExecutionFromCloudWatch"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_launch_configuration.consul-cluster": {
                    "type": "aws_launch_configuration",
                    "depends_on": [],
                    "primary": {
                        "id": "terraform-20181101182910981400000001",
                        "attributes": {
                            "associate_public_ip_address": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "enable_monitoring": "true",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "web_instance_profile-us-west-2-prod",
                            "id": "terraform-20181101182910981400000001",
                            "image_id": "ami-40ddb938",
                            "instance_type": "t2.medium",
                            "key_name": "",
                            "name": "terraform-20181101182910981400000001",
                            "root_block_device.#": "0",
                            "security_groups.#": "1",
                            "security_groups.1121206196": "sg-0154495937c1200b3",
                            "spot_price": "",
                            "user_data": "7dcc129f20bca996d79629dd3e22fd92b8375d3b",
                            "vpc_classic_link_id": "",
                            "vpc_classic_link_security_groups.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_route53_health_check.consul-route53-health-check": {
                    "type": "aws_route53_health_check",
                    "depends_on": [
                        "aws_cloudwatch_metric_alarm.consul-asg-size-alarm"
                    ],
                    "primary": {
                        "id": "09951510-09d5-4727-816f-804a13873dc7",
                        "attributes": {
                            "child_health_threshold": "0",
                            "child_healthchecks.#": "0",
                            "cloudwatch_alarm_name": "consul-us-west-2-prod-asg-size-alarm",
                            "cloudwatch_alarm_region": "us-west-2",
                            "enable_sni": "false",
                            "failure_threshold": "0",
                            "fqdn": "",
                            "id": "09951510-09d5-4727-816f-804a13873dc7",
                            "insufficient_data_health_status": "LastKnownStatus",
                            "invert_healthcheck": "false",
                            "ip_address": "",
                            "measure_latency": "false",
                            "port": "0",
                            "regions.#": "0",
                            "request_interval": "0",
                            "resource_path": "",
                            "search_string": "",
                            "tags.%": "1",
                            "tags.Name": "consul-us-west-2-prod-health-check",
                            "type": "CLOUDWATCH_METRIC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_route53_record.api-cname": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_api_gateway_domain_name.accord-domain",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL_api.us-west-2.accord.ellieservices.com_CNAME",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "api.us-west-2.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL_api.us-west-2.accord.ellieservices.com_CNAME",
                            "name": "api.us-west-2.accord.ellieservices.com",
                            "records.#": "1",
                            "records.4259484285": "d-o8gx5bwny4.execute-api.us-west-2.amazonaws.com",
                            "set_identifier": "",
                            "ttl": "300",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_route53_record.cert_validation": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_acm_certificate.cert",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL__d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com._CNAME",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "_d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL__d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com._CNAME",
                            "name": "_d57e0403525aa8e7e682849bb4465709.consul.us-west-2.accord.ellieservices.com",
                            "records.#": "1",
                            "records.1415539117": "_8c38a77da34ea1b9c7c9bdd98cd769b4.tljzshvwok.acm-validations.aws.",
                            "set_identifier": "",
                            "ttl": "60",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_route53_record.cert_validation_alt1": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_acm_certificate.cert",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL__a19969a54ceb4728a1eed261b4fa9c84.api.us-west-2.accord.ellieservices.com._CNAME",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "_a19969a54ceb4728a1eed261b4fa9c84.api.us-west-2.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL__a19969a54ceb4728a1eed261b4fa9c84.api.us-west-2.accord.ellieservices.com._CNAME",
                            "name": "_a19969a54ceb4728a1eed261b4fa9c84.api.us-west-2.accord.ellieservices.com",
                            "records.#": "1",
                            "records.4165582478": "_c97363580d8983870621a0712949d3af.tljzshvwok.acm-validations.aws.",
                            "set_identifier": "",
                            "ttl": "60",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_route53_record.cert_validation_alt2": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_acm_certificate.cert",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL__ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com._CNAME",
                        "attributes": {
                            "allow_overwrite": "true",
                            "fqdn": "_ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL__ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com._CNAME",
                            "name": "_ecd27fe2562d9ed624c068ac5a305719.consul.us-east-1.accord.ellieservices.com",
                            "records.#": "1",
                            "records.4249739183": "_a6cb57af13bb37b33dbd35ae7fe7a089.tljzshvwok.acm-validations.aws.",
                            "set_identifier": "",
                            "ttl": "60",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_route53_record.failover-alias": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_route53_record.ui-cname-west-2",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL_consul.us-west-2.accord.ellieservices.com_CNAME_Secondary",
                        "attributes": {
                            "alias.#": "1",
                            "alias.2209253159.evaluate_target_health": "false",
                            "alias.2209253159.name": "consul.us-east-1.accord.ellieservices.com",
                            "alias.2209253159.zone_id": "Z1OR5LT1WEJ4OL",
                            "allow_overwrite": "true",
                            "failover_routing_policy.#": "1",
                            "failover_routing_policy.0.type": "SECONDARY",
                            "fqdn": "consul.us-west-2.accord.ellieservices.com",
                            "health_check_id": "",
                            "id": "Z1OR5LT1WEJ4OL_consul.us-west-2.accord.ellieservices.com_CNAME_Secondary",
                            "name": "consul.us-west-2.accord.ellieservices.com",
                            "records.#": "0",
                            "set_identifier": "Secondary",
                            "ttl": "0",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_route53_record.ui-cname-west-2": {
                    "type": "aws_route53_record",
                    "depends_on": [
                        "aws_elb.consul-cluster",
                        "aws_route53_health_check.consul-route53-health-check",
                        "data.aws_route53_zone.base_zone"
                    ],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL_consul.us-west-2.accord.ellieservices.com_CNAME_Primary",
                        "attributes": {
                            "allow_overwrite": "true",
                            "failover_routing_policy.#": "1",
                            "failover_routing_policy.0.type": "PRIMARY",
                            "fqdn": "consul.us-west-2.accord.ellieservices.com",
                            "health_check_id": "09951510-09d5-4727-816f-804a13873dc7",
                            "id": "Z1OR5LT1WEJ4OL_consul.us-west-2.accord.ellieservices.com_CNAME_Primary",
                            "name": "consul.us-west-2.accord.ellieservices.com",
                            "records.#": "1",
                            "records.1603128431": "internal-consul-elb-us-west-2-prod-2643493.us-west-2.elb.amazonaws.com",
                            "set_identifier": "Primary",
                            "ttl": "60",
                            "type": "CNAME",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_s3_bucket.accord-secrets": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "em-accord-us-west-2-prod",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::em-accord-us-west-2-prod",
                            "bucket": "em-accord-us-west-2-prod",
                            "bucket_domain_name": "em-accord-us-west-2-prod.s3.amazonaws.com",
                            "bucket_regional_domain_name": "em-accord-us-west-2-prod.s3.us-west-2.amazonaws.com",
                            "cors_rule.#": "0",
                            "force_destroy": "true",
                            "hosted_zone_id": "Z3BJ6K6RIION7M",
                            "id": "em-accord-us-west-2-prod",
                            "lifecycle_rule.#": "0",
                            "logging.#": "0",
                            "region": "us-west-2",
                            "replication_configuration.#": "0",
                            "request_payer": "BucketOwner",
                            "server_side_encryption_configuration.#": "0",
                            "tags.%": "0",
                            "versioning.#": "1",
                            "versioning.0.enabled": "false",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_s3_bucket_notification.rolling_deploy_notification": {
                    "type": "aws_s3_bucket_notification",
                    "depends_on": [
                        "aws_lambda_function.rolling-deploy-trigger",
                        "aws_s3_bucket.accord-secrets"
                    ],
                    "primary": {
                        "id": "em-accord-us-west-2-prod",
                        "attributes": {
                            "bucket": "em-accord-us-west-2-prod",
                            "id": "em-accord-us-west-2-prod",
                            "lambda_function.#": "1",
                            "lambda_function.0.events.#": "1",
                            "lambda_function.0.events.3356830603": "s3:ObjectCreated:*",
                            "lambda_function.0.filter_prefix": "rolling-deploy-initialization/",
                            "lambda_function.0.filter_suffix": "",
                            "lambda_function.0.id": "tf-s3-lambda-20180926233659043500000004",
                            "lambda_function.0.lambda_function_arn": "arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-trigger-us-west-2-prod",
                            "queue.#": "0",
                            "topic.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_s3_bucket_object.api_zip": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "artifactory_artifact.artifact_api",
                        "aws_s3_bucket.accord-secrets"
                    ],
                    "primary": {
                        "id": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                        "attributes": {
                            "acl": "private",
                            "bucket": "em-accord-us-west-2-prod",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "df33b43086b8c8e5a6d0d597822beb5b",
                            "id": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "key": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "server_side_encryption": "",
                            "source": "resources/em-accord-api/35/em-accord-lambda-python.zip",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_s3_bucket_object.resource_object": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.accord-secrets",
                        "data.template_file.trigger-file"
                    ],
                    "primary": {
                        "id": "rolling-deploy-initialization/config_data",
                        "attributes": {
                            "acl": "private",
                            "bucket": "em-accord-us-west-2-prod",
                            "cache_control": "",
                            "content": "{\n\"name\": \"consul-cluster-asg-us-west-2-prod\",\n\"min_size\": \"3\",\n\"max_size\": \"6\",\n\"desired_capacity\": \"3\",\n\"min_elb_capacity\": \"3\",\n\"image_id\": \"ami-40ddb938\",\n\"user_data\": \"c0ce44366243e25e883dd7c0e3629fefc126e30f42960114881ad671a46d0a8e\",\n\"instance_type\": \"t2.medium\",\n\"key_name\": \"em-accord-deployment\"\n}\n",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "1c36350fb7906e2ab9c2459564c9baf0",
                            "id": "rolling-deploy-initialization/config_data",
                            "key": "rolling-deploy-initialization/config_data",
                            "server_side_encryption": "",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_s3_bucket_object.security_object": {
                    "type": "aws_s3_bucket_object",
                    "depends_on": [
                        "aws_s3_bucket.accord-secrets",
                        "data.archive_file.resource_zip"
                    ],
                    "primary": {
                        "id": "resources.zip",
                        "attributes": {
                            "acl": "private",
                            "bucket": "em-accord-us-west-2-prod",
                            "cache_control": "",
                            "content_disposition": "",
                            "content_encoding": "",
                            "content_language": "",
                            "content_type": "binary/octet-stream",
                            "etag": "d7d4f3a8e64cb50bbcf5f4cd17abfbe3",
                            "id": "resources.zip",
                            "key": "resources.zip",
                            "server_side_encryption": "",
                            "source": "/terraform/resources.zip",
                            "storage_class": "STANDARD",
                            "tags.%": "0",
                            "version_id": "",
                            "website_redirect": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group.sg-consul-cluster": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "sg-0154495937c1200b3",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-west-2:489867994332:security-group/sg-0154495937c1200b3",
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0154495937c1200b3",
                            "ingress.#": "3",
                            "ingress.1286436480.cidr_blocks.#": "0",
                            "ingress.1286436480.description": "",
                            "ingress.1286436480.from_port": "8500",
                            "ingress.1286436480.ipv6_cidr_blocks.#": "0",
                            "ingress.1286436480.prefix_list_ids.#": "0",
                            "ingress.1286436480.protocol": "tcp",
                            "ingress.1286436480.security_groups.#": "1",
                            "ingress.1286436480.security_groups.2938748416": "sg-013055d8fc0faa872",
                            "ingress.1286436480.self": "false",
                            "ingress.1286436480.to_port": "8500",
                            "ingress.2510676008.cidr_blocks.#": "1",
                            "ingress.2510676008.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2510676008.description": "",
                            "ingress.2510676008.from_port": "0",
                            "ingress.2510676008.ipv6_cidr_blocks.#": "0",
                            "ingress.2510676008.prefix_list_ids.#": "0",
                            "ingress.2510676008.protocol": "-1",
                            "ingress.2510676008.security_groups.#": "0",
                            "ingress.2510676008.self": "true",
                            "ingress.2510676008.to_port": "0",
                            "ingress.2555765296.cidr_blocks.#": "2",
                            "ingress.2555765296.cidr_blocks.0": "199.189.124.0/22",
                            "ingress.2555765296.cidr_blocks.1": "209.220.148.0/24",
                            "ingress.2555765296.description": "",
                            "ingress.2555765296.from_port": "22",
                            "ingress.2555765296.ipv6_cidr_blocks.#": "0",
                            "ingress.2555765296.prefix_list_ids.#": "0",
                            "ingress.2555765296.protocol": "tcp",
                            "ingress.2555765296.security_groups.#": "0",
                            "ingress.2555765296.self": "false",
                            "ingress.2555765296.to_port": "22",
                            "name": "consul-cluster-private-us-west-2-prod",
                            "owner_id": "489867994332",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-63254f1a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group.sg-elb": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "sg-013055d8fc0faa872",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-west-2:489867994332:security-group/sg-013055d8fc0faa872",
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-013055d8fc0faa872",
                            "ingress.#": "2",
                            "ingress.2152529044.cidr_blocks.#": "0",
                            "ingress.2152529044.description": "",
                            "ingress.2152529044.from_port": "8500",
                            "ingress.2152529044.ipv6_cidr_blocks.#": "0",
                            "ingress.2152529044.prefix_list_ids.#": "0",
                            "ingress.2152529044.protocol": "tcp",
                            "ingress.2152529044.security_groups.#": "1",
                            "ingress.2152529044.security_groups.1121206196": "sg-0154495937c1200b3",
                            "ingress.2152529044.self": "false",
                            "ingress.2152529044.to_port": "8500",
                            "ingress.3864629342.cidr_blocks.#": "3",
                            "ingress.3864629342.cidr_blocks.0": "199.189.124.0/22",
                            "ingress.3864629342.cidr_blocks.1": "209.220.148.0/24",
                            "ingress.3864629342.cidr_blocks.2": "10.0.0.0/8",
                            "ingress.3864629342.description": "",
                            "ingress.3864629342.from_port": "0",
                            "ingress.3864629342.ipv6_cidr_blocks.#": "0",
                            "ingress.3864629342.prefix_list_ids.#": "0",
                            "ingress.3864629342.protocol": "-1",
                            "ingress.3864629342.security_groups.#": "0",
                            "ingress.3864629342.self": "false",
                            "ingress.3864629342.to_port": "0",
                            "name": "consul-cluster-public-web-us-west-2-prod",
                            "owner_id": "489867994332",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-63254f1a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group_rule.cluster-outbound": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster"
                    ],
                    "primary": {
                        "id": "sgrule-2445456507",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "",
                            "from_port": "0",
                            "id": "sgrule-2445456507",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-0154495937c1200b3",
                            "self": "false",
                            "to_port": "0",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group_rule.cluster-wan-in": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster"
                    ],
                    "primary": {
                        "id": "sgrule-1389004815",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "",
                            "from_port": "8302",
                            "id": "sgrule-1389004815",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-0154495937c1200b3",
                            "self": "false",
                            "to_port": "8302",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group_rule.consul-cluster": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster"
                    ],
                    "primary": {
                        "id": "sgrule-321672169",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "description": "",
                            "from_port": "0",
                            "id": "sgrule-321672169",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-0154495937c1200b3",
                            "self": "true",
                            "source_security_group_id": "sg-0154495937c1200b3",
                            "to_port": "0",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group_rule.elb-outbound": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-elb"
                    ],
                    "primary": {
                        "id": "sgrule-214788446",
                        "attributes": {
                            "cidr_blocks.#": "1",
                            "cidr_blocks.0": "0.0.0.0/0",
                            "description": "",
                            "from_port": "0",
                            "id": "sgrule-214788446",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-013055d8fc0faa872",
                            "self": "false",
                            "to_port": "0",
                            "type": "egress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group_rule.health-check-cluster": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster",
                        "aws_security_group.sg-elb"
                    ],
                    "primary": {
                        "id": "sgrule-761215075",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "description": "",
                            "from_port": "8500",
                            "id": "sgrule-761215075",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-0154495937c1200b3",
                            "self": "false",
                            "source_security_group_id": "sg-013055d8fc0faa872",
                            "to_port": "8500",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group_rule.health-check-elb": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster",
                        "aws_security_group.sg-elb"
                    ],
                    "primary": {
                        "id": "sgrule-3088757943",
                        "attributes": {
                            "cidr_blocks.#": "0",
                            "description": "",
                            "from_port": "8500",
                            "id": "sgrule-3088757943",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-013055d8fc0faa872",
                            "self": "false",
                            "source_security_group_id": "sg-0154495937c1200b3",
                            "to_port": "8500",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group_rule.ssh-cluster": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-consul-cluster"
                    ],
                    "primary": {
                        "id": "sgrule-3255599703",
                        "attributes": {
                            "cidr_blocks.#": "2",
                            "cidr_blocks.0": "199.189.124.0/22",
                            "cidr_blocks.1": "209.220.148.0/24",
                            "description": "",
                            "from_port": "22",
                            "id": "sgrule-3255599703",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "tcp",
                            "security_group_id": "sg-0154495937c1200b3",
                            "self": "false",
                            "to_port": "22",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_security_group_rule.user-elb": {
                    "type": "aws_security_group_rule",
                    "depends_on": [
                        "aws_security_group.sg-elb"
                    ],
                    "primary": {
                        "id": "sgrule-570887242",
                        "attributes": {
                            "cidr_blocks.#": "3",
                            "cidr_blocks.0": "199.189.124.0/22",
                            "cidr_blocks.1": "209.220.148.0/24",
                            "cidr_blocks.2": "10.0.0.0/8",
                            "description": "",
                            "from_port": "443",
                            "id": "sgrule-570887242",
                            "ipv6_cidr_blocks.#": "0",
                            "prefix_list_ids.#": "0",
                            "protocol": "-1",
                            "security_group_id": "sg-013055d8fc0faa872",
                            "self": "false",
                            "to_port": "443",
                            "type": "ingress"
                        },
                        "meta": {
                            "schema_version": "2"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_sfn_state_machine.rolling-deploy-sfn": {
                    "type": "aws_sfn_state_machine",
                    "depends_on": [
                        "aws_iam_role.sfn_role",
                        "aws_s3_bucket_object.resource_object",
                        "data.template_file.rolling-deploy"
                    ],
                    "primary": {
                        "id": "arn:aws:states:us-west-2:489867994332:stateMachine:accord-rolling-deploy-us-west-2-prod",
                        "attributes": {
                            "creation_date": "2018-09-26T23:31:51Z",
                            "definition": "{\n  \"Comment\": \"State machine for initiating rolling deploy for consul cluster.\",\n  \"StartAt\": \"RemoveNode\",\n  \"States\": {\n    \"RemoveNode\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-remove-old-us-west-2-prod\",\n      \"Next\": \"WaitForCluster\"\n    },\n    \"WaitForCluster\": {\n      \"Type\": \"Wait\",\n      \"Seconds\": 300,\n      \"Next\": \"HealthCheck\"\n    },\n    \"HealthCheck\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-health-check-us-west-2-prod\",\n      \"Next\": \"ChoiceCheck\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"],\n          \"MaxAttempts\": 10\n        }\n      ]\n    },\n    \"ChoiceCheck\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n          {\n            \"Variable\": \"$.num_old\",\n            \"NumericGreaterThan\": 0,\n            \"Next\": \"RemoveNode\"\n          }\n      ],\n      \"Default\": \"JobComplete\"\n    },\n    \"JobComplete\": {\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}",
                            "id": "arn:aws:states:us-west-2:489867994332:stateMachine:accord-rolling-deploy-us-west-2-prod",
                            "name": "accord-rolling-deploy-us-west-2-prod",
                            "role_arn": "arn:aws:iam::489867994332:role/em-accord-sfn-us-west-2-prod",
                            "status": "ACTIVE"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "aws_sns_topic.accord-cpu-alarm": {
                    "type": "aws_sns_topic",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:sns:us-west-2:489867994332:accord-cpu-alarm-us-west-2-prod",
                        "attributes": {
                            "application_failure_feedback_role_arn": "",
                            "application_success_feedback_role_arn": "",
                            "application_success_feedback_sample_rate": "0",
                            "arn": "arn:aws:sns:us-west-2:489867994332:accord-cpu-alarm-us-west-2-prod",
                            "delivery_policy": "",
                            "display_name": "",
                            "http_failure_feedback_role_arn": "",
                            "http_success_feedback_role_arn": "",
                            "http_success_feedback_sample_rate": "0",
                            "id": "arn:aws:sns:us-west-2:489867994332:accord-cpu-alarm-us-west-2-prod",
                            "lambda_failure_feedback_role_arn": "",
                            "lambda_success_feedback_role_arn": "",
                            "lambda_success_feedback_sample_rate": "0",
                            "name": "accord-cpu-alarm-us-west-2-prod",
                            "policy": "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\",\"SNS:Receive\"],\"Resource\":\"arn:aws:sns:us-west-2:489867994332:accord-cpu-alarm-us-west-2-prod\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"489867994332\"}}}]}",
                            "sqs_failure_feedback_role_arn": "",
                            "sqs_success_feedback_role_arn": "",
                            "sqs_success_feedback_sample_rate": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.archive_file.resource_zip": {
                    "type": "archive_file",
                    "depends_on": [],
                    "primary": {
                        "id": "ad79b31b58d0258b53d33b802bc73a61135b4d10",
                        "attributes": {
                            "id": "ad79b31b58d0258b53d33b802bc73a61135b4d10",
                            "output_base64sha256": "nCBxjEaYRu4W8LlGPdRaY5T5R4MiJfseAvVECTKtwvQ=",
                            "output_md5": "d7d4f3a8e64cb50bbcf5f4cd17abfbe3",
                            "output_path": "/terraform/resources.zip",
                            "output_sha": "ad79b31b58d0258b53d33b802bc73a61135b4d10",
                            "output_size": "28760984",
                            "source.#": "0",
                            "source_dir": "/terraform/resources",
                            "type": "zip"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.archive"
                },
                "data.aws_caller_identity.current": {
                    "type": "aws_caller_identity",
                    "depends_on": [],
                    "primary": {
                        "id": "2018-11-01 18:27:55.830172355 +0000 UTC",
                        "attributes": {
                            "account_id": "489867994332",
                            "arn": "arn:aws:iam::489867994332:user/em-deploy-tfe-UslG5jTM",
                            "id": "2018-11-01 18:27:55.830172355 +0000 UTC",
                            "user_id": "AIDAI4TTADQVOWJTF4VRA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_iam_policy_document.sfn_assume_role_policy_document": {
                    "type": "aws_iam_policy_document",
                    "depends_on": [],
                    "primary": {
                        "id": "2478221018",
                        "attributes": {
                            "id": "2478221018",
                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"states.amazonaws.com\"\n      }\n    }\n  ]\n}",
                            "statement.#": "1",
                            "statement.0.actions.#": "1",
                            "statement.0.actions.2528466339": "sts:AssumeRole",
                            "statement.0.condition.#": "0",
                            "statement.0.effect": "Allow",
                            "statement.0.not_actions.#": "0",
                            "statement.0.not_principals.#": "0",
                            "statement.0.not_resources.#": "0",
                            "statement.0.principals.#": "1",
                            "statement.0.principals.2091813330.identifiers.#": "1",
                            "statement.0.principals.2091813330.identifiers.2008431988": "states.amazonaws.com",
                            "statement.0.principals.2091813330.type": "Service",
                            "statement.0.resources.#": "0",
                            "statement.0.sid": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_iam_policy_document.sfn_lambda_execution_policy_document": {
                    "type": "aws_iam_policy_document",
                    "depends_on": [],
                    "primary": {
                        "id": "1116219230",
                        "attributes": {
                            "id": "1116219230",
                            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                            "statement.#": "1",
                            "statement.0.actions.#": "1",
                            "statement.0.actions.3363766922": "lambda:InvokeFunction",
                            "statement.0.condition.#": "0",
                            "statement.0.effect": "Allow",
                            "statement.0.not_actions.#": "0",
                            "statement.0.not_principals.#": "0",
                            "statement.0.not_resources.#": "0",
                            "statement.0.principals.#": "0",
                            "statement.0.resources.#": "1",
                            "statement.0.resources.2679715827": "*",
                            "statement.0.sid": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_route53_zone.base_zone": {
                    "type": "aws_route53_zone",
                    "depends_on": [],
                    "primary": {
                        "id": "Z1OR5LT1WEJ4OL",
                        "attributes": {
                            "caller_reference": "2018-04-17 09:23:47.740777",
                            "comment": "PC-4019 by akomala",
                            "id": "Z1OR5LT1WEJ4OL",
                            "name": "accord.ellieservices.com.",
                            "name_servers.#": "4",
                            "name_servers.0": "ns-1956.awsdns-52.co.uk",
                            "name_servers.1": "ns-920.awsdns-51.net",
                            "name_servers.2": "ns-229.awsdns-28.com",
                            "name_servers.3": "ns-1360.awsdns-42.org",
                            "private_zone": "false",
                            "resource_record_set_count": "13",
                            "zone_id": "Z1OR5LT1WEJ4OL"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_subnet.private_subnet_0": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-e9449a90",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-west-2:489867994332:subnet/subnet-e9449a90",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2a",
                            "cidr_block": "10.193.87.96/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.787444477.name": "tag:Name",
                            "filter.787444477.values.#": "1",
                            "filter.787444477.values.4259186353": "Private0*",
                            "id": "subnet-e9449a90",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Private0(us-west-2a)",
                            "vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_subnet.private_subnet_1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-ec877fa7",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-west-2:489867994332:subnet/subnet-ec877fa7",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2b",
                            "cidr_block": "10.193.87.128/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.328162125.name": "tag:Name",
                            "filter.328162125.values.#": "1",
                            "filter.328162125.values.4229721222": "Private1*",
                            "id": "subnet-ec877fa7",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Private1(us-west-2b)",
                            "vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_subnet.private_subnet_2": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-baad28e0",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-west-2:489867994332:subnet/subnet-baad28e0",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2c",
                            "cidr_block": "10.193.87.160/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.1412374941.name": "tag:Name",
                            "filter.1412374941.values.#": "1",
                            "filter.1412374941.values.4267365087": "Private2*",
                            "id": "subnet-baad28e0",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Private2(us-west-2c)",
                            "vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_subnet.public_subnet_0": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-fd439d84",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-west-2:489867994332:subnet/subnet-fd439d84",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2a",
                            "cidr_block": "10.193.87.0/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.536144450.name": "tag:Name",
                            "filter.536144450.values.#": "1",
                            "filter.536144450.values.1414452620": "Public0*",
                            "id": "subnet-fd439d84",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Public0(us-west-2a)",
                            "vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_subnet.public_subnet_1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-4bf80000",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-west-2:489867994332:subnet/subnet-4bf80000",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2b",
                            "cidr_block": "10.193.87.32/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.580174834.name": "tag:Name",
                            "filter.580174834.values.#": "1",
                            "filter.580174834.values.1435287483": "Public1*",
                            "id": "subnet-4bf80000",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Public1(us-west-2b)",
                            "vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_subnet.public_subnet_2": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "data.aws_vpc.elmae"
                    ],
                    "primary": {
                        "id": "subnet-b4ac29ee",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-west-2:489867994332:subnet/subnet-b4ac29ee",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-west-2c",
                            "cidr_block": "10.193.87.64/27",
                            "default_for_az": "false",
                            "filter.#": "1",
                            "filter.1697954082.name": "tag:Name",
                            "filter.1697954082.values.#": "1",
                            "filter.1697954082.values.1472856546": "Public2*",
                            "id": "subnet-b4ac29ee",
                            "map_public_ip_on_launch": "false",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "Public2(us-west-2c)",
                            "vpc_id": "vpc-63254f1a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.aws_vpc.elmae": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-63254f1a",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-west-2:489867994332:vpc/vpc-63254f1a",
                            "cidr_block": "10.193.87.0/24",
                            "cidr_block_associations.#": "1",
                            "cidr_block_associations.0.association_id": "vpc-cidr-assoc-6e89ba05",
                            "cidr_block_associations.0.cidr_block": "10.193.87.0/24",
                            "cidr_block_associations.0.state": "associated",
                            "default": "false",
                            "dhcp_options_id": "dopt-61148118",
                            "enable_dns_hostnames": "false",
                            "enable_dns_support": "true",
                            "id": "vpc-63254f1a",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-5058c028",
                            "state": "available",
                            "tags.%": "1",
                            "tags.Name": "elmae-default"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.west-2.provider.aws"
                },
                "data.template_file.consul-cluster-template": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_kms_alias.accord",
                        "aws_s3_bucket.accord-secrets"
                    ],
                    "primary": {
                        "id": "c0ce44366243e25e883dd7c0e3629fefc126e30f42960114881ad671a46d0a8e",
                        "attributes": {
                            "id": "c0ce44366243e25e883dd7c0e3629fefc126e30f42960114881ad671a46d0a8e",
                            "rendered": "#!/bin/bash -ex\n\nyum update -y\n\n# Install collectd\nyum install collectd -y\n\n# Install AWS Log Agent\nyum install -y awslogs\n\n# Configure the AWS Log Agent\nmkdir -p /var/awslogs/state\ncat \u003e /etc/awslogs/awslogs.conf \u003c\u003cEOF\n[general]\nstate_file = /var/awslogs/state/agent-state\n[/var/log/messages]\nfile = /var/log/messages\nlog_group_name = accord-prod-consul_logs\nlog_stream_name = {instance_id}\ndatetime_format = %b %d %H:%M:%S\nEOF\n\ncat \u003e /etc/awslogs/awscli.conf \u003c\u003cEOF\n[plugins]\ncwlogs = cwlogs\n[default]\nregion = us-west-2\nEOF\n\nservice awslogs start\n\n# Seperate Consul logs out\n# cat \u003e\u003e \"local0.* /var/log/consul.log\" \u003e\u003e /etc/rsyslogd.conf\n# /etc/init.d/rsyslogd restart\n\n\necho 'installing additional software'\nfor i in {1..5}\ndo\n    yum install -y aws-cli \u0026\u0026 break || sleep 120\ndone\n\n# Install collectd-python plugin\nyum install -y collectd-python\n\nADDR=($(hostname -I))\ninstance_name=$(hostname)\n\ncat \u003e /etc/hosts \u003c\u003cEOF\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost6 localhost6.localdomain6\n$ADDR $instance_name\nEOF\n\n#easy_install pip\n\nyum install python27-pip -y\n\n# Download the setup script for cloudwatch collectd\nARTIFACTORY_USER=\"svc-accord-deploy\"\nARTIFACTORY_PASSWORD=\"xUd2s4F^V/nXVPq\"\ncurl -u $ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD https://artifactory-stg.elliemae.io/artifactory/deploy/cloudwatch-collectd/setup.py -o /tmp/setup.py\nchmod a+x /tmp/setup.py\npython /tmp/setup.py -I -m add\n\ncat \u003e\u003e /opt/collectd-plugins/cloudwatch/config/whitelist.conf \u003c\u003cEOF\nstatsd--.*\nEOF\n\n#Configure collectd and statsd plugin\ncat \u003e\u003e /etc/collectd.conf \u003c\u003cEOF\nLoadPlugin statsd\n\u003cPlugin statsd\u003e\n    Host \"::\"\n    Port \"8125\"\n    DeleteSets     true\n    TimerPercentile 90.0\n\u003c/Plugin\u003e\nLoadPlugin logfile\n\u003cPlugin logfile\u003e\n       LogLevel info\n       File \"/var/log/collectd.log\"\n       Timestamp true\n       PrintSeverity false\n\u003c/Plugin\u003e\nEOF\n\n# Restart the collectd service\n/etc/init.d/collectd restart\n\nASG_NAME=\"consul-cluster-asg-us-west-2-prod\"\nREGION=\"us-west-2\"\nENV=\"prod\"\nKMSALIAS=\"alias/accord-us-west-2-prod\"\nEXPECTED_SIZE=\"3\"\nBUCKET=\"em-accord-us-west-2-prod\"\nUUID=$(uuidgen)\nSNAPSHOT=$BUCKET\"/snapshots/\"\n\n#install security agents\nyum install -y unzip\naws s3 cp s3://em-accord-$REGION-$ENV/resources.zip resources.zip\nunzip resources.zip\nbash security_agents.sh\n\n\n# Return the id of each instance in the cluster.\nfunction cluster-instance-ids {\n    # Grab every line which contains 'InstanceId', cut on double quotes and grab the ID:\n    #    \"InstanceId\": \"i-example123\"\n    #....^..........^..^.....#4.....^...\n    aws --region=\"$REGION\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG_NAME \\\n        | grep InstanceId \\\n        | cut -d '\"' -f4\n}\n\n# Return the private IP of each instance in the cluster.\nfunction cluster-ips {\n    for id in $(cluster-instance-ids)\n    do\n        aws --region=\"$REGION\" ec2 describe-instances \\\n            --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n            --output=\"text\" \\\n            --instance-ids=\"$id\"\n    done\n}\n\n\nfunction diff-cluster-instance-ids {\n    # Grab every line which contains 'InstanceId', cut on double quotes and grab the ID:\n    #    \"InstanceId\": \"i-example123\"\n    #....^..........^..^.....#4.....^...\n    if [ \"$REGION\" == \"us-east-1\" ]; then\n        ASG=\"consul-cluster-asg-us-west-2-$ENV\"\n        aws --region=\"us-west-2\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG \\\n            | grep InstanceId \\\n            | cut -d '\"' -f4\n    else\n        ASG=\"consul-cluster-asg-us-east-1-$ENV\"\n        aws --region=\"us-east-1\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG \\\n            | grep InstanceId \\\n            | cut -d '\"' -f4\n    fi\n}\n\n# Return the private IP of each instance in the cluster.\nfunction diff-cluster-ips {\n    if [ \"$REGION\" == \"us-east-1\" ]; then\n        for id in $(diff-cluster-instance-ids)\n        do\n            aws --region=\"us-west-2\" ec2 describe-instances \\\n                --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n                --output=\"text\" \\\n                --instance-ids=\"$id\"\n        done\n    else\n        for id in $(diff-cluster-instance-ids)\n        do\n            aws --region=\"us-east-1\" ec2 describe-instances \\\n                --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n                --output=\"text\" \\\n                --instance-ids=\"$id\"\n        done\n    fi\n}\n\n\n# Wait until we have as many cluster instances as we are expecting.\nwhile COUNT=$(cluster-instance-ids | wc -l) \u0026\u0026 [ \"$COUNT\" -lt \"$EXPECTED_SIZE\" ]\ndo\n    echo \"$COUNT instances in the cluster, waiting for $EXPECTED_SIZE instances to warm up...\"\n    sleep 1\ndone\n\nwhile DIFFCOUNT=$(diff-cluster-instance-ids | wc -l) \u0026\u0026 [ \"$DIFFCOUNT\" -lt \"$EXPECTED_SIZE\" ]\ndo\n    echo \"$DIFFCOUNT instances in the OTHER cluster, waiting for $EXPECTED_SIZE instances to warm up...\"\n    sleep 1\ndone\n\n# Get my IP address, all IPs in the cluster, then just the 'other' IPs...\nIP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\nmapfile -t ALL_IPS \u003c \u003c(cluster-ips)\nOTHER_IPS=( ${ALL_IPS[@]/${IP}/} )\necho \"Instance IP is: $IP, Cluster IPs are: ${ALL_IPS[@]}, Other IPs are: ${OTHER_IPS[@]}\"\n\nmapfile -t WAN_IPS \u003c \u003c(diff-cluster-ips)\n\n# create join string\nfor i in $(echo ${OTHER_IPS[@]} | sed \"s/,/ /g\")\ndo\n    JOIN_STRING+=\"-retry-join $i \"\ndone\n\n# Prepare join string for WAN join\nfor i in $(echo ${WAN_IPS[@]} | sed \"s/,/ /g\")\ndo\n    WAN_JOIN+=\"-retry-join-wan $i \"\ndone\n\necho \"WAN ips are: $WAN_JOIN\"\n\n# pull docker image from artifactory (new for supporting rolling deploy)\ndocker login -u $ARTIFACTORY_USER -p $ARTIFACTORY_PASSWORD docker-local.artifactory-stg.elliemae.io\ndocker pull docker-local.artifactory-stg.elliemae.io/consul:latest\n\nif [ \"$REGION\" == \"us-west-2\" ]; then\n    docker run -v /dev/log:/dev/log -d -p \"8125:8125\" --net=host \\\n    --name=consul \\\n    -e CONSUL_LOCAL_CONFIG=\"{\n    \\\"acl_datacenter\\\": \\\"$REGION\\\",\n    \\\"acl_default_policy\\\": \\\"deny\\\",\n    \\\"enable_acl_replication\\\": true,\n    \\\"enable_syslog\\\": true,\n    \\\"telemetry\\\": {\n        \\\"statsd_address\\\": \\\"127.0.0.1:8125\\\"\n    },\n    \\\"autopilot\\\": {\n        \\\"cleanup_dead_servers\\\": true,\n        \\\"last_contact_threshold\\\": \\\"200ms\\\",\n        \\\"max_trailing_logs\\\": 250,\n        \\\"server_stabilization_time\\\": \\\"10s\\\",\n        \\\"redundancy_zone_tag\\\": \\\"az\\\",\n        \\\"disable_upgrade_migration\\\": false,\n        \\\"upgrade_version_tag\\\": \\\"\\\"\n    }\n}\" \\\n    docker-local.artifactory-stg.elliemae.io/consul:latest agent -server -ui \\\n    -datacenter=\"$REGION\" \\\n    -bind=\"$IP\" \\\n    -client=\"0.0.0.0\" \\\n    $JOIN_STRING\\\n    $WAN_JOIN \\\n    -bootstrap-expect=\"$EXPECTED_SIZE\"\nelse\n    MAIN_BUCKET=\"em-accord-us-west-2-$ENV\"\n    while [ true ];\n    do\n        echo aws s3 cp s3://$MAIN_BUCKET/master-acl master-acl\n        aws s3 cp s3://$MAIN_BUCKET/master-acl master-acl\n        result=$?\n        echo Tried Fetch - $result\n        if [ \"$result\" == \"0\" ]; then\n            echo Fetched Successfully\n            break\n        fi\n        echo Main datacenter in us-west-2 is still bootstrapping. Wait!\n        sleep 1\n    done\n    aws --region $REGION s3 cp ./master-acl s3://$BUCKET/\n    RAW=$(aws kms decrypt --region us-west-2 --ciphertext-blob fileb://master-acl --output text --query Plaintext | base64 --decode)\n    MASTER=$(echo $RAW | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n    rm master-acl\n    docker run -v /dev/log:/dev/log -d -p \"8125:8125\" --net=host \\\n    --name=consul \\\n    -e CONSUL_LOCAL_CONFIG=\"{\n    \\\"acl_datacenter\\\": \\\"us-west-2\\\",\n    \\\"acl_default_policy\\\": \\\"deny\\\",\n    \\\"acl_master_token\\\": \\\"$MASTER\\\",\n    \\\"acl_replication_token\\\": \\\"$MASTER\\\",\n    \\\"enable_syslog\\\": true,\n    \\\"telemetry\\\": {\n        \\\"statsd_address\\\": \\\"127.0.0.1:8125\\\"\n    },\n    \\\"autopilot\\\": {\n        \\\"cleanup_dead_servers\\\": true,\n        \\\"last_contact_threshold\\\": \\\"200ms\\\",\n        \\\"max_trailing_logs\\\": 250,\n        \\\"server_stabilization_time\\\": \\\"10s\\\",\n        \\\"redundancy_zone_tag\\\": \\\"az\\\",\n        \\\"disable_upgrade_migration\\\": false,\n        \\\"upgrade_version_tag\\\": \\\"\\\"\n    }\n}\" \\\n    docker-local.artifactory-stg.elliemae.io/consul:latest agent -server -ui \\\n    -datacenter=\"$REGION\" \\\n    -bind=\"$IP\" \\\n    -client=\"0.0.0.0\" \\\n    $JOIN_STRING\\\n    $WAN_JOIN \\\n    -bootstrap-expect=\"$EXPECTED_SIZE\"\nfi\n\n# waiting for leader to be elected before creating master acl\nCURLURL=\"$IP:8500/v1/status/leader\"\nwhile ! curl $CURLURL 2\u003e\u00261 | grep -E '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}:[0-9]{1,4}'; do\n    echo \"Waiting for leader election...\";\n    sleep 1;\ndone\n\nURL=\"http://\"$ADDR\":8500/agent/token/acl_replication_token\"\n\nif [ \"$REGION\" == \"us-west-2\" ]; then\n    # only commit real master token if first node. All other nodes fail.\n    MASTER_TOKEN=$(curl --request PUT $IP:8500/v1/acl/bootstrap)\n    if echo $MASTER_TOKEN 2\u003e\u00261|grep -q 'ID'; then\n        echo $MASTER_TOKEN \u003e plaintext-password;\n        aws --region $REGION kms encrypt  \\\n            --key-id $KMSALIAS \\\n            --plaintext fileb://plaintext-password \\\n            --output text --query CiphertextBlob | \\\n            base64 --decode \u003e ./master-acl;\n        rm -rf plaintext-password;\n        aws --region $REGION s3 cp ./master-acl s3://$BUCKET/\n        echo \"successfully created and committed master acl\" \u003e status$UUID\n        TOKEN_ONLY=$(echo $MASTER_TOKEN | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n        REPLICATION_TOKEN=\"{\\\"Token\\\":\"\\\"$TOKEN_ONLY\\\"\"}\"\n        curl --request PUT --data $REPLICATION_TOKEN $URL\n        MASTER_TOKEN=deleted\n    else\n        echo \"master acl already created\" \u003e status$UUID\n        aws s3 cp s3://$BUCKET/master-acl ./master-acl\n        RAW=$(aws kms decrypt --region us-west-2 --ciphertext-blob fileb://master-acl --output text --query Plaintext | base64 --decode)\n        MASTER=$(echo $RAW | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n        REPLICATION_TOKEN=\"{\\\"Token\\\":\"\\\"$MASTER\\\"\"}\"\n        curl --request PUT --data $REPLICATION_TOKEN $URL\n    fi\nfi\n\nif [ \"$REGION\" == \"us-east-1\" ]; then\n    docker exec -d consul consul-replicate -prefix \"environments@us-west-2\" -consul-token=$MASTER\nfi",
                            "template": "#!/bin/bash -ex\n\nyum update -y\n\n# Install collectd\nyum install collectd -y\n\n# Install AWS Log Agent\nyum install -y awslogs\n\n# Configure the AWS Log Agent\nmkdir -p /var/awslogs/state\ncat \u003e /etc/awslogs/awslogs.conf \u003c\u003cEOF\n[general]\nstate_file = /var/awslogs/state/agent-state\n[/var/log/messages]\nfile = /var/log/messages\nlog_group_name = accord-${env}-consul_logs\nlog_stream_name = {instance_id}\ndatetime_format = %b %d %H:%M:%S\nEOF\n\ncat \u003e /etc/awslogs/awscli.conf \u003c\u003cEOF\n[plugins]\ncwlogs = cwlogs\n[default]\nregion = ${region}\nEOF\n\nservice awslogs start\n\n# Seperate Consul logs out\n# cat \u003e\u003e \"local0.* /var/log/consul.log\" \u003e\u003e /etc/rsyslogd.conf\n# /etc/init.d/rsyslogd restart\n\n\necho 'installing additional software'\nfor i in {1..5}\ndo\n    yum install -y aws-cli \u0026\u0026 break || sleep 120\ndone\n\n# Install collectd-python plugin\nyum install -y collectd-python\n\nADDR=($(hostname -I))\ninstance_name=$(hostname)\n\ncat \u003e /etc/hosts \u003c\u003cEOF\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost6 localhost6.localdomain6\n$ADDR $instance_name\nEOF\n\n#easy_install pip\n\nyum install python27-pip -y\n\n# Download the setup script for cloudwatch collectd\nARTIFACTORY_USER=\"${artifactory_user}\"\nARTIFACTORY_PASSWORD=\"${artifactory_password}\"\ncurl -u $ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD https://artifactory-stg.elliemae.io/artifactory/deploy/cloudwatch-collectd/setup.py -o /tmp/setup.py\nchmod a+x /tmp/setup.py\npython /tmp/setup.py -I -m add\n\ncat \u003e\u003e /opt/collectd-plugins/cloudwatch/config/whitelist.conf \u003c\u003cEOF\nstatsd--.*\nEOF\n\n#Configure collectd and statsd plugin\ncat \u003e\u003e /etc/collectd.conf \u003c\u003cEOF\nLoadPlugin statsd\n\u003cPlugin statsd\u003e\n    Host \"::\"\n    Port \"8125\"\n    DeleteSets     true\n    TimerPercentile 90.0\n\u003c/Plugin\u003e\nLoadPlugin logfile\n\u003cPlugin logfile\u003e\n       LogLevel info\n       File \"/var/log/collectd.log\"\n       Timestamp true\n       PrintSeverity false\n\u003c/Plugin\u003e\nEOF\n\n# Restart the collectd service\n/etc/init.d/collectd restart\n\nASG_NAME=\"${asgname}\"\nREGION=\"${region}\"\nENV=\"${env}\"\nKMSALIAS=\"${kmsalias}\"\nEXPECTED_SIZE=\"${cluster_size}\"\nBUCKET=\"${bucket}\"\nUUID=$(uuidgen)\nSNAPSHOT=$BUCKET\"/snapshots/\"\n\n#install security agents\nyum install -y unzip\naws s3 cp s3://em-accord-$REGION-$ENV/resources.zip resources.zip\nunzip resources.zip\nbash security_agents.sh\n\n\n# Return the id of each instance in the cluster.\nfunction cluster-instance-ids {\n    # Grab every line which contains 'InstanceId', cut on double quotes and grab the ID:\n    #    \"InstanceId\": \"i-example123\"\n    #....^..........^..^.....#4.....^...\n    aws --region=\"$REGION\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG_NAME \\\n        | grep InstanceId \\\n        | cut -d '\"' -f4\n}\n\n# Return the private IP of each instance in the cluster.\nfunction cluster-ips {\n    for id in $(cluster-instance-ids)\n    do\n        aws --region=\"$REGION\" ec2 describe-instances \\\n            --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n            --output=\"text\" \\\n            --instance-ids=\"$id\"\n    done\n}\n\n\nfunction diff-cluster-instance-ids {\n    # Grab every line which contains 'InstanceId', cut on double quotes and grab the ID:\n    #    \"InstanceId\": \"i-example123\"\n    #....^..........^..^.....#4.....^...\n    if [ \"$REGION\" == \"us-east-1\" ]; then\n        ASG=\"consul-cluster-asg-us-west-2-$ENV\"\n        aws --region=\"us-west-2\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG \\\n            | grep InstanceId \\\n            | cut -d '\"' -f4\n    else\n        ASG=\"consul-cluster-asg-us-east-1-$ENV\"\n        aws --region=\"us-east-1\" autoscaling describe-auto-scaling-groups --auto-scaling-group-name $ASG \\\n            | grep InstanceId \\\n            | cut -d '\"' -f4\n    fi\n}\n\n# Return the private IP of each instance in the cluster.\nfunction diff-cluster-ips {\n    if [ \"$REGION\" == \"us-east-1\" ]; then\n        for id in $(diff-cluster-instance-ids)\n        do\n            aws --region=\"us-west-2\" ec2 describe-instances \\\n                --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n                --output=\"text\" \\\n                --instance-ids=\"$id\"\n        done\n    else\n        for id in $(diff-cluster-instance-ids)\n        do\n            aws --region=\"us-east-1\" ec2 describe-instances \\\n                --query=\"Reservations[].Instances[].[PrivateIpAddress]\" \\\n                --output=\"text\" \\\n                --instance-ids=\"$id\"\n        done\n    fi\n}\n\n\n# Wait until we have as many cluster instances as we are expecting.\nwhile COUNT=$(cluster-instance-ids | wc -l) \u0026\u0026 [ \"$COUNT\" -lt \"$EXPECTED_SIZE\" ]\ndo\n    echo \"$COUNT instances in the cluster, waiting for $EXPECTED_SIZE instances to warm up...\"\n    sleep 1\ndone\n\nwhile DIFFCOUNT=$(diff-cluster-instance-ids | wc -l) \u0026\u0026 [ \"$DIFFCOUNT\" -lt \"$EXPECTED_SIZE\" ]\ndo\n    echo \"$DIFFCOUNT instances in the OTHER cluster, waiting for $EXPECTED_SIZE instances to warm up...\"\n    sleep 1\ndone\n\n# Get my IP address, all IPs in the cluster, then just the 'other' IPs...\nIP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\nmapfile -t ALL_IPS \u003c \u003c(cluster-ips)\nOTHER_IPS=( $${ALL_IPS[@]/$${IP}/} )\necho \"Instance IP is: $IP, Cluster IPs are: $${ALL_IPS[@]}, Other IPs are: $${OTHER_IPS[@]}\"\n\nmapfile -t WAN_IPS \u003c \u003c(diff-cluster-ips)\n\n# create join string\nfor i in $(echo $${OTHER_IPS[@]} | sed \"s/,/ /g\")\ndo\n    JOIN_STRING+=\"-retry-join $i \"\ndone\n\n# Prepare join string for WAN join\nfor i in $(echo $${WAN_IPS[@]} | sed \"s/,/ /g\")\ndo\n    WAN_JOIN+=\"-retry-join-wan $i \"\ndone\n\necho \"WAN ips are: $WAN_JOIN\"\n\n# pull docker image from artifactory (new for supporting rolling deploy)\ndocker login -u $ARTIFACTORY_USER -p $ARTIFACTORY_PASSWORD docker-local.artifactory-stg.elliemae.io\ndocker pull docker-local.artifactory-stg.elliemae.io/consul:latest\n\nif [ \"$REGION\" == \"us-west-2\" ]; then\n    docker run -v /dev/log:/dev/log -d -p \"8125:8125\" --net=host \\\n    --name=consul \\\n    -e CONSUL_LOCAL_CONFIG=\"{\n    \\\"acl_datacenter\\\": \\\"$REGION\\\",\n    \\\"acl_default_policy\\\": \\\"deny\\\",\n    \\\"enable_acl_replication\\\": true,\n    \\\"enable_syslog\\\": true,\n    \\\"telemetry\\\": {\n        \\\"statsd_address\\\": \\\"127.0.0.1:8125\\\"\n    },\n    \\\"autopilot\\\": {\n        \\\"cleanup_dead_servers\\\": true,\n        \\\"last_contact_threshold\\\": \\\"200ms\\\",\n        \\\"max_trailing_logs\\\": 250,\n        \\\"server_stabilization_time\\\": \\\"10s\\\",\n        \\\"redundancy_zone_tag\\\": \\\"az\\\",\n        \\\"disable_upgrade_migration\\\": false,\n        \\\"upgrade_version_tag\\\": \\\"\\\"\n    }\n}\" \\\n    docker-local.artifactory-stg.elliemae.io/consul:latest agent -server -ui \\\n    -datacenter=\"$REGION\" \\\n    -bind=\"$$IP\" \\\n    -client=\"0.0.0.0\" \\\n    $JOIN_STRING\\\n    $WAN_JOIN \\\n    -bootstrap-expect=\"$EXPECTED_SIZE\"\nelse\n    MAIN_BUCKET=\"em-accord-us-west-2-$ENV\"\n    while [ true ];\n    do\n        echo aws s3 cp s3://$MAIN_BUCKET/master-acl master-acl\n        aws s3 cp s3://$MAIN_BUCKET/master-acl master-acl\n        result=$?\n        echo Tried Fetch - $result\n        if [ \"$result\" == \"0\" ]; then\n            echo Fetched Successfully\n            break\n        fi\n        echo Main datacenter in us-west-2 is still bootstrapping. Wait!\n        sleep 1\n    done\n    aws --region $REGION s3 cp ./master-acl s3://$BUCKET/\n    RAW=$(aws kms decrypt --region us-west-2 --ciphertext-blob fileb://master-acl --output text --query Plaintext | base64 --decode)\n    MASTER=$(echo $RAW | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n    rm master-acl\n    docker run -v /dev/log:/dev/log -d -p \"8125:8125\" --net=host \\\n    --name=consul \\\n    -e CONSUL_LOCAL_CONFIG=\"{\n    \\\"acl_datacenter\\\": \\\"us-west-2\\\",\n    \\\"acl_default_policy\\\": \\\"deny\\\",\n    \\\"acl_master_token\\\": \\\"$MASTER\\\",\n    \\\"acl_replication_token\\\": \\\"$MASTER\\\",\n    \\\"enable_syslog\\\": true,\n    \\\"telemetry\\\": {\n        \\\"statsd_address\\\": \\\"127.0.0.1:8125\\\"\n    },\n    \\\"autopilot\\\": {\n        \\\"cleanup_dead_servers\\\": true,\n        \\\"last_contact_threshold\\\": \\\"200ms\\\",\n        \\\"max_trailing_logs\\\": 250,\n        \\\"server_stabilization_time\\\": \\\"10s\\\",\n        \\\"redundancy_zone_tag\\\": \\\"az\\\",\n        \\\"disable_upgrade_migration\\\": false,\n        \\\"upgrade_version_tag\\\": \\\"\\\"\n    }\n}\" \\\n    docker-local.artifactory-stg.elliemae.io/consul:latest agent -server -ui \\\n    -datacenter=\"$REGION\" \\\n    -bind=\"$$IP\" \\\n    -client=\"0.0.0.0\" \\\n    $JOIN_STRING\\\n    $WAN_JOIN \\\n    -bootstrap-expect=\"$EXPECTED_SIZE\"\nfi\n\n# waiting for leader to be elected before creating master acl\nCURLURL=\"$IP:8500/v1/status/leader\"\nwhile ! curl $CURLURL 2\u003e\u00261 | grep -E '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}:[0-9]{1,4}'; do\n    echo \"Waiting for leader election...\";\n    sleep 1;\ndone\n\nURL=\"http://\"$ADDR\":8500/agent/token/acl_replication_token\"\n\nif [ \"$REGION\" == \"us-west-2\" ]; then\n    # only commit real master token if first node. All other nodes fail.\n    MASTER_TOKEN=$(curl --request PUT $IP:8500/v1/acl/bootstrap)\n    if echo $MASTER_TOKEN 2\u003e\u00261|grep -q 'ID'; then\n        echo $MASTER_TOKEN \u003e plaintext-password;\n        aws --region $REGION kms encrypt  \\\n            --key-id $KMSALIAS \\\n            --plaintext fileb://plaintext-password \\\n            --output text --query CiphertextBlob | \\\n            base64 --decode \u003e ./master-acl;\n        rm -rf plaintext-password;\n        aws --region $REGION s3 cp ./master-acl s3://$BUCKET/\n        echo \"successfully created and committed master acl\" \u003e status$UUID\n        TOKEN_ONLY=$(echo $$MASTER_TOKEN | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n        REPLICATION_TOKEN=\"{\\\"Token\\\":\"\\\"$TOKEN_ONLY\\\"\"}\"\n        curl --request PUT --data $REPLICATION_TOKEN $URL\n        MASTER_TOKEN=deleted\n    else\n        echo \"master acl already created\" \u003e status$UUID\n        aws s3 cp s3://$BUCKET/master-acl ./master-acl\n        RAW=$(aws kms decrypt --region us-west-2 --ciphertext-blob fileb://master-acl --output text --query Plaintext | base64 --decode)\n        MASTER=$(echo $RAW | python -c 'import json,sys;obj=json.load(sys.stdin);print obj[\"ID\"]')\n        REPLICATION_TOKEN=\"{\\\"Token\\\":\"\\\"$MASTER\\\"\"}\"\n        curl --request PUT --data $REPLICATION_TOKEN $URL\n    fi\nfi\n\nif [ \"$REGION\" == \"us-east-1\" ]; then\n    docker exec -d consul consul-replicate -prefix \"environments@us-west-2\" -consul-token=$MASTER\nfi",
                            "vars.%": "9",
                            "vars.artifactory_password": "xUd2s4F^V/nXVPq",
                            "vars.artifactory_user": "svc-accord-deploy",
                            "vars.asgname": "consul-cluster-asg-us-west-2-prod",
                            "vars.bucket": "em-accord-us-west-2-prod",
                            "vars.cluster_size": "3",
                            "vars.env": "prod",
                            "vars.kmsalias": "alias/accord-us-west-2-prod",
                            "vars.min_size": "3",
                            "vars.region": "us-west-2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.rolling-deploy": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_lambda_function.rolling-deploy-health-check",
                        "aws_lambda_function.rolling-deploy-remove-old"
                    ],
                    "primary": {
                        "id": "17f8fb67f5a0b5b29c6bc994244bbea91e39e82f54b6d21907c01a075f6be5fc",
                        "attributes": {
                            "id": "17f8fb67f5a0b5b29c6bc994244bbea91e39e82f54b6d21907c01a075f6be5fc",
                            "rendered": "{\n  \"Comment\": \"State machine for initiating rolling deploy for consul cluster.\",\n  \"StartAt\": \"RemoveNode\",\n  \"States\": {\n    \"RemoveNode\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-remove-old-us-west-2-prod\",\n      \"Next\": \"WaitForCluster\"\n    },\n    \"WaitForCluster\": {\n      \"Type\": \"Wait\",\n      \"Seconds\": 300,\n      \"Next\": \"HealthCheck\"\n    },\n    \"HealthCheck\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-health-check-us-west-2-prod\",\n      \"Next\": \"ChoiceCheck\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"],\n          \"MaxAttempts\": 10\n        }\n      ]\n    },\n    \"ChoiceCheck\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n          {\n            \"Variable\": \"$.num_old\",\n            \"NumericGreaterThan\": 0,\n            \"Next\": \"RemoveNode\"\n          }\n      ],\n      \"Default\": \"JobComplete\"\n    },\n    \"JobComplete\": {\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}",
                            "template": "{\n  \"Comment\": \"State machine for initiating rolling deploy for consul cluster.\",\n  \"StartAt\": \"RemoveNode\",\n  \"States\": {\n    \"RemoveNode\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${REMOVEOLDNODES}\",\n      \"Next\": \"WaitForCluster\"\n    },\n    \"WaitForCluster\": {\n      \"Type\": \"Wait\",\n      \"Seconds\": 300,\n      \"Next\": \"HealthCheck\"\n    },\n    \"HealthCheck\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${HEALTHCHECK}\",\n      \"Next\": \"ChoiceCheck\",\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\"States.ALL\"],\n          \"MaxAttempts\": 10\n        }\n      ]\n    },\n    \"ChoiceCheck\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n          {\n            \"Variable\": \"$.num_old\",\n            \"NumericGreaterThan\": 0,\n            \"Next\": \"RemoveNode\"\n          }\n      ],\n      \"Default\": \"JobComplete\"\n    },\n    \"JobComplete\": {\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}",
                            "vars.%": "2",
                            "vars.HEALTHCHECK": "arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-health-check-us-west-2-prod",
                            "vars.REMOVEOLDNODES": "arn:aws:lambda:us-west-2:489867994332:function:accord-rolling-deploy-remove-old-us-west-2-prod"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.trigger-file": {
                    "type": "template_file",
                    "depends_on": [
                        "data.template_file.consul-cluster-template"
                    ],
                    "primary": {
                        "id": "0e8d5d8af4f58640cd86dc77e67918dcb23c5f207b41546be31846055244b2fd",
                        "attributes": {
                            "id": "0e8d5d8af4f58640cd86dc77e67918dcb23c5f207b41546be31846055244b2fd",
                            "rendered": "{\n\"name\": \"consul-cluster-asg-us-west-2-prod\",\n\"min_size\": \"3\",\n\"max_size\": \"6\",\n\"desired_capacity\": \"3\",\n\"min_elb_capacity\": \"3\",\n\"image_id\": \"ami-40ddb938\",\n\"user_data\": \"c0ce44366243e25e883dd7c0e3629fefc126e30f42960114881ad671a46d0a8e\",\n\"instance_type\": \"t2.medium\",\n\"key_name\": \"em-accord-deployment\"\n}\n",
                            "template": "{\n\"name\": \"${name}\",\n\"min_size\": \"${min_size}\",\n\"max_size\": \"${max_size}\",\n\"desired_capacity\": \"${desired_capacity}\",\n\"min_elb_capacity\": \"${min_elb_capacity}\",\n\"image_id\": \"${image_id}\",\n\"user_data\": \"${user_data}\",\n\"instance_type\": \"${instance_type}\",\n\"key_name\": \"${key_name}\"\n}\n",
                            "vars.%": "10",
                            "vars.cluster_size": "3",
                            "vars.desired_capacity": "3",
                            "vars.image_id": "ami-40ddb938",
                            "vars.instance_type": "t2.medium",
                            "vars.key_name": "em-accord-deployment",
                            "vars.max_size": "6",
                            "vars.min_elb_capacity": "3",
                            "vars.min_size": "3",
                            "vars.name": "consul-cluster-asg-us-west-2-prod",
                            "vars.user_data": "c0ce44366243e25e883dd7c0e3629fefc126e30f42960114881ad671a46d0a8e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}
